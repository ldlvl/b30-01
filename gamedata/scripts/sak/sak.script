---------------------------------------------------------------------
-- Привет от Сяка
---------------------------------------------------------------------
af_count             = 0
arts_operate         = false
game_began           = false
black_bonus          = 1
weap_hide            = false
flag_sah             = false
mass_add             = 0
bad_objs             = {}
dog_psy              = 0
day_shmoney          = 1

local kolb           = false
local snd_volume     = 1
local sim            = alife()
local r_old          = 0.45
local self_rep_boxes = {}
local mask_poison    = 0
local t_s_1          = 300000
local torch_id       = 1734
local have_many      = 0
local astma          = false
local statys_psy     = 0

local table_food = {
    [ "bread"         ] = true,
    [ "kolbasa"       ] = true,
    [ "suhpay"        ] = true,
    [ "green_kolbasa" ] = true,
    [ "vodka"         ] = true,
    [ "energy_drink"  ] = true,
    [ "conserva"      ] = true
}

local table_aart = {
    [ "af_medusa"           ] = true,
    [ "af_vyvert"           ] = true,
    [ "af_blood"            ] = true,
    [ "af_electra_sparkler" ] = true,
    [ "af_drops"            ] = true,
    [ "af_ameba_slime"      ] = true,
    [ "af_rusty_thorn"      ] = true
}

local trs_sid_sound = {
    [ 88   ] = "3",  [ 89   ] = "3",  [ 90   ] = "3",  [ 2300 ] = "3",  [ 573  ] = "2",  [ 4551 ] = "3",
    [ 4552 ] = "3",  [ 4553 ] = "3",  [ 11   ] = "10", [ 2001 ] = "2",  [ 2002 ] = "3",  [ 2003 ] = "2",
    [ 2005 ] = "3",  [ 2006 ] = "2",  [ 2007 ] = "2",  [ 2008 ] = "2",  [ 2010 ] = "2",  [ 2011 ] = "2",
    [ 2015 ] = "3",  [ 2016 ] = "2",  [ 2017 ] = "2",  [ 2018 ] = "2",  [ 2019 ] = "3",  [ 2020 ] = "3",
    [ 2021 ] = "2",  [ 2025 ] = "2",  [ 2026 ] = "2",  [ 2030 ] = "3",  [ 2031 ] = "3",  [ 2032 ] = "3",
    [ 2033 ] = "3",  [ 2034 ] = "2",  [ 2230 ] = "10", [ 2231 ] = "10", [ 2232 ] = "10", [ 2234 ] = "10",
    [ 2235 ] = "10", [ 2236 ] = "10", [ 2237 ] = "10", [ 2240 ] = "10", [ 2241 ] = "10", [ 2280 ] = "10",
    [ 2281 ] = "10", [ 2282 ] = "10", [ 2283 ] = "10", [ 2284 ] = "10", [ 2285 ] = "10", [ 2286 ] = "10",
    [ 2287 ] = "10", [ 2288 ] = "10", [ 2289 ] = "10", [ 2290 ] = "10", [ 2291 ] = "10", [ 2292 ] = "10",
    [ 2293 ] = "10", [ 2294 ] = "10", [ 2295 ] = "10", [ 2296 ] = "10", [ 2297 ] = "10", [ 2298 ] = "10",
    [ 2299 ] = "10", [ 31   ] = "11", [ 4001 ] = "2",  [ 5190 ] = "10", [ 523  ] = "2",  [ 5523 ] = "7",
    [ 5549 ] = "3",  [ 5725 ] = "7",  [ 5726 ] = "3",  [ 5727 ] = "3",  [ 5728 ] = "3",  [ 5729 ] = "3",
    [ 5730 ] = "3",  [ 5743 ] = "1",  [ 5814 ] = "11", [ 5862 ] = "11", [ 5871 ] = "11", [ 5872 ] = "10",
    [ 5873 ] = "10", [ 5874 ] = "2",  [ 5875 ] = "10", [ 5876 ] = "10", [ 5874 ] = "10", [ 5878 ] = "10",
    [ 5879 ] = "10", [ 5880 ] = "10", [ 9066 ] = "11", [ 9067 ] = "5",  [ 9068 ] = "6",  [ 9069 ] = "11",
    [ 9071 ] = "4",  [ 9115 ] = "4",  [ 9140 ] = "2",  [ 9141 ] = "2",  [ 9142 ] = "2",  [ 9132 ] = "2",
    [ 9143 ] = "2",  [ 9144 ] = "2",  [ 2000 ] = "2",  [ 2118 ] = "0",  [ 9073 ] = "5",  [ 9073 ] = "5",
    [ 9072 ] = "11", [ 9063 ] = "5",  [ 9065 ] = "5",  [ 9062 ] = "0",  [ 9060 ] = "0",  [ 9061 ] = "0",
    [ 9074 ] = "0",  [ 5000 ] = "10", [ 5001 ] = "1",  [ 5002 ] = "9",  [ 5003 ] = "3",  [ 5004 ] = "9",
    [ 5005 ] = "1",  [ 5006 ] = "4",  [ 5007 ] = "10", [ 5008 ] = "5",  [ 5009 ] = "3",  [ 5010 ] = "1",
    [ 5011 ] = "3",  [ 5012 ] = "5",  [ 5013 ] = "1",  [ 5014 ] = "3",  [ 5015 ] = "0",  [ 5016 ] = "5",
    [ 5017 ] = "10", [ 5018 ] = "1",  [ 5019 ] = "5",  [ 5020 ] = "1",  [ 5030 ] = "5",  [ 5031 ] = "10",
    [ 5032 ] = "1",  [ 5033 ] = "10", [ 5034 ] = "10", [ 5035 ] = "10", [ 5036 ] = "10", [ 5037 ] = "1",
    [ 5038 ] = "9",  [ 5039 ] = "6",  [ 5040 ] = "6",  [ 5041 ] = "8",  [ 5042 ] = "0",  [ 5043 ] = "1",
    [ 5044 ] = "5",  [ 5045 ] = "4",  [ 5046 ] = "10", [ 5047 ] = "3",  [ 5048 ] = "10", [ 5049 ] = "1",
    [ 5050 ] = "2",  [ 5051 ] = "1",  [ 5052 ] = "8",  [ 5053 ] = "1",  [ 5054 ] = "1",  [ 5065 ] = "10",
    [ 5066 ] = "6",  [ 5067 ] = "9",  [ 5068 ] = "1",  [ 5069 ] = "1",  [ 5070 ] = "5",  [ 5071 ] = "1",
    [ 5072 ] = "9",  [ 5073 ] = "1",  [ 5074 ] = "2",  [ 5075 ] = "2",  [ 5076 ] = "5",  [ 5077 ] = "1",
    [ 5078 ] = "5",  [ 5079 ] = "4",  [ 5080 ] = "1",  [ 5081 ] = "10", [ 5083 ] = "4",  [ 5084 ] = "3",
    [ 5085 ] = "8",  [ 5086 ] = "4",  [ 5087 ] = "2",  [ 5088 ] = "4",  [ 5089 ] = "10", [ 5090 ] = "6",
    [ 5091 ] = "3",  [ 5092 ] = "5",  [ 5100 ] = "5",  [ 5101 ] = "1",  [ 5102 ] = "2",  [ 5103 ] = "5",
    [ 5104 ] = "1",  [ 5400 ] = "9",  [ 5401 ] = "6",  [ 5402 ] = "1",  [ 5403 ] = "2",  [ 5404 ] = "6",
    [ 5405 ] = "3",  [ 5406 ] = "10", [ 5407 ] = "1",  [ 5408 ] = "3",  [ 5409 ] = "5",  [ 5410 ] = "8",
    [ 5411 ] = "1",  [ 5412 ] = "10", [ 5413 ] = "4",  [ 5414 ] = "2",  [ 5415 ] = "1",  [ 5416 ] = "2",
    [ 5417 ] = "1",  [ 5418 ] = "7",  [ 5419 ] = "2",  [ 5420 ] = "1",  [ 5421 ] = "2",  [ 5422 ] = "4",
    [ 5423 ] = "2",  [ 5424 ] = "4",  [ 5425 ] = "3",  [ 5426 ] = "2",  [ 5427 ] = "1",  [ 5428 ] = "4",
    [ 5429 ] = "1",  [ 5430 ] = "2",  [ 5431 ] = "1",  [ 5432 ] = "0",  [ 5433 ] = "4",  [ 5434 ] = "1",
    [ 5435 ] = "1",  [ 5436 ] = "1",  [ 5437 ] = "9",  [ 5438 ] = "1",  [ 5439 ] = "3",  [ 5440 ] = "10",
    [ 5441 ] = "9",  [ 5442 ] = "1",  [ 5443 ] = "7",  [ 5444 ] = "5",  [ 5445 ] = "10", [ 5446 ] = "4",
    [ 5447 ] = "10", [ 5448 ] = "3",  [ 5449 ] = "5",  [ 5450 ] = "9",  [ 5451 ] = "9",  [ 5452 ] = "5",
    [ 5453 ] = "10", [ 5454 ] = "9",  [ 5455 ] = "1",  [ 5456 ] = "9",  [ 5457 ] = "3",  [ 5458 ] = "1",
    [ 5459 ] = "4",  [ 5460 ] = "3",  [ 5461 ] = "2",  [ 5462 ] = "1",  [ 5463 ] = "5",  [ 5464 ] = "1",
    [ 5465 ] = "4",  [ 5466 ] = "10", [ 5467 ] = "5",  [ 5468 ] = "9",  [ 5469 ] = "2",  [ 5470 ] = "3",
    [ 5471 ] = "1",  [ 5472 ] = "10", [ 5473 ] = "2",  [ 5474 ] = "2",  [ 5475 ] = "8",  [ 5476 ] = "1",
    [ 5477 ] = "5",  [ 5478 ] = "10", [ 5479 ] = "6",  [ 5480 ] = "1",  [ 5200 ] = "6",  [ 5201 ] = "5",
    [ 5202 ] = "5",  [ 5203 ] = "9",  [ 5204 ] = "10", [ 5205 ] = "2",  [ 5206 ] = "1",  [ 5207 ] = "0",
    [ 5208 ] = "1",  [ 5209 ] = "9",  [ 5210 ] = "1",  [ 5211 ] = "0",  [ 5212 ] = "3",  [ 5213 ] = "9",
    [ 5214 ] = "6",  [ 5215 ] = "1",  [ 5216 ] = "2",  [ 5217 ] = "6",  [ 5218 ] = "1",  [ 5219 ] = "8",
    [ 5220 ] = "6",  [ 5221 ] = "1",  [ 5222 ] = "1",  [ 5223 ] = "2",  [ 5224 ] = "6",  [ 5225 ] = "2",
    [ 5226 ] = "8",  [ 5227 ] = "3",  [ 5228 ] = "0",  [ 5229 ] = "9",  [ 5230 ] = "4",  [ 5231 ] = "10",
    [ 5232 ] = "1",  [ 5233 ] = "1",  [ 5234 ] = "5",  [ 5235 ] = "1",  [ 5236 ] = "1",  [ 5237 ] = "1",
    [ 5238 ] = "1",  [ 5239 ] = "1",  [ 5240 ] = "8",  [ 5241 ] = "6",  [ 5242 ] = "5",  [ 5243 ] = "7",
    [ 5244 ] = "1",  [ 5245 ] = "9",  [ 5246 ] = "1",  [ 5247 ] = "4",  [ 5248 ] = "3",  [ 5249 ] = "3",
    [ 5250 ] = "1",  [ 5251 ] = "1",  [ 5252 ] = "2",  [ 5253 ] = "3",  [ 5254 ] = "9",  [ 5255 ] = "2",
    [ 5508 ] = "4",  [ 5511 ] = "9",  [ 5518 ] = "5",  [ 5501 ] = "8",  [ 5562 ] = "4",  [ 5502 ] = "2",
    [ 5519 ] = "10", [ 5521 ] = "2",  [ 5524 ] = "6",  [ 5510 ] = "1",  [ 5533 ] = "4",  [ 5520 ] = "6",
    [ 5525 ] = "7",  [ 5534 ] = "6",  [ 5561 ] = "10", [ 5544 ] = "6",  [ 5564 ] = "5",  [ 5506 ] = "10",
    [ 5505 ] = "1",  [ 5504 ] = "1",  [ 5514 ] = "9",  [ 5516 ] = "1",  [ 5512 ] = "6",  [ 5522 ] = "1",
    [ 5530 ] = "5",  [ 5532 ] = "5",  [ 5538 ] = "1",  [ 5563 ] = "5",  [ 5557 ] = "1",  [ 5551 ] = "1",
    [ 5553 ] = "1",  [ 5556 ] = "1",  [ 5555 ] = "1",  [ 5541 ] = "1",  [ 5539 ] = "5",  [ 5558 ] = "4",
    [ 5554 ] = "1",  [ 5552 ] = "1",  [ 5550 ] = "1",  [ 5560 ] = "2",  [ 5559 ] = "1",  [ 5565 ] = "4",
    [ 5566 ] = "2",  [ 5567 ] = "2",  [ 5568 ] = "2",  [ 5569 ] = "2",  [ 5570 ] = "2",  [ 5571 ] = "2",
    [ 5572 ] = "2",  [ 5573 ] = "2",  [ 5574 ] = "2",  [ 5543 ] = "1",  [ 5542 ] = "1",  [ 5540 ] = "1",
    [ 5537 ] = "8",  [ 5536 ] = "1",  [ 5535 ] = "6",  [ 5531 ] = "2",  [ 5529 ] = "1",  [ 5528 ] = "4",
    [ 5527 ] = "6",  [ 5526 ] = "1",  [ 5517 ] = "0",  [ 5515 ] = "4",  [ 5513 ] = "6",  [ 5509 ] = "6",
    [ 5507 ] = "1",  [ 5503 ] = "5",  [ 5545 ] = "2",  [ 5546 ] = "1",  [ 5547 ] = "3",  [ 5548 ] = "3",
    [ 5290 ] = "2",  [ 5611 ] = "4",  [ 5605 ] = "5",  [ 5613 ] = "6",  [ 5606 ] = "5",  [ 5612 ] = "6",
    [ 5609 ] = "1",  [ 5601 ] = "10", [ 5602 ] = "1",  [ 5603 ] = "10", [ 5607 ] = "10", [ 5608 ] = "10",
    [ 5610 ] = "1",  [ 5614 ] = "1",  [ 5731 ] = "1",  [ 5732 ] = "5",  [ 5738 ] = "4",  [ 5739 ] = "6",
    [ 5736 ] = "0",  [ 5737 ] = "1",  [ 5735 ] = "10", [ 5734 ] = "5",  [ 5733 ] = "10", [ 5740 ] = "5",
    [ 5713 ] = "1",  [ 5722 ] = "6",  [ 5720 ] = "6",  [ 5718 ] = "1",  [ 5723 ] = "0",  [ 5707 ] = "6",
    [ 5705 ] = "6",  [ 5703 ] = "1",  [ 5701 ] = "10", [ 5711 ] = "1",  [ 5717 ] = "1",  [ 5721 ] = "6",
    [ 5706 ] = "6",  [ 5724 ] = "6",  [ 5716 ] = "1",  [ 5704 ] = "6",  [ 5702 ] = "2",  [ 5715 ] = "1",
    [ 5714 ] = "1",  [ 5712 ] = "1",  [ 5719 ] = "1",  [ 5710 ] = "1",  [ 5708 ] = "1",  [ 5709 ] = "1",
    [ 5741 ] = "1",  [ 5801 ] = "4",  [ 5802 ] = "1",  [ 5803 ] = "7",  [ 5811 ] = "1",  [ 5812 ] = "1",
    [ 5813 ] = "1",  [ 2100 ] = "2",  [ 2101 ] = "1",  [ 2102 ] = "2",  [ 2103 ] = "1",  [ 2104 ] = "1",
    [ 2105 ] = "2",  [ 2106 ] = "1",  [ 2107 ] = "1",  [ 2108 ] = "1",  [ 2109 ] = "1",  [ 2110 ] = "1",
    [ 2111 ] = "2",  [ 2112 ] = "11", [ 2113 ] = "2",  [ 2114 ] = "10", [ 2115 ] = "3",  [ 2116 ] = "0",
    [ 2117 ] = "1",  [ 5851 ] = "1",  [ 5852 ] = "1",  [ 5853 ] = "1",  [ 5854 ] = "2",  [ 5855 ] = "2",
    [ 5856 ] = "1",  [ 5857 ] = "2",  [ 5858 ] = "1",  [ 5859 ] = "5",  [ 5860 ] = "0",  [ 5861 ] = "11",
    [ 5863 ] = "5",  [ 5864 ] = "2"
}

local lev_prot = {                      -- id платных нычек
    [ "l01_escape"     ] = 9140,
    [ "l04_darkvalley" ] = 9141,
    [ "l05_bar"        ] = 9142,
    [ "l07_military"   ] = 9143,
    [ "l10_radar "     ] = 9144
}

level_difficulty = {                    -- коэффициенты общей сложности игры на каждой локации
    [ "l01_escape"            ] = 0.9,
    [ "l02_garbage"           ] = 1.0,
    [ "l03_agroprom"          ] = 1.5,
    [ "l03u_agr_underground"  ] = 0.7,
    [ "l04_darkvalley"        ] = 1.2,
    [ "k01_darkscape"         ] = 1.1,
    [ "l04u_labx18"           ] = 1.8,
    [ "l05_bar"               ] = 1.1,
    [ "l06_rostok"            ] = 1.4,
    [ "l07_military"          ] = 1.4,
    [ "l08_yantar"            ] = 1.4,
    [ "l08u_brainlab"         ] = 2.0,
    [ "l10_radar"             ] = 1.6,
    [ "limansk"               ] = 1.5,
    [ "lost_village"          ] = 0.9,
    [ "marsh"                 ] = 0.9,
    [ "red_forest"            ] = 1.5,
    [ "warlab"                ] = 2.2,
    [ "labx10"                ] = 2.0,
    [ "labx8"                 ] = 2.5,
    [ "generators"            ] = 1.6,
    [ "aver"                  ] = 1.6,
    [ "hospital"              ] = 1.0,
    [ "deadcity"              ] = 1.7,
    [ "av_peshera"            ] = 1.8,
    [ "l10u_bunker"           ] = 3.0,
    [ "l11_pripyat"           ] = 1.7,
    [ "l12_stancia_new"       ] = 1.8,
    [ "l12_stancia_2_new"     ] = 1.9,
    [ "l12u_control_monolith" ] = 1.9,
    [ "l12u_sarcofag"         ] = 1.9
}

level_trees = {
    [ "l01_escape"            ] = 1,
    [ "l02_garbage"           ] = 3,
    [ "l03_agroprom"          ] = 1,
    [ "l03u_agr_underground"  ] = 0,
    [ "l04_darkvalley"        ] = 3,
    [ "k01_darkscape"         ] = 1,
    [ "l04u_labx18"           ] = 0,
    [ "l05_bar"               ] = 3,
    [ "l06_rostok"            ] = 3,
    [ "l07_military"          ] = 3,
    [ "l08_yantar"            ] = 5,
    [ "l08u_brainlab"         ] = 0,
    [ "l10_radar"             ] = 5,
    [ "limansk"               ] = 3,
    [ "lost_village"          ] = 1,
    [ "marsh"                 ] = 2,
    [ "red_forest"            ] = 6,
    [ "warlab"                ] = 0,
    [ "labx10"                ] = 0,
    [ "labx8"                 ] = 0,
    [ "generators"            ] = 5,
    [ "aver"                  ] = 4,
    [ "hospital"              ] = 1,
    [ "deadcity"              ] = 7,
    [ "av_peshera"            ] = 0,
    [ "l10u_bunker"           ] = 0,
    [ "l11_pripyat"           ] = 8,
    [ "l12_stancia_new"       ] = 8,
    [ "l12_stancia_2_new"     ] = 8,
    [ "l12u_control_monolith" ] = 0,
    [ "l12u_sarcofag"         ] = 0
}

level_stons = {
    [ "l01_escape"            ] = 1,
    [ "l02_garbage"           ] = 2,
    [ "l03_agroprom"          ] = 2,
    [ "l03u_agr_underground"  ] = 0,
    [ "l04_darkvalley"        ] = 2,
    [ "k01_darkscape"         ] = 4,
    [ "l04u_labx18"           ] = 4,
    [ "l05_bar"               ] = 2,
    [ "l06_rostok"            ] = 3,
    [ "l07_military"          ] = 2,
    [ "l08_yantar"            ] = 2,
    [ "l08u_brainlab"         ] = 4,
    [ "l10_radar"             ] = 3,
    [ "limansk"               ] = 4,
    [ "lost_village"          ] = 1,
    [ "marsh"                 ] = 0,
    [ "red_forest"            ] = 0,
    [ "warlab"                ] = 4,
    [ "labx10"                ] = 4,
    [ "labx8"                 ] = 4,
    [ "generators"            ] = 3,
    [ "aver"                  ] = 1,
    [ "hospital"              ] = 4,
    [ "deadcity"              ] = 3,
    [ "av_peshera"            ] = 4,
    [ "l10u_bunker"           ] = 0,
    [ "l11_pripyat"           ] = 3,
    [ "l12_stancia_new"       ] = 3,
    [ "l12_stancia_2_new"     ] = 3,
    [ "l12u_control_monolith" ] = 0,
    [ "l12u_sarcofag"         ] = 0
}

local time_difficulty = {
    [ 0  ] = 0.85, [ 1  ] = 0.80, [ 2  ] = 0.75, [ 3  ] = 0.85, [ 4  ] = 0.95,
    [ 5  ] = 1.00, [ 6  ] = 1.05, [ 7  ] = 1.10, [ 8  ] = 1.10, [ 9  ] = 1.20,
    [ 10 ] = 1.30, [ 11 ] = 1.35, [ 12 ] = 1.30, [ 13 ] = 1.20, [ 14 ] = 1.20,
    [ 15 ] = 1.20, [ 16 ] = 1.10, [ 17 ] = 1.10, [ 18 ] = 1.10, [ 19 ] = 1.05,
    [ 20 ] = 1.05, [ 21 ] = 1.00, [ 22 ] = 0.95, [ 23 ] = 0.90, [ 24 ] = 0.85
}

local game_difficulty_by_num = {
    [ 0 ] = "gd_novice",
    [ 1 ] = "gd_stalker",
    [ 2 ] = "gd_veteran",
    [ 3 ] = "gd_master"
}

function add_new_escape_100()     add_new_lc( 9100, 0,   "На Забытый хутор",        "info_way100a" ) end
function add_new_agroprom_101()   add_new_lc( 9101, 1,   "На Забытый хутор",        "info_way101a" ) end
function add_new_yantar_102()     add_new_lc( 9102, 2,   "На Янтарь",               "info_way102a" ) end
function add_new_agroprom_103()   add_new_lc( 9103, 3,   "На Агропром",             "info_way103a" ) end
function add_new_ros_red_104()    add_new_lc( 9104, 4,   "В Рыжий лес",             "info_way104a" ) end
function add_new_rostok_105()     add_new_lc( 9105, 5,   "В Рыжий лес",             "info_way105a" ) end
function add_new_radar_106()      add_new_lc( 9106, 6,   "В Рыжий лес",             "info_way106a" ) end
function add_new_darkvalley_107() add_new_lc( 9107, 7,   "В Тёмную долину",         "info_way107a" ) end
function add_new_yantar_108()     add_new_lc( 9108, 8,   "В зону \"Тесла\"",        "info_way108a" ) end
function add_new_radar_109()      add_new_lc( 9109, 9,   "В подземную лабораторию", "info_way109a" ) end
function add_new_mil_110()        add_new_lc( 9110, 10,  "В Туманную чащу",         "info_way110a" ) end
function add_new_darkvalley_111() add_new_lc( 9111, 11,  "В Туманную чащу",         "info_way111a" ) end
function add_new_esc_dar_112()    add_new_lc( 9112, 12,  "В Кишку",                 "info_way112a" ) end
function add_new_military()       add_new_lc( 592,  67,  "На Склады",               "info_way113a" ) end
function add_new_rostok()         add_new_lc( 594,  70,  "На Дикую территорию",     "info_way114a" ) end
function add_new_garbage_116()    add_new_lc( 9116, 16,  "На Свалку",               "info_way116a" ) end
function add_new_darkvalley_117() add_new_lc( 9117, 17,  "В Тёмную долину",         "info_way117a" ) end
function add_new_x18_x16_118()    add_new_lc( 9118, 31,  "В лабораторию Х-16"                      ) end
function add_new_x16_x18_119()    add_new_lc( 9119, 31,  "В лабораторию Х-18"                      ) end
function add_new_x10_130()        add_new_lc( 9130, 30,  "В лабораторию Х-12",      "info_way130a" ) end
function add_new_x16_131()        add_new_lc( 9131, 31,  "В лабораторию Х-16",      "info_way131a" ) end
function add_new_aver_gar_135()   add_new_lc( 9135, 35,  "На свалку",               "info_way135a" ) end
function add_new_aver_td_136()    add_new_lc( 9136, 36,  "В Тёмную долину",         "info_way136a" ) end
function add_new_aver_mil_137()   add_new_lc( 9137, 37,  "На Склады",               "info_way137a" ) end
function add_new_gar_aver_151()   add_new_lc( 9151, 51,  "В туманную чащу",         "info_way151a" ) end
function add_new_mil_gen_154()    add_new_lc( 9154, 54,  "В зону \"Тесла\"",        "info_way154a" ) end
function add_new_gen_mil_191()    add_new_lc( 9191, 91,  "На Склады",               "info_way191a" ) end
function add_new_lim_gen_165()    add_new_lc( 9165, 65,  "В зону \"Тесла\"",        "info_way165a" ) end
function add_new_gen_lim_190()    add_new_lc( 9190, 90,  "В Лиманск",               "info_way190a" ) end
function add_new_lost_marsh_166() add_new_lc( 9166, 66,  "На Болота",               "info_way166a" ) end
function add_new_dead_bun_167()   add_new_lc( 9167, 67,  "В лабораторию Х-12"                      ) end
function add_new_bun_dead_170()   add_new_lc( 9170, 70,  "В Иваньковский райцентр"                 ) end
function add_new_red_ros_172()    add_new_lc( 9172, 72,  "На Дикую территорию",     "info_way172a" ) end
function add_new_red_yan_173()    add_new_lc( 9173, 73,  "На Янтарь",               "info_way173a" ) end
function add_new_red_mil_174()    add_new_lc( 9174, 74,  "На Склады",               "info_way174a" ) end
function add_new_lost_agr_176()   add_new_lc( 9176, 76,  "На Агропром",             "info_way176a" ) end
function add_new_esc_marsh_178()  add_new_lc( 9178, 78,  "На Болота",               "info_way178a" ) end
function add_new_marsh_esc_179()  add_new_lc( 9179, 79,  "На Кордон",               "info_way179a" ) end
function add_new_marsh_lost_180() add_new_lc( 9180, 80,  "На Забытый хутор",        "info_way180a" ) end
function add_new_marsh_agr_181()  add_new_lc( 9181, 81,  "На Агропром",             "info_way181b" ) end
function add_new_lost_esc_182()   add_new_lc( 9182, 82,  "На Кордон",               "info_way182a" ) end
function add_new_agr_marsh_183()  add_new_lc( 9183, 83,  "На Болота",               "info_way183a" ) end
function add_new_gar_lv_184()     add_new_lc( 9184, 84,  "На Забытый хутор",        "info_way184a" ) end
function add_new_lv_gar_185()     add_new_lc( 9185, 85,  "На Свалку",               "info_way185a" ) end
function add_new_warlab_186()     add_new_lc( 9186, 86,  "В лабораторию Х6",        "info_way186a" ) end
function add_new_x8_187()         add_new_lc( 9187, 87,  "В лабораторию X8"                        ) end
function add_new_x8_192()         add_new_lc( 9192, 92,  "В лабораторию Х6"                        ) end
function add_new_red_196()        add_new_lc( 9196, 137, "В Рыжий лес"                             ) end
function add_new_lim_197()        add_new_lc( 9197, 138, "В Лиманск"                               ) end
function add_new_hos_dsc_256()    add_new_lc( 9256, 878, "В Кишку"                                 ) end

function add_new_military_01()
    add_new_lc( 1008, 68, "На Склады" )
    mike.add_spots_bar_mil()
end

function add_new_dsc_199()
    add_new_lc( 9199, 141, "В Тёмную долину", "info_way199a" )
    mike.add_spots_dv_k()
end

function add_spot_esc_hos_158()
    db.actor:give_info_portion( "info_way158a" )
    local obj2 = g_sim:story_object( story_ids.esc_exit_to_hos_158 )
    level.map_add_object_spot_ser( obj2.id, "level_changer_self", "to_hospital" )
end

function add_new_lc( levch, levchn, levchm, info )
    local obj = g_sim:story_object( levch )
    if not obj then obj = misc.spawn_by_story_id( levch ) end
    if obj then
        level.map_add_object_spot_ser( obj.id, "level_changer_self", levchm )
        if info and not has_alife_info( info )  then
            db.actor:give_info_portion( info )
            info_received()
        end
    end
end

function add_doktor_attantion()
    if has_alife_info( "esc_find_doctor_done" ) then
        if not has_alife_info( "esc_find_doctor_start3" ) then
            misc.spawn_by_name( "doktor_attantion" )
            db.actor:give_info_portion( "esc_find_doctor_start3" )
            timers.start_timer( "doktor_wait", 9, 1, 33, "sak.doktor_wait_done()" )
            if not has_alife_info( "info_way151a" ) then
                add_new_aver_gar_135()
                add_new_gar_aver_151()
            end
        end
    end
end

function v3f( x, y, z ) return vector():set( x, y, z ) end

function out_new_lc( sid, info )
    if not db.actor:has_info( info ) then
        local objt = g_sim:story_object( sid )
        if objt then
            wprintf(
                "[~T].~C0C #WARN:~C07 actor not have info ~C0A %s~C07, level changer~C0D %d~C07 will be destroyed",
                info, sid
            )
            misc.release_obj( objt, 'sak.script:183' )
        end
    end
end

function out_31_lc()
    local objt = g_sim:story_object( story_ids.bun_exit_to_aes1_131 ) -- story_object( 9131 )
    if objt then misc.release_obj( objt, 'sak.script:190' ) end
end

function add_scaner_1()
    local objt = g_sim:story_object( story_ids.scaner_01 ) -- story_object( 9145 )
    if not objt then
        misc.spawn_by_name( "scaner_01" )
        misc.spawn_by_name( "scaner_02" )
    end
end

function add_new_item_in( item, sidlh )
    local nps = sidlh.id
    amk.spawn_item_in_inv( item, nps )
end

-- спавн всякого при НИ
function add_new_lcitem()
    create_vasilev_suit()
    local rand1 = lua_random( 1, 5 )
    local rand2 = lua_random( 1, 3 )
    local rand3 = lua_random( 1, 9 )
    local rand4 = tonumber( level.get_game_difficulty() )
    sak_minigame.generate_dices_drop()
    marsh_tuzla( rand2 )
    amk_vars.r_task_reward = rand1
    amk_vars.r_treas_items = rand2
    amk_vars.x18_iq_check  = rand3
    amk_vars.g_diff        = rand4
    WriteIni( db.stor_ltx, "stor", "r_task_reward", rand1 )
    WriteIni( db.stor_ltx, "stor", "r_treas_items", rand2 )
    db.actor:give_info_portion( "x18_iq_check_info" .. rand3 )
    amk.spawn_item( "zone_zharka_static_weak", v3f( -74.16,  1.85,  -137.36 ), 804, 3132 )
    amk.spawn_item( "lab_x16_documents",       v3f( -129.70, 20.78, -23.21  ), 1529, 18  )
    amk.spawn_item( "rad_document6", v3f(  621.95, -42.64,  187.38 ), 1910, 224619 )
    amk.spawn_item( "amk_zapiska",   v3f( -132.93,  11.04, -203.2  ), 629,  105467 )
    amk.spawn_item( "rad_document6", v3f( -28.4,   -0.26,  -173.55 ), 676,  211656 ) -- дело в вагончике Агропрома
    amk.spawn_item( "rad_document6", v3f(  357.98,  15.1,  -30.96  ), 0,    591849 ) -- дело на кордоне
    amk.spawn_item( "sak_book4",     v3f( -3.77,   -4.25,   191.19 ), 2195, 97948  ) -- книга доктора
    amk.spawn_item( "playboy3",      v3f( -212.99, -22.51, -126.06 ), 59,   40605  )
    amk.spawn_item( "matches",       v3f( -212.99, -22.45, -126.06 ), 59,   40605  )
    amk.spawn_item( "playboy2",      v3f(  111.71, -2.30,   2.80   ), 117,  413897 )
    amk.spawn_item( "playboy1",      v3f(  138.57, -3.5,    22.0   ), 1237, 37466  )
    amk.spawn_item( "playboy4",      v3f( -156.23,  1.44,  -162.05 ), 669,  82783  )
    amk.spawn_item( "playboy5",      v3f( -26.06,  -3.77,  -21.18  ), 1593, 281279 )
    amk.spawn_item( "playboy6",      v3f( -52.11,  -10.52,  35.31  ), 1608, 257284 )
    amk.spawn_item( "playboy7",      v3f(  41.4,    5.45,  -84.15  ), 1100, 226116 )
    amk.spawn_item( "playboy8",      v3f( -135.57,  1.29,  -523.72 ), 832,  22097  )
    amk.spawn_item( "playboy9",      v3f( -115.23,  1.38,  -255.19 ), 3241, 9560   )
    amk.spawn_item( "playboy9",      v3f( -6.19,   -4.21,   201.42 ), 2195, 94368  )
    amk.spawn_item( "playboy10",     v3f( -184.05,  2.23,   534.05 ), 3393, 119948 )
    amk.spawn_item( "playboy11",     v3f(  37.75,  -3.0,   -35.94  ), 1997, 22713  )
    amk.spawn_item( "amk_kanistra",  v3f( -8.58,    3.34,   10.1   ), 3414, 135078 )
    amk.spawn_item( "amk_kanistra",  v3f( -8.18,    4.34,   10.8   ), 3414, 135078 )
    amk.spawn_item( "amk_zapiska",   v3f( -126.96, -28.41, -379.12 ), 27,   125181 )
    --amk.spawn_item( "garbage_pda", v3f( -226, -7.37, -132.36 ), 252, 208345 ) -- ПДА в лагере бандитов на свалке
    --amk.spawn_item( "sak_document", v3f( 350, -51.74, -24.45 ), 2031, 93051 )
    --amk.spawn_item( "rad_pda", v3f( 530.7, -49.41, -241.61 ), 2061, 180657 ) -- ПДА в вагончике на Радаре
    --amk.spawn_item( "yan_pda", v3f( -34.08, -12.5, -265.35 ), 1452, 27157 )
    --amk.spawn_item( "vasiljev_letter", v3f( -32.75, -12.5, -262.48 ), 1452, 26759 )
    --amk.spawn_item( "m_inventory_seif", v3f( 306.47, -39.39, -26.22 ), 1930, 69058 ) --seif_radar
    --amk.spawn_item( "amk_zapiska", v3f( 21.6, -3.94, -18.28 ), 1140, 5991 )
    -------------------------------------------------------------------------------
    local war_docs = {
        { 9.404203414917,  -9.0156745910645, -12.080198287964, 7868, 2693 },
        { 6.5841684341431, -7.824432849884,  -13.131462097168, 7641, 2693 },
        { 6.5393829345703, -7.8233819007874, -14.894571304321, 7638, 2693 },
        { 7.6907577514648, -9.0921983718872, -15.435939788818, 7638, 2693 },
        { 8.5175218582153, -9.0146331787109, -22.049827575684, 7735, 2693 },
        { 6.4462966918945, -8.4674339294434, -18.882566452026, 7504, 2693 }
    }
    test.spawn_docs_tbl( "bun_document", war_docs, nil, nil, nil, nil )
    -------------------------------------------------------------------------------
    war_docs = {
        { -9.9006214141846, -10.9731798172,   -51.048217773438, 2313, 3161 },
        { -4.485342502594,  -10.604920387268, -64.169952392578, 3493, 3169 },
        { -24.585098266602, -11.013624191284, -37.605758666992, 522,  3155 },
        { -31.672639846802, -12.284192085266, -59.527214050293, 273,  3153 }
    }
    test.spawn_docs_tbl( "war_document", war_docs, nil, nil, nil, nil )
    -------------------------------------------------------------------------------    
    war_docs = {
        { 26.727878570557, -8.3882112503052, -5.0553693771362, 10631, 3690 },
        { 52.351734161377, -8.3813352584839, -5.3168621063232, 12733, 3715 },
        { 45.645782470703, -8.3852920532227, -5.0944185256958, 12134, 3711 }
    }
    for n = 1, #war_docs do
        for k = 1, 3 do
            local obj = amk.spawn_item( "playboy1",
                v3f( war_docs[ n ][ 1 ] + k * 0.15, war_docs[ n ][ 2 ], war_docs[ n ][ 3 ] + k * 0.15 ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "equipments\\item_delp" .. ( k + ( n * 3 ) - 1 )
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { 1.528688788414, 1.2459589242935, 3.6658480167389, 4647, 3187 },
        { 1.1648477315903, 1.043750166893, 2.4235367774963, 4643, 3187 }
    }
    local war_ammo = { "ammo_7.62x39_fmj", "ammo_5.45x39_fmj", "ammo_5.56x45_ss190" }
    for n = 1, #war_docs do
        for k = 0, 4 do
            local obj = amk.spawn_item( "physic_destroyable_object",
                v3f( war_docs[ n ][ 1 ], ( war_docs[ n ][ 2 ] + ( k * 0.18 )), war_docs[ n ][ 3 ] ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\ammobox_wood.ogf"
                data.custom_data = "[drop_box]\nitems = "..war_ammo[ rand2]..", 2"
                data.physic_type = 3
                data.mass        = 20
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    add_x8_docs()
    -------------------------------------------------------------------------------
    war_docs = {
        { -63.697429656982, -17.558191299438, 102.86915588379, 5927, 3605 },
        { -57.146778106689, -17.553497314453, 98.435012817383, 6360, 3605 },
        { -63.91389465332,  -13.339869499207, 77.108436584473, 5820, 3589 },
        { -82.583526611328, -15.80943107605,  78.964790344238, 2815, 3592 },
        { -85.28987121582,  -15.811623573303, 78.15453338623,  2815, 3592 },
    }
    war_ammo = { "antirad", "medkit", "bandage", "medkit_army", "bandage" }
    for n = 1, #war_docs do
        for k = 0, 3 do
            local obj = amk.spawn_item( "physic_destroyable_object",
                v3f( war_docs[ n ][ 1 ], ( war_docs[ n ][ 2 ] + ( k * 0.23 )), war_docs[ n ][ 3 ] ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local items      = war_ammo[ lua_random( 1, #war_ammo ) ]
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "physics\\box\\box_metall_01.ogf"
                data.custom_data = "[drop_box]\nitems = "..items..", "..lua_random( 1, 3 )
                data.physic_type = 3
                data.mass        = 20
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    local war_ballons = {
        { -9.7723741531372, -7.0766696929932, -34.262554168701, 2325, 3170 },
        { -11.863079071045, -7.0770502090454, -27.052164077759, 2020, 3170 },
        { -9.3018159866333, -7.3027291297913, -19.914821624756, 2483, 3167 },
        { -16.476686477661, -7.2750220298767, -16.013906478882, 1197, 3167 },
        { -2.566642999649,  -7.2307949066162, -16.791730880737, 3933, 3167 },
        { -14.684816360474, -7.2768468856812, -22.831605911255, 1538, 3167 },
        { -4.6294131278992, -7.0795884132385, -31.382890701294, 3308, 3170 },
        { -8.9328680038452, -7.0764698982239, -35.35302734375,  2445, 3170 },
        { -13.937294960022, -7.0767288208008, -26.395378112793, 1660, 3167 },
        { -6.0207672119141, -7.2718482017517, -22.258140563965, 2633, 3167 },
        { -11.876070022583, -7.2515897750854, -17.694429397583, 2037, 3167 },
        { -18.414506912231, -7.2721991539001, -20.928215026855, 943,  3167 },
        { -15.128114700317, -7.2764863967896, -23.350187301636, 1419, 3167 }
    }
    for n = 1, #war_ballons do
        amk.spawn_item( "amk_ballon",
            v3f( war_ballons[ n ][ 1 ], war_ballons[ n ][ 2 ], war_ballons[ n ][ 3 ] ),
            war_ballons[ n ][ 5 ], war_ballons[ n ][ 4 ]
        )
        amk.spawn_item( "amk_ballon",
            v3f( war_ballons[ n ][ 1 ], war_ballons[ n ][ 2 ], war_ballons[ n ][ 3 ] + 0.3 ),
            war_ballons[ n ][ 5 ], war_ballons[ n ][ 4 ]
        )
    end
    -------------------------------------------------------------------------------
    war_ballons = {
        { 18.499908447266, 1.0895416736603, -11.157274246216, 7090, 3216 },
        { 18.221921920776, 1.0449446439743, -10.208450317383, 7091, 3216 },
        { 19.198259353638, 1.1009846925735, -9.6385526657104, 7146, 3216 },
        { 19.059909820557, 1.0360935926437, -8.3838129043579, 7148, 3216 },
        { 19.591165542603, 1.072851061821,  -10.059464454651, 7198, 3216 },
        { 19.273807525635, 1.174171090126,  -11.46522808075,  7196, 3216 },
        { 18.757030487061, 1.1253744363785, -10.677487373352, 7145, 3216 }
    }
    for n = 1, #war_ballons do
        amk.spawn_item( "amk_kanistra",
            v3f( war_ballons[ n ][ 1 ], war_ballons[ n ][ 2 ], war_ballons[ n ][ 3 ] ),
            war_ballons[ n ][ 5 ], war_ballons[ n ][ 4 ]
        )
        amk.spawn_item( "amk_kanistra",
            v3f( war_ballons[ n ][ 1 ], war_ballons[ n ][ 2 ], war_ballons[ n ][ 3 ] + 0.4 ),
            war_ballons[ n ][ 5 ], war_ballons[ n ][ 4 ]
        )
    end
    -------------------------------------------------------------------------------
    war_ballons = { { -76.264266967773, -23.85626411438, 61.646308898926, 4009, 3596 } }
    for n = 1, #war_ballons do
        for k = 0, 3 do
            amk.spawn_item( "arc_art_box_1basic",
                v3f( war_ballons[ n ][ 1 ], war_ballons[ n ][ 2 ] + k * 0.4, war_ballons[ n ][ 3 ] ),
                war_ballons[ n ][ 5 ], war_ballons[ n ][ 4 ]
            )
            local sobj = amk.spawn_item( "arc_art_box_1basic",
                v3f( war_ballons[ n ][ 1 ], war_ballons[ n ][ 2 ] + k * 0.4, war_ballons[ n ][ 3 ] + 0.4 ),
                war_ballons[ n ][ 5 ], war_ballons[ n ][ 4 ]
            )
            if lua_random() > 0.6 then
                local pk   = get_netpk( sobj, 1 )
                local tbl  = pk:get()
                local caps = sak_dialog.treasure_any_capsule()
                if not strpos( caps, "af_dummy_", 1, true ) then
                    tbl.custom_data = caps .. "_dyn" .. tostring( lua_random( 2, 4 ) ) .. "d"
                else
                    tbl.custom_data = caps
                end
                pk:set( tbl )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { 24.4, -8.99, -2.5564801692963, 10519, 3693 },
        { 25.1, -8.99, -2.5323886871338, 10553, 3693 },
        { 25.8, -8.99, -2.534117937088,  10632, 3693 },
        { 26.5, -8.99, -2.5558798313141, 10668, 3693 }
    }
    local war_ammo = {
        "ammo_7.62x39_fmj", "ammo_5.45x39_fmj", "ammo_9x39_pab9",
        "ammo_12x70_buck", "ammo_5.56x45_ss190"
    }
    for n = 1, #war_docs do
        for k = 0, 4 do
            local obj = amk.spawn_item( "physic_destroyable_object",
                v3f(
                    war_docs[ n ][ 1 ] + ( k * 0.01 ),
                    (( war_docs[ n ][ 2 ] ) + ( k * 0.18 )),
                    war_docs[ n ][ 3 ] + ( k * 0.02 )
                ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\ammobox_wood.ogf"
                data.custom_data = "[drop_box]\nitems = "..war_ammo[rand1]..", 2"
                data.physic_type = 3
                data.mass        = 20
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    local hard_item = {
        "item_rykzack", "nlc_ammobox", "shesternya", "koncepva_2", "krovosos_golova", "meshok",
        "taburet_village", "taburet_wood_01", "skelet_torso", "babinnik", "batinok_1", "batinok_2",
        "helix_1", "helix_2", "balloon_poison_gas", "box_toolkit_1", "box_toolkit_2",
        "box_toolkit_3", "safe_container", "shesternya", "shveller_1", "shveller_2", "knipel", "pila"
    }
    war_docs = {
        { -89.201072692871, -15.940216064453, 91.231483459473, 1852,  3586 },
        { -82.687812805176, -15.940326690674, 95.634963989258, 2865,  3586 },
        { -79.217712402344, -15.983874320984, 105.04762268066, 3472,  3599 },
        { -100.32470703125, -16.004516601563, 90.46875,        754,   3583 },
        { -96.6396484375,   -20.165412902832, 72.888595581055, 1025,  3585 },
        { -96.111923217773, -20.165752410889, 78.566299438477, 1110,  3584 },
        { -77.009246826172, -20.166580200195, 81.082885742188, 3902,  3584 },
        { -79.291168212891, -22.519165039063, 74.141983032227, 3383,  3598 },
        { -89.732810974121, -24.288505554199, 76.582374572754, 1689,  3587 },
        { -78.493347167969, -24.324991226196, 83.318817138672, 3573,  3587 },
        { -81.826110839844, -28.513708114624, 76.626922607422, 2925,  3589 },
        { -69.52806854248,  -28.303907394409, 72.621360778809, 5293,  3589 },
        { -63.771236419678, -28.629219055176, 77.633583068848, 5902,  3589 },
        { -114.02149963379, -28.483585357666, 85.321487426758, 106,   3582 },
        { -107.01930236816, -28.483331680298, 70.313705444336, 375,   3589 },
        { -70.608047485352, -28.483938217163, 66.803009033203, 5130,  3601 },
        { -70.889930725098, -25.561708450317, 68.323394775391, 5136,  3601 },
        { -71.205520629883, -20.164287567139, 68.932022094727, 5034,  3600 },
        { -78.995712280273, -20.116710662842, 65.223510742188, 3360,  3600 },
        { -80.358337402344, -16.003719329834, 71.636856079102, 3139,  3592 },
        { -66.193542480469, -15.949235916138, 71.380355834961, 5515,  3603 },
        { -59.926078796387, -16.003347396851, 66.678047180176, 6169,  3603 },
        { -50.877601623535, -20.167825698853, 69.708984375,    6633,  3603 },
        { 1.7557497024536,  -9.0164232254028, -18.64265251159, 6540,  2693 },
        { -0.5317689180374, -9.0142440795898, -15.15027809143, 5707,  2692 },
        { -1.749094247818,  -8.9894685745239, -6.912555694580, 5532,  2691 },
        { 6.4700198173523,  -8.9895763397217, -5.850723266601, 7392,  2691 },
        { 0.57479459047318, -8.9905395507813, 7.6314854621887, 6163,  2689 },
        { 12.712470054626,  -8.990159034729,  6.9892230033875, 8169,  2688 },
        { 17.161222457886,  -8.989725112915,  11.812808990479, 8440,  2781 },
        { 19.682481765747,  -8.9898920059204, 15.635511398315, 8594,  2686 },
        { 17.346799850464,  -8.9936952590942, 20.239831924438, 8457,  2686 },
        { 5.4808568954468,  -9.9836549758911, 16.364582061768, 7329,  2683 },
        { 0.27464827895164, -9.9741382598877, 30.376007080078, 5997,  2682 },
        { 0.56489598751068, -9.9775304794312, 31.424938201904, 6219,  2682 },
        { -24.084461212158, -8.1950130462646, 35.524604797363, 2899,  2678 },
        { -18.666299819946, -8.9925146102905, 25.307332992554, 3754,  2675 },
        { -21.974977493286, -8.9890270233154, 22.470476150513, 3183,  2676 },
        { -21.454271316528, -8.9907722473145, 8.6794939041138, 3163,  2674 },
        { -34.032985687256, -9.4187622070313, 18.837387084961, 1949,  2671 },
        { -41.823135375977, -9.4150495529175, 17.803371429443, 1228,  2670 },
        { -42.465229034424, -9.413966178894,  13.275531768799, 1177,  2670 },
        { -39.371349334717, -9.4200897216797, 1.6657198667526, 1418,  2669 },
        { -36.844078063965, -9.4177303314209, 0.8430446982383, 1663,  2669 },
        { -22.614561080933, -9.5509595870972, -3.672543048858, 3040,  2666 },
        { -20.707294464111, -9.5491647720337, -8.698301315307, 3286,  2666 },
        { -20.362796783447, -9.5548410415649, -24.30342674255, 3416,  2665 },
        { -19.39582824707,  -9.5509910583496, -35.48067092895, 3554,  2665 },
        { -17.061985015869, -9.477520942688,  -57.00811386108, 3853,  2664 },
        { -19.46675491333,  -9.5493650436401, -60.33495330810, 3519,  2664 },
        { -8.168267250061,  -7.4721417427063, -57.00716018676, 4340,  2663 },
        { -4.0375785827637, -7.3028349876404, -65.58845520019, 4889,  2662 },
        { -3.0421936511993, -7.451988697052,  -75.32965850830, 5142,  2661 },
        { 0.87687557935715, -7.4559440612793, -74.74398040771, 6039,  2661 },
        { 1.9003393650055,  -7.452817440033,  -63.08875656127, 6485,  2662 },
        { 52.74641418457,   -23.621700286865, 26.720636367798, 12774, 3717 },
        { 49.10164642334,   -23.623853683472, 31.410266876221, 12445, 3709 },
        { 39.246952056885,  -23.443378448486, 32.298530578613, 11566, 3702 },
        { 33.605762481689,  -23.442308425903, 33.180255889893, 11128, 3702 },
        { 27.14839553833,   -23.440511703491, 1.76469373703,   10676, 3691 },
        { 22.938087463379,  -23.517450332642, 3.8749942779541, 10502, 3691 },
        { 17.364568710327,  -23.547811508179, 0.8821670413017, 10002, 3683 },
        { 61.354110717773,  -23.514024734497, 21.445392608643, 13293, 3724 },
        { 20.99609375,      -8.9952583312988, 8.6655874252319, 10359, 3685 },
        { 1.4840217828751,  -9.0139665603638, -14.63682174682, 7380,  3660 },
        { 3.6975727081299,  -9.0125665664673, -22.15166473388, 8037,  3659 },
        { -3.9868278503418, -9.0128707885742, -18.58362007141, 5808,  3660 },
        { -2.7135713100433, -8.989709854126,  7.6864109039307, 6162,  3661 },
        { 0.82116895914078, -9.9776725769043, 16.865049362183, 7190,  3662 },
        { -4.0790100097656, -9.9745311737061, 21.411800384521, 5869,  3662 },
        { -15.384702682495, -8.2481098175049, 36.673377990723, 4369,  3642 },
        { -23.536798477173, -8.1888198852539, 35.431896209717, 3269,  3631 },
        { -24.141555786133, -8.9906454086304, 17.637561798096, 3241,  3629 },
        { -29.172290802002, -8.9827756881714, 20.13374710083,  2590,  3629 },
        { -40.333686828613, -9.4123058319092, 12.191414833069, 1384,  3620 },
        { -37.869480133057, -9.4185485839844, -0.541823804378, 1695,  3621 },
        { -21.40266418457,  -9.5487337112427, -9.816649436950, 3683,  3638 },
        { -5.9939179420471, -7.4502415657043, -56.31320953369, 5301,  3649 },
        { -3.1541695594788, -7.4545011520386, -63.99429702758, 5945,  3649 },
        { -4.1796503067017, -7.4562835693359, -66.86889648437, 5754,  3649 },
        { 2.7845525741577,  -7.4543008804321, -62.69665527343, 7792,  3670 },
        { 1.2059502601624,  -7.4573435783386, -57.24589538574, 7309,  3670 },
        { -3.4892098903656, -7.4544491767883, -75.14615631103, 5929,  3665 },
        { -8.5161113739014, -3.0832915306091, -27.43996810913, 2622,  3177 },
        { -18.540166854858, -3.0828857421875, -14.72680091857, 960,   3158 },
        { -11.432389259338, -3.0855407714844, -7.240950584411, 2164,  3168 },
        { -14.229963302612, -3.1483864784241, -3.230343818664, 1693,  3168 },
        { -3.6091701984406, -2.9172093868256, -1.198301672935, 3796,  3178 },
        { -3.3087167739868, -3.1503505706787, 7.5947027206421, 3838,  3178 },
        { 6.2989654541016,  -3.1550426483154, 6.2114901542664, 5529,  3178 },
        { 7.1949996948242,  -3.1568684577942, 3.7552080154419, 5663,  3196 },
        { -0.5605009794235, -5.5701823234558, -0.607978582382, 4312,  3196 },
        { 9.8142948150635,  -7.3327932357788, 3.6563413143158, 6094,  3203 },
        { 12.465996742249,  -7.196524143219,  -2.983470439910, 6464,  3213 },
        { 16.016387939453,  -7.3160157203674, 0.1909473985433, 6967,  3213 },
        { 13.979384422302,  -11.517539024353, -3.057260751724, 6689,  3209 },
        { 15.775999069214,  -12.153709411621, 3.0922272205353, 6912,  3209 },
        { 9.45068359375,    -11.387045860291, 2.9827873706818, 6090,  3203 },
        { 2.7299470901489,  -11.473573684692, 3.9330558776855, 4899,  3188 },
        { 1.8988132476807,  -11.436170578003, -1.631335020065, 4758,  3191 },
        { -3.9933757781982, -11.475992202759, 3.8300466537476, 3610,  3175 },
        { -14.077505111694, -15.402435302734, 0.9797104001045, 1705,  3160 },
        { -16.569097518921, -15.391633033752, 7.8005886077881, 1239,  3160 },
        { -19.709794998169, -11.470121383667, -6.857636928558, 811,   3159 },
        { -19.709794998169, -11.470121383667, -6.857636928558, 811,   3159 },
        { -22.887617111206, -11.474084854126, -5.176993846893, 620,   3156 },
        { 11.810108184814,  1.0078179836273,  0.5598384141922, 6359,  3210 },
        { 6.7515187263489,  1.0328203439713,  -6.129714965820, 5643,  3210 },
        { 12.268186569214,  1.0072244405746,  -3.080728530883, 6461,  3216 },
        { 31.430355072021,  -3.1559855937958, -3.171398401260, 7691,  3222 },
        { 32.193561553955,  -3.1532101631165, -9.134090423584, 7696,  3222 },
        { 36.818820953369,  -2.5038480758667, -9.217975616455, 7729,  3222 },
        { 37.461311340332,  -3.5400419235229, -2.012900352478, 7756,  3223 },
        { -12.951454162598, -3.1488878726959, -1.439474225044, 1822,  3168 },
        { -11.064484596252, -3.0870161056519, -5.601146697998, 2168,  3168 },
        { -17.459287643433, -3.087938785553,  -11.63595199585, 1088,  3158 },
        { -12.300958633423, -3.151526927948,  6.9746985435486, 1969,  3163 },
        { -14.318199157715, -1.1155160665512, 10.8800573349,   1740,  3163 },
        { -6.6968216896057, 1.073083281517,   8.2564182281494, 2962,  3171 },
        { -6.117039680481,  1.073428273201,   11.121375083923, 3078,  3171 },
        { -1.8587914705276, 1.0752984285355,  15.771790504456, 4116,  3183 },
        { 2.4055585861206,  1.0751203298569,  15.775743484497, 4806,  3198 },
        { 2.133722782135,   1.0738099813461,  20.911657333374, 4823,  3183 },
        { -3.9653971195221, 5.5175533294678,  19.079086303711, 3694,  3173 },
        { -6.7857913970947, 5.4070692062378,  17.09090423584,  2975,  3173 },
        { -36.914039611816, -34.476013183594, 19.984180450439, 336,   2508 },
        { -37.410087585449, -34.493835449219, 14.274764060974, 327,   2483 },
        { -32.348449707031, -34.482002258301, 11.75594997406,  622,   2483 },
        { -26.202627182007, -34.495178222656, 13.390752792358, 797,   2510 },
        { -19.898149490356, -34.482051849365, 12.929221153259, 972,   2511 },
        { -13.95947265625,  -34.485069274902, 13.573064804077, 1318,  2511 },
        { -17.75253868103,  -34.475677490234, 21.061851501465, 1139,  2482 },
        { -14.677122116089, -34.472621917725, 28.145927429199, 1294,  2482 },
        { -19.034620285034, -34.472019195557, 28.045017242432, 1040,  2482 },
        { -37.443450927734, -34.484634399414, 8.7387790679932, 319,   2483 },
        { -37.478118896484, -34.481773376465, -5.942131996154, 223,   2507 },
        { -36.822025299072, -34.483592987061, -18.80500984191, 280,   2505 },
        { -40.680709838867, -34.475967407227, -17.10599708557, 101,   2506 },
        { -42.667625427246, -34.479061126709, -19.02458190918, 21,    2506 },
        { -36.393676757813, -34.484691619873, -31.94080924987, 348,   2502 },
        { -39.942489624023, -34.476085662842, -29.88352394104, 122,   2503 },
        { -40.026805877686, -34.482501983643, -25.83493804931, 128,   2504 },
        { -31.665899276733, -34.476341247559, -35.51224517822, 629,   2477 },
        { -11.357807159424, -34.480644226074, -40.94409179687, 1428,  2499 },
        { -6.920615196228,  -34.488285064697, -36.01195907592, 1560,  2499 },
        { 11.64772605896,   -34.494598388672, -36.12438583374, 2536,  2498 },
        { 18.032886505127,  -34.490272521973, -37.78907012939, 2948,  2496 },
        { 18.658803939819,  -34.476913452148, -39.74688720703, 2998,  2497 },
        { 18.3092212677,    -34.477188110352, -42.04156112670, 2942,  2497 },
        { 25.758716583252,  -34.481822967529, -37.70908737182, 3408,  2495 },
        { 31.759860992432,  -34.48180770874,  -35.91779708862, 3594,  2475 },
        { 35.634117126465,  -34.49397277832,  -37.53410339355, 3715,  2475 },
        { 36.551544189453,  -34.483619689941, -24.92893028259, 3804,  2493 },
        { 36.982799530029,  -34.483295440674, -20.31904220581, 3884,  2493 },
        { 36.378463745117,  -34.486129760742, -13.07419300079, 3821,  2474 },
        { 36.434303283691,  -34.488304138184, -6.654400348663, 3830,  2474 },
        { 31.72925567627,   -34.484802246094, -13.04404830932, 3612,  2489 },
        { 29.639863967896,  -34.481231689453, -17.76072120666, 3532,  2488 },
        { 23.601499557495,  -34.489555358887, -17.92111587524, 3309,  2476 },
        { 14.181397438049,  -34.492301940918, -19.77449417114, 2678,  2487 },
        { 10.047339439392,  -34.49600982666,  -23.25328254699, 2429,  2487 },
        { 10.562477111816,  -34.483131408691, -13.81530475616, 2475,  2486 },
        { 3.5152521133423,  -34.481685638428, -12.28258800506, 2177,  2472 },
        { -0.0474238246679, -34.482292175293, -18.51014900207, 1956,  2472 },
        { -0.7918310761452, -34.485298156738, -29.73581314086, 1875,  2472 },
        { 0.73271656036377, -34.482780456543, -31.97170829772, 2001,  2472 },
        { -0.9907400608063, -34.572280883789, -7.573566436767, 1906,  2485 },
        { -5.3035526275635, -34.56787109375,  -9.483078956604, 1649,  2485 },
        { -10.721195220947, -34.573417663574, -7.613507270813, 1467,  2484 },
        { -9.2250518798828, -34.484455108643, -12.53538513183, 1502,  2490 },
        { -17.244430541992, -34.480651855469, -13.41787719726, 1116,  2490 },
        { -19.048057556152, -34.494815826416, -17.33558273315, 1009,  2491 },
        { -24.535711288452, -34.494651794434, -23.05655860900, 830,   2491 },
        { -29.177526473999, -34.497447967529, -22.61286354064, 706,   2479 },
        { -31.271865844727, -34.498489379883, -18.15144538879, 637,   2479 },
        { -31.639484405518, -34.482551574707, -13.45547389984, 644,   2492 },
        { -23.422554016113, -34.484443664551, -12.39223289489, 886,   2490 },
        { -1.0414881706238, 1.0750775337219,  20.991767883301, 4395,  3183 }
    }
    test.spawn_docs_tbl( "physic_object", war_docs, hard_item, nil, 3, 20 )
    -------------------------------------------------------------------------------
    war_docs = {
        { -97.070159912109, -20.165660858154, 79.445892333984, 971,  3584 },
        { -84.419059753418, -20.03223991394,  71.88468170166,  2478, 3585 },
        { -86.006828308105, -20.147188186646, 81.83122253418,  2259, 3584 },
        { -74.804267883301, -24.365037918091, 68.171409606934, 4325, 3598 },
        { -85.234504699707, -24.318056106567, 69.277206420898, 2324, 3598 },
        { -91.726913452148, -24.327035903931, 80.840789794922, 1505, 3587 },
        { -88.300483703613, -24.323774337769, 88.010704040527, 1978, 3587 },
        { -76.570465087891, -24.309608459473, 85.665710449219, 4075, 3587 },
        { -69.787521362305, -24.20873260498,  71.926895141602, 5220, 3602 },
        { -64.128341674805, -24.204383850098, 74.286811828613, 5809, 3602 },
        { -70.590850830078, -26.515630722046, 77.425163269043, 5169, 3602 },
        { -65.953353881836, -28.483097076416, 77.467422485352, 5634, 3589 },
        { -65.493003845215, -28.303819656372, 74.891792297363, 5730, 3589 },
        { -87.803565979004, -28.460283279419, 96.007186889648, 2159, 3589 },
        { -107.28544616699, -28.485761642456, 94.354881286621, 404,  3582 },
        { -102.02824401855, -29.863618850708, 73.034225463867, 620,  3589 },
        { -103.33059692383, -29.864755630493, 73.03751373291,  590,  3589 },
        { -108.67223358154, -29.998838424683, 73.062110900879, 307,  3589 },
        { -79.106384277344, -15.978361129761, 68.45873260498,  3367, 3592 },
        { -79.026168823242, -15.978121757507, 67.578460693359, 3365, 3592 },
        { -78.944442749023, -15.891574859619, 68.991310119629, 3369, 3592 },
        { -78.307800292969, -15.980125427246, 68.746032714844, 3523, 3592 },
        { -78.318870544434, -15.981321334839, 67.815528869629, 3521, 3592 },
        { -79.052284240723, -15.981273651123, 68.119766235352, 3365, 3592 },
        { -63.966178894043, -16.003879547119, 57.917198181152, 5855, 3603 },
        { -66.072242736816, -16.003345489502, 59.100700378418, 5592, 3603 },
        { -45.497825622559, -20.33642578125,  63.714096069336, 6823, 3603 },
        { -44.262783050537, -20.223850250244, 63.611282348633, 6842, 3603 },
        { -43.142711639404, -20.034574508667, 63.677768707275, 6848, 3603 },
        { -43.17261505127,  -20.295009613037, 64.581756591797, 6849, 3603 },
        { -43.381370544434, -19.504354476929, 66.068466186523, 6850, 3603 },
        { -47.014057159424, -20.562450408936, 66.791648864746, 6801, 3603 },
        { -45.425788879395, -19.645092010498, 72.251922607422, 6832, 3603 },
        { -44.205238342285, -20.575647354126, 72.127639770508, 6832, 3603 }
    }
    test.spawn_docs_tbl(
        "physic_destroyable_object", war_docs, "amk\\box_drop.ogf",
        "[drop_box]\ncommunity = small_box_science", 3, 10
    )
    -------------------------------------------------------------------------------
    war_docs = {
        { -320.97613525391, 43.031856536865, 193.20553588867, 33660, 2924 },
        { -320.41741943359, 44.509239196777, 192.21612548828, 34094, 2924 },
        { -321.13363647461, 44.508979797363, 192.23318481445, 33657, 2924 },
        { -315.89227294922, 43.841625213623, 201.18287658691, 36799, 2926 },
        { -318.27938842773, 44.508979797363, 203.70770263672, 35933, 2926 },
        { -318.72888183594, 44.508979797363, 203.72071838379, 35493, 2926 },
        { -324.20812988281, 43.167747497559, 198.07388305664, 32004, 2926 },
        { -320.00140380859, 43.306072235107, 207.92727661133, 34614, 2928 },
        { -315.88973999023, 43.553977966309, 198.01739501953, 36775, 2926 },
        { -318.57998657226, 43.299999237060, 203.75999450683, 35493, 2926 },
        { 113.7,            -4.407801628112, 11.763509750366, 33756, 1239 },
        { 113.40120697021,  -3.204080820084, 17.507947921753, 33491, 1239 },
        { 136.3610534668,   -3.605596065521, 19.110424041748, 36896, 1237 },
        { 8.41,             -22.69,          6.55,            7790,  2703 },
        { 8.42,             -22.69,          5.9,             7790,  2703 },
        { 7.6,              -22.62,          8.20,            7689,  2703 },
        { -317.31400146484, 43.09,           207.73554992676, 36382, 2928 }
    }
    for n = 1, #war_docs do
        for a = 0, 3 do
            local rand = lua_random( 2, 9 )
            local obj  = amk.spawn_item( "physic_object",
                v3f( war_docs[ n ][ 1 ], war_docs[ n ][ 2 ] + a * 0.07, war_docs[ n ][ 3 ] ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\documents_" .. rand
                data.mass        = 10
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { 39.84789276123, -23.450563430786, 40.797706604004, 11634, 3710 },
        { 39.92067718505, -23.449800491333, 41.658584594727, 11636, 3710 },
        { 39.99090957641, -23.449514389038, 42.520722198486, 11637, 3710 },
        { 39.94826889038, -23.449197769165, 44.350453186035, 11782, 3710 },
        { 40.00982284545, -23.449495315552, 43.415515899658, 11638, 3710 }
    }
    for n = 1, #war_docs do
        for a = 0, 1 do
            local obj = amk.spawn_item( "physic_object",
                v3f(
                    war_docs[ n ][ 1 ], war_docs[ n ][ 2 ] + a * 1.12,
                    war_docs[ n ][ 3 ] + a * 0.08
                ),  war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "physics\\balon\\bochka_fuel"
                data.physic_type = 3
                data.mass        = 50
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { 41.90, -22.8067684173584, 39.6123962402344, 34, 3710 },
        { 41.90, -22.2267684173584, 39.6123962402344, 34, 3710 }
    }
    for n = 1, #war_docs do
        for a = 0, 5 do
            local obj = amk.spawn_item( "physic_object",
                v3f(
                    war_docs[ n ][ 1 ] + a * 0.9,
                    war_docs[ n ][ 2 ],
                    war_docs[ n ][ 3 ] + a * 0.01
                ),  war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local rand       = lua_random( 1, 3 )
                local alf        = { "a", "b", "c" }
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "physics\\box\\box_1" .. alf[ rand ]
                data.physic_type = 3
                data.mass        = 20
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { -35.45187759399, -34.49, -0.9, 393, 2507 },
        { -35.35605239868, -34.51, -3.4, 389, 2507 },
        { -36.61514205932, -34.48, -3.0, 303, 2507 },
        { -36.72226409912, -34.50, -1.5, 225, 2507 },
        { -36.85368347168, -34.58,  0.0, 227, 2507 },
        { -35.06259155273, -34.55, -2.5, 390, 2507 }
    }
    for n = 1, #war_docs do
        for a = 0, 4 do
            local obj = amk.spawn_item( "physic_object",
                v3f(
                    war_docs[ n ][ 1 ] + ( lua_random() - 0.5 ),
                    war_docs[ n ][ 2 ] + a * 0.45,
                    war_docs[ n ][ 3 ] + ( lua_random() - 0.5 )
                ),  war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "physics\\box\\box_wood_tara"
                data.physic_type = 3
                data.mass        = 20
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { 45.790870666504, -23.449367523193, 47.592140197754, 12125, 3710 },
        { 47.145401000977, -23.448137283325, 47.589977264404, 12263, 3710 },
        { 48.624515533447, -23.451324462891, 47.562149047852, 12393, 3710 },
        { 51.527000427246, -23.449708938599, 43.414974212646, 12728, 3718 },
        { 51.454212188721, -23.449571609497, 42.24486541748,  12726, 3718 }
    }
    for n = 1, #war_docs do
        for a = 0, 3 do
            local obj = amk.spawn_item( "physic_object",
                v3f(
                    war_docs[ n ][ 1 ] + a * 0.03,
                    war_docs[ n ][ 2 ] + a * 0.62,
                    war_docs[ n ][ 3 ] + a * 0.04
                ),  war_docs[ n ][ 5 ], war_docs[ n ][ 4] 
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\mid_box"
                data.physic_type = 3
                data.mass        = 40
                pk:set( data )
            end
        end
    end
    -------------------------------------------------------------------------------
    war_docs = {
        { 45.1, -22.48, 51.25, 12129, 3710 },
        { 46.0, -22.48, 51.25, 12194, 3710 },
        { 47.2, -22.31, 51.51, 12397, 3710 }
    }
    for n = 1, (#war_docs-1 ) do
        for a = 0, 6 do
            local obj = amk.spawn_item( "physic_object",
                v3f(
                    war_docs[ n ][ 1 ] + a * 0.1, war_docs[ n ][ 2 ] + a * 0.002,
                    war_docs[ n ][ 3 ]
                ),  war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\memory_module"
                data.physic_type = 3
                data.mass        = 5
                pk:set( data )
            end
        end
    end
    for a = 0, 3 do
        local obj = amk.spawn_item( "physic_object",
            v3f( war_docs[ 3 ][ 1 ] + a * 0.60, war_docs[ 3 ][ 2 ], war_docs[ 3 ][ 3 ] ),
            war_docs[ 3 ][ 5 ], war_docs[ 3 ][ 4 ]
        )
        if obj then
            local pk         = get_netpk( obj, 1 )
            local data       = pk:get()
            data.visual_name = "equipments\\item_mks10"
            data.physic_type = 3
            data.mass        = 15
            pk:set( data )
        end
    end
    -------------------------------------------------------------------------------
    for n = 1, 3 do
        amk.spawn_item( "medkit_scientic", v3f( 69.22, -20.3, 42.22 ), 3729, 13414 )
        amk.spawn_item( "medkit_scientic", v3f( 68.22, -20.3, 40.22 ), 3729, 13394 )
        amk.spawn_item( "medkit_scientic", v3f( 64.55, -20.3, 38.00 ), 3729, 13357 )
    end
    
    amk.spawn_item( "amk_zapiska", v3f( -126.92, 23.27, -36.98 ), 1543, 7083 )
    
    local ids, cnt = registry.all_objects( true )
    for n = 1, cnt do
        local id  = ids[ n ]
        local obj = g_sim:object( id )
        if obj then
            local onm = obj:name()
            if
                ( str_in_tab( onm, {
                    "doktor_attantion",
                    "dv_box_bes_",
                    "val_stena_podval",
                    "bun_beton_block_",
                    "val_dinamit_podval",
                    "scaner_0",
                    "esc_mogila_0",
                    "bun_ognetushitel_2",
                    "gar_sign_stop_blokpost",
                    "esc_box_015",
                    "yan_klyk_body",
                    "mil_new_mine_",
                    "_surprise_box"
                } )
                or ( obj:section_name() == "device_pda" and obj.parent_id ~= 0 ) )
            then
                misc.release_obj( obj, true )
            end
        end
    end
end

function add_x8_docs()
    local war_docs = {
        { -88.26139831543,  -24.295169830322, 68.326705932617, 1885, 3598 },
        { -81.528190612793, -23.67177772522,  84.916870117188, 2740, 3587 },
        { -88.983688354492, -24.309988021851, 71.104179382324, 1892, 3587 },
        { -76.522994995117, -25.409290313721, 69.865196228027, 4033, 3598 },
        { -87.315788269043, -31.172491073608, 80.411064147949, 1942, 3591 },
        { -88.407409667969, -32.271411895752, 93.768798828125, 2002, 3590 },
        { -61.777816772461, -28.848892211914, 79.568435668945, 5902, 3589 },
        { -70.360092163086, -28.360794067383, 78.764862060547, 5170, 3589 },
        { -102.02349853516, -16.002239227295, 98.487915039063, 653,  3583 },
        { -95.635971069336, -16.007217407227, 93.436965942383, 1147, 3583 },
        { -93.679893493652, -13.475328445435, 87.38533782959,  1358, 3586 },
        { -93.613121032715, -13.475303649902, 88.918479919434, 1358, 3586 },
        { -82.16389465332,  -14.939234733582, 99.685119628906, 2974, 3586 },
        { -72.802612304688, -15.042216300964, 105.51915740967, 4863, 3599 },
        { -79.617118835449, -15.040168762207, 114.26892089844, 3480, 3599 },
        { -95.446418762207, -20.163190841675, 86.39363861084,  1217, 3584 },
        { -85.778732299805, -22.517074584961, 74.016395568848, 2481, 3598 },
        { -63.154884338379, -24.207345962524, 74.854934692383, 5973, 3602 },
        { -62.461158752441, -24.205656051636, 74.322631835938, 6027, 3602 },
        { -67.625259399414, -27.251806259155, 78.704856872559, 5460, 3602 },
        { -63.57780456543,  -28.673311233521, 77.934722900391, 5822, 3589 },
        { -63.240501403809, -28.304170608521, 74.080070495605, 5970, 3589 },
        { -62.022716522217, -20.281908035278, 77.713348388672, 5820, 3589 },
        { -63.995094299316, -20.104465484619, 72.796844482422, 5884, 3589 },
        { -71.603713989258, -20.107419967651, 71.873756408691, 5044, 3589 },
        { -58.985206604004, -24.465187072754, 80.944839477539, 6288, 3606 },
        { -55.359531402588, -20.974252700806, 91.176666259766, 6471, 3606 },
        { -64.557022094727, -22.0149974823,   84.32356262207,  5828, 3604 },
        { -58.387809753418, -17.555858612061, 101.97553253174, 6337, 3605 },
        { -58.224254608154, -17.51678276062,  103.34817504883, 6339, 3605 },
        { -58.65896987915,  -16.655918121338, 100.69371795654, 6306, 3605 },
        { -56.579696655273, -15.555698394775, 102.95073699951, 6366, 3605 },
        { -56.590827941895, -15.556909561157, 103.80596160889, 6367, 3605 },
        { -65.318351745605, -16.009111404419, 74.340003967285, 5725, 3592 },
        { -55.031753540039, -16.003589630127, 64.258285522461, 6447, 3603 },
        { -59.882862091064, -16.005506515503, 66.484046936035, 6169, 3603 },
        { -48.681571960449, -20.566701889038, 70.36979675293,  6719, 3603 },
        { -44.167301177979, -20.556982040405, 70.024101257324, 6832, 3603 },
        { -44.880275726318, -20.557441711426, 65.232368469238, 6835, 3603 },
        { -50.566562652588, -20.181091308594, 65.608169555664, 6667, 3603 },
        { -51.986770629883, -19.468418121338, 73.046974182129, 6601, 3603 },
        { -77.510284423828, -15.447822570801, 68.43342590332,  3694, 3592 },
        { -100.35036468506, -19.758417129517, 67.506973266602, 867,  3585 },
        { -99.478637695313, -20.005279541016, 68.86743927002,  869,  3585 },
        { -98.042358398438, -20.090486526489, 68.323989868164, 869,  3585 },
        { -85.057769775391, -24.323331832886, 82.236366271973, 2355, 3587 },
        { -82.116073608398, -23.197206497192, 89.647422790527, 2952, 3587 },
        { -76.211723327637, -28.483623504639, 74.580123901367, 4046, 3589 },
        { -89.19140625,     -28.437051773071, 80.614013671875, 1806, 3589 },
        { -93.918312072754, -27.296653747559, 96.146820068359, 1277, 3589 },
        { -92.494483947754, -27.297735214233, 96.218139648438, 1370, 3589 },
        { -115.85352325439, -28.485311508179, 87.841972351074, 8,    3582 },
        { -116.30258178711, -27.583765029907, 80.952507019043, 28,   3582 },
        { -115.65514373779, -28.445192337036, 70.558486938477, 13,   3582 }
    }
    local i = true
    for n = 1, #war_docs do
        if lua_random() > 0.85 then
            local rand = lua_random( 2, 9 )
            local obj  = amk.spawn_item( "x8_document",
                v3f( war_docs[ n ][ 1 ], war_docs[ n ][ 2 ], war_docs[ n ][ 3 ] ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\documents_" .. rand
                data.physic_type = 3
                pk:set( data )
            end
            i = false
        end
    end
    if i == true then
        local rand = lua_random( 2, 9 )
        local obj  = amk.spawn_item( "x8_document",
            v3f( war_docs[ 1 ][ 1 ], war_docs[ 1 ][ 2 ], war_docs[ 1 ][ 3 ] ),
            war_docs[ 1 ][ 5 ], war_docs[ 1 ][ 4 ]
        )
        if obj then
            local pk         = get_netpk( obj, 1 )
            local data       = pk:get()
            data.visual_name = "new_item\\documents_"..rand
            data.physic_type = 3
            pk:set( data )
        end
    end
end

function add_docs_X18()
    local pk, data
    local war_docs = {
        { 29.37519645690, -13.533881187439, 40.21166229248, 3320, 1158 },
        { 22.58949851989, -14.826943397522, 77.19501495361, 3320, 1158 },
        { 17.93267250061, -16.409547805786, 29.55953598022, 5580, 1159 },
        { 3.491678953170, -10.813512802124, 27.93222236633, 3315, 1158 },
        { -2.09755921363, -10.814540863037, 25.89917564392, 2459, 1145 },
        { -32.2486114501, -10.814558029175, 7.591392040252, 471,  1147 },
        { -40.4815139770, -10.818881988525, 7.868512630462, 219,  1148 },
        { -40.4815139770, -10.818881988525, 7.868512630462, 219,  1148 },
        { -27.0011901855, -10.813380241394, -14.0854358673, 644,  1154 },
        { -15.2637405395, -10.714294433594, -22.0704841613, 1124, 1151 },
        { -44.4424591064, -12.944392204285, -21.6299438476, 123,  1153 },
        { -36.2404708862, -13.007162094116, -16.3901443481, 334,  1153 },
        { 16.84925270080, -10.815569877625, -1.93683791160, 5346, 1135 },
        { 28.38867950439, -10.815103530884,  3.77227783203, 6853, 1136 },
        { 34.25603485107, -10.817984580994, -7.12703466415, 7175, 1137 },
        { 27.34420204162, -10.816309928894, -16.4739284515, 6668, 1138 },
        { 15.48162364959, -10.814817428589, -16.9858131408, 5104, 1139 },
        { 29.54503631591, -5.0249938964844, -14.1546430587, 6819, 1140 },
        { 29.49029159545, -5.0188407897949, -15.1804580688, 6815, 1140 },
        { 29.58678436279, -5.5068454742432, -16.7126140594, 6811, 1140 },
        { 29.46629333496, -5.0602669715881, -17.3599758148, 6809, 1140 },
        { 29.62618255615, -5.1726231575012, -18.2665004730, 6807, 1140 },
        { 28.75732421875, -6.6202926635742, -16.3909435272, 6813, 1140 }
    }
    local i, count = true, 0
    ------------------------------------  картина для Ворона --------------------------------------
    if dsh.get_next_random( "test.make_shron_voron" ) < 0.7 then
        local u_obj = amk.spawn_item( "kartina04", v3f( 3.45075, -14.1260, 44.69874 ), 1160, 3329 )
        if u_obj then
            pk               = get_netpk( u_obj, 1 )
            data             = pk:get()
            data.physic_type = 3
            pk:set( data )
        end
    end
    -----------------------------------------------------------------------------------------------
    for n = 1, #war_docs do
        if lua_random() > 0.5 then           -- как на релизе
            local rand = lua_random( 2, 9 )
            local obj  = amk.spawn_item( "x18_document",
                v3f( war_docs[ n ][ 1 ], war_docs[ n ][ 2 ], war_docs[ n ][ 3 ] ),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                pk               = get_netpk( obj, 1 )
                data             = pk:get()
                data.visual_name = "new_item\\documents_" .. rand
                data.physic_type = 3  -- чтобы полтеры не швырялись??????????
                pk:set( data )
                count = count + 1
            end
            i = false
        end
    end
    if i == true then
        local rand = lua_random( 2, 9 )
        local obj  = amk.spawn_item( "x18_document",
            v3f( war_docs[ 1 ][ 1 ], war_docs[ 1 ][ 2 ], war_docs[ 1 ][ 3 ] ),
            war_docs[ 1 ][ 5 ], war_docs[ 1 ][ 4 ]
        )
        if obj then
            pk               = get_netpk( obj, 1 )
            data             = pk:get()
            data.visual_name = "new_item\\documents_" .. rand
            data.physic_type = 3
            pk:set( data )
            count = count + 1
        end
    end
    nlc_vars.x18_docs_spawned = count
end

-- кольчужная куртка для Шустрого
function add_outfit_bandit_m1()
    local war_docs = {
        { 344.457, 16.801, 244.435, 250, 586532 },
        { 354.062, 16.767, 246.729, 251, 591150 },
        { 322.725, 12.053, 229.196, 146, 577209 },
        { 328.686, 14.416, 215.677, 146, 580327 },
        { 343.088, 16.493, 200.794, 146, 588360 },
        { 305.538, 12.463, 292.050, 246, 569312 },
        { 260.961, 9.7812, 267.837, 249, 539181 },
        { 306.571, 16.849, 268.746, 246, 568919 },
        { 351.768, 16.904, 250.251, 251, 590244 }
    }
    local n = lua_random( #war_docs )
    amk.spawn_item( "outfit_bandit_m1",
        v3f( war_docs[ n ][ 1 ], war_docs[ n ][ 2 ], war_docs[ n ][ 3 ]),
        war_docs[ n ][ 4 ], war_docs[ n ][ 5 ]
    )
end

function add_kluch_x10()
    amk.spawn_item( "kluch_x10", v3f( -59.252101898193, -23.468673706055, 45.817882537842), 3611, 348 )
end

function add_kont_leshyi()
    if not has_alife_info( "leshyi_umer2" ) then
        sak_dialog.spawn_m_cont( 2 )
        send_tip(
            "Напали твари, еле убежал! Пришлось бросить контейнер. Не доходя до свинофермы, справа от дороги, возле пня",
            "Записка Лешего", 11, 20, "death", "sak", "red"
        )
        db.actor:give_info_portion( "leshyi_umer2" )
    end
end

function add_garmonika_letter()
    send_tip(
        "Под кожухом губной гармошки находится листок с непонятным текстом!",
        "Записка в гармошке", 5, 15, "g_g", "sak", "yellow"
    )
    local a = lua_random( 1, 10 )
    db.actor:give_info_portion( "garmonika_letter" .. a )
end

function info_gen_mil_group()
    send_tip(
        "Так-с... Вояки, скелеты, один в ботанском скафандре... Наверно та самая группа, что вышла с Кордона с Призраком...",
        "Группа военных и учёных", 5, 15, "g_g", "sak", "yellow"
    )
    db.actor:give_info_portion( "gen_mil_group_info" )
    add_gen_mil_items()
end

function info_korovan()
    send_tip(
        "Так так... Ящички военные, видимо с оружием... Посмотрим...",
        "Ящики каравана", 5, 15, "g_g", "sak", "yellow"
    )
end

function info_val_zaval()
    send_tip(
        "Так! Тут же не пролезть! Хотя... Если пару, а ещё лучше, четырех, мужиков попросить подсобить. Вроде раскидать можно.",
        "Вход завален!", 5, 15, "g_g", "sak", "yellow"
    )
end

function add_box_bes()
    local objt = g_sim:story_object( story_ids.dv_box_bes_02 )  -- story_object( 9114 )
    if not objt then misc.spawn_by_name( "dv_box_bes_01" )
        misc.spawn_by_name( "dv_box_bes_02" )
    end
end

function add_klyk_body()
    local objt = g_sim:story_object( story_ids.yan_klyk_body )  -- story_object( 9559 )
    if not objt then misc.spawn_by_name( "yan_klyk_body" ) end
end

function add_sanek_tomb() misc.spawn_by_name( "esc_mogila_05" ) end
function add_bun_ognetushitel() misc.spawn_by_name( "bun_ognetushitel_2" ) end

function out_bun_ognetushitel()
    misc.release_by_name( "bun_ognetushitel_2" )
    misc.release_by_name( "bun_space_restrictor_ognetushitel_2" )
end

function add_ammo_bes()
    local obj = g_sim:story_object( story_ids.dv_box_bes_02 )  -- story_object( 9114 )
    if obj then
        misc.spawn_multi( 'ammo_5.45x39_fmj', obj.position, obj.id, 3 )
    end
    off_on( obj )
end

function add_postmens_bag()
    amk.spawn_item( "postmens_bag", v3f( 269.293823, -7.944348, 0.794339 ), 390, 376745 )
end

function add_dsc_gigant()
    local obj = amk.spawn_item( "marsh_gigant",
        v3f( 239.132904, -2.481397, 655.872864 ), 4084, 680450
    )
    local pk        = get_netpk( obj )
    local data      = pk:get()
    data.health     = 0
    data.upd.health = 0
    pk:set( data )
    misc.spawn_to( "mutant_psevdogigant_hand", obj )
end

--спавним контейнер в Кишке
function add_dsc_container()
    local sobj = alife():create( "arc_art_box_basic",
        v3f( -111.465446, 0.213115, -301.207489 ), 267329, 3998
    )
    local pk   = get_netpk( sobj, 1 )
    local tbl  = pk:get()
    local caps = sak_dialog.treasure_any_capsule()
    if not strpos( caps, "af_dummy_", 1, true ) then
        tbl.custom_data = caps .. "_dyn" .. tostring( lua_random( 2, 4 ) ) .. "d"
    else
        tbl.custom_data = caps
    end
    pk:set( tbl )
end

function add_scarman_pda()
    local points = {
         62.94,  11.36,  52.87, 3336,  32520,  "на Забытом хуторе, сарай там ещё какой-то прямо над оврагом.",
        -94.02, -2.18, -230.80,  271, 115646,  "где-то на свалке заброшенной техники.",
        -12.10,  0.63,  297.45,  187, 265404,  "на Кордоне, где-то на фермах."
    }
    local rand = ( amk_vars.r_treas_items or 1 )
    amk.spawn_item( "scarman_pda",
        v3f( points[ rand * 6 - 5 ], points[ rand * 6 - 4 ], points[ rand * 6 - 3 ]),
        points[ rand * 6 - 2 ], points[ rand * 6 - 1 ]
    )
    db.actor:give_talk_message(
        points[ rand * 6 ], "ui\\ui_iconsTotal", Frect():set( 0, 0, 0, 0 ), "simple_answer_item"
    )
end

function voron_find_item_1()
    amk.spawn_item( "kartina04", v3f( -14.53, 5.3, 3.96 ), 1126, 1195 )
    sak_spawn.add_x18_monsters()
end

function add_notebook()
    amk.spawn_item( "note-book", v3f( 41.8, -6.194, -33.82 ), 1166, 7395 )
    misc.release_by_name( "x18_notebook" )
    sak_spawn.add_x18_monsters()
end

function add_seif ()
    amk.spawn_item( "inventory_sakbox_03", v3f( 15.52, -12.43, 8.59 ), 1156, 5132 )
    sak_spawn.add_x18_monsters()
end

function voron_find_item_2() end
function add_instrument_box() amk.spawn_item( "instrument_box",     v3f( 108.5,   7.74, -9.07    ), 987,  304788 ) end
function voron_find_item_4()  amk.spawn_item( "klyk_pribor_1c",     v3f( 108.5,   7.74, -9.07    ), 987,  304788 ) end
function voron_find_item_5()  amk.spawn_item( "item_psi_helmet_01", v3f( 108.5,   7.74, -9.07    ), 987,  304788 ) end
function add_ak47()           amk.spawn_item( "wpn_ak47",           v3f( 108.5,   7.74, -9.07    ), 987,  304788 ) end
function add_doktor_book()    amk.spawn_item( "sak_book4",          v3f( -3.49,   -4.26, 191.34  ), 2195, 96166  ) end
function add_diplomat()       amk.spawn_item( "diplomat",           v3f( 108.46,  11.35, -13.26  ), 1544, 6982   ) end
function add_computer()       amk.spawn_item( "computer",           v3f( -114.96, -2.23, 8.18    ), 2248, 8511   ) end
function add_new_103item()    amk.spawn_item( "quest_case_06",      v3f( -201.0,  1.123, 105.76  ), 535,  36227  ) end
function add_krot_pda()       amk.spawn_item( "agroprom_pda",       v3f( -133.49, -3.08, -139.18 ), 810,  0      ) end
function add_und_pda()        amk.spawn_item( "und_pda",            v3f( -45.12,  -4.01, -30.08  ), 718,  4466   ) end

function give_seif( obj )
    amk.remove_item_from_inventory_by_name( obj, db.actor )
    amk.spawn_item( "m_inventory_seif", v3f( 34.37, -3.37, -37.29 ), 1997, 21736 )
end

function add_decoder()
    local rand = ( amk_vars.r_task_reward or 1 ) * 5
    local points = {
        -120.773430, 21.564411, -22.930630, 68,  1529,
        -99.493599,  21.564243, -20.232609, 511, 1529,
        -108.488991, 21.564507, -37.621181, 309, 1529,
        -127.128922, 18.912310, -21.667521, 54,  1529,
        -126.292847, 21.564272, -25.582495, 79,  1529
    }
    amk.spawn_item( "decoder1",
        v3f( points[ rand - 4 ], points[ rand - 3 ], points[ rand - 2 ] ),
        points[ rand ], points[ rand - 1 ]
    )
    ---------------------------- вечный вентилятор Ворону в х16 -------------------------------------
    if dsh.get_next_random( "test.make_shron_voron" ) < 0.8 then
        local u_obj = amk.spawn_item( "ventilator_01", v3f( 74.9509, 10.17636, -9.08724 ), 1544, 5773 )
        if u_obj then
            local pk         = get_netpk( u_obj, 1 )
            local data       = pk:get()
            data.physic_type = 3
            pk:set( data )
        end
    end
    --------------------------------------------------------------------------------------------------
end

--функцию спавна гаусс - пистолета смотреть в sak_dialog.script
function add_gauss() amk.spawn_item( "wpn_gungauss", v3f( -126.11, 0.91, -533.55 ), 836, 31356 ) end

function add_pellicle_red() amk.spawn_item( "af_red_dummy_pellicle", v3f( -239.99, 4.85,  99.93  ), 1362, 13956  ) end
function add_battery_red()  amk.spawn_item( "af_red_dummy_battery",  v3f( 668.9,  -45.79, -39.93 ), 1896, 227187 ) end

function add_medusa_green()
    local rand = ( nlc_vars.stored_r_treas_items or 1 )
    local arts = { "af_dummy_green_vyvert", "af_dummy_green_medusa", "af_dummy_green_blood" }
    amk.spawn_item( arts[ rand ], v3f( 260.59, -9.82, -135 ), 404, 373051 )
end

function add_vyvert_green()
    local rand = ( nlc_vars.stored_r_treas_items or 1 )
    local arts = { "af_dummy_green_medusa", "af_dummy_green_blood", "af_dummy_green_vyvert" }
    amk.spawn_item( arts[ rand ], v3f( 115.13, 4.83, -409.26 ), 942, 311330 )
end

function add_blood_green()
    local rand = ( nlc_vars.stored_r_treas_items or 1 )
    local arts = { "af_dummy_green_blood", "af_dummy_green_vyvert", "af_dummy_green_medusa" }
    amk.spawn_item( arts[ rand ], v3f( 55.34, 1.27, 40.89 ), 1511, 68094 )
end

function add_same_case() amk.spawn_item( "same_quest_case", v3f( 127.5, -4.55, 21.7 ), 1238, 35659 ) end

function add_order()
    local obj = g_sim:story_object( story_ids.agr_inventory_box_sak )
    misc.spawn_obj( "rad_document7", obj.position, obj.id )
    if obj.online then
        sim:set_switch_online ( obj.id, false )
        sim:set_switch_offline( obj.id, true  )
        amk.convert_npc[ obj.id ] = 1
    end
end

function add_yan_matveev2()
    local obj = g_sim:story_object( story_ids.assistant2 )
    if not obj then obj = misc.spawn_by_name( "assistant2" ) end
    misc.spawn_objects( "wpn_winchester_m1,ammo_12x76_dart,ammo_12x76_dart,medkit_army", obj.position, obj.id )
    db.actor:give_info_portion( "matveev_vasilev_start" )
end

function create_vasilev_suit()
    local robjd
    local vas_suit = {
        { -54.131851196289, -11.90, -257.36654663086, 20591, 1454 },
        { -84.549049377441, -12.25, -279.95080566406, 10053, 1449 },
        { -85.072196960449, -12.20, -225.26371765137, 9840,  1485 },
        { -73.494361877441, -9.70,  -205.46318054199, 13208, 1488 },
        { -44.27661895752,  -12.00, -212.60238647461, 23896, 1447 },
        { -73.885437011719, -7.50,  -318.84692382813, 12859, 1449 },
        { -107.64751434326, -9.45,  -277.06719970703, 54980, 1480 }
    }
    local coord = lua_random( 1, #vas_suit )
    local spawn = vas_suit[ coord ]
    robjd = amk.spawn_item( "vasilev_suit",
        v3f( spawn[ 1 ], spawn[ 2 ], spawn[ 3 ]), spawn[ 5 ], spawn[ 4 ]
    )
    if robjd then
        local pk         = get_netpk( robjd, 1 )
        local data       = pk:get()
        data.visual_name = "new_item\\skaf"
        data.custom_data = "[logic]\ncfg = scripts\\self_inv_box.ltx"
        pk:set( data )
        local pos = robjd.position
        misc.spawn_objects( "yan_pda", pos, robjd.id )
        misc.spawn_objects( "vasiljev_letter", pos, robjd.id )
        nlc_vars.vas_suit_id = robjd.id
    end
end

function vasilev_suit_closed()
    local objid = nlc_vars.vas_suit_id or 0
    if objid == 0 then return end
    local robjd = g_sim:object( objid )
    local pos   = robjd.position
    local lvid  = robjd.level_vertex_id
    local gvid  = robjd.game_vertex_id
    if robjd then misc.release_obj( objid, 'vasilev_suit_closed') end
    local self  = level.main_input_receiver()
    if self then  self:GetHolder():start_stop_menu( self, true ) end
    set_inactivate_input_time( 5 )
    robjd = amk.spawn_item( "ecolog_outfit", pos, gvid, lvid )
    nlc_vars.vas_suit_id = nil
end

function yan_ghost_pda()
    db.actor:give_info_portion( "yan_provodnik_spawn" )
    db.actor:give_info_portion( "pseudo_ghost" )
    sak.send_tip( "Это не Призрак!", "Воспоминание", 0, 20, "g_g", "rememb", "yellow" )
    local self = level.main_input_receiver()
    if self then
    self:GetHolder():start_stop_menu( self, true )
    end
end

function create_corpse( section, pos, gvid, lvid, story_id, custom_data ) -- создает объект с нулевым здоровьем
    local obj       = amk.spawn_item( section, pos, gvid, lvid )
    local pk        = get_netpk( obj )
    local data      = pk:get()
    data.story_id   = story_id
    data.health     = 0
    data.upd.health = 0
    if custom_data then data.custom_data = custom_data end
    pk:set( data )
    return obj
end

function add_mil_kurjer_corps()
    local mil_kurjer = {
        { -280.74, -18.14, 191.41, 58761, 1789 },
        { -281.75, -18.14, 191.76, 58763, 1789 },
        { -305.80, -27.60, 206.82, 39931, 1788 },
        { -301.95, -27.60, 208.68, 41050, 1788 },
        { -332.10, -22.04, 214.78, 18407, 1839 },
        { -331.03, -22.04, 213.81, 18898, 1839 },
        { -275.62, -22.50, 270.98, 63474, 1832 },
        { -271.56, -22.50, 264.35, 66964, 1832 },
        { -270.70, -22.13, 298.72, 67591, 1832 },
        { -275.18, -22.13, 291.84, 64057, 1832 }
    }
    local item1, item2
    local coord  = ( lua_random( 1, table.getn( mil_kurjer ) / 2 ) * 2 - 1 )
    local spawn  = mil_kurjer[ coord ]
    local spawn2 = mil_kurjer[ coord + 1 ]
    local obj    = create_corpse( "mil_stalker_respawn_2",
        v3f( spawn[ 1 ], spawn[ 2 ], spawn[ 3 ] ), spawn[ 5 ], spawn[ 4 ],
        9492, "[known_info]\nmil_kurjer_dead"
    )
    misc.process_spawn()
    for _, v in ipairs({ "mil_kurjer_pda", "belt_2_art" }) do
    	misc.spawn_to( v, obj )
	end
    amk.spawn_item( "quest_manycase_01_mil_kurjer",
        v3f( spawn2[ 1 ], spawn2[ 2 ], spawn2[ 3 ] ), spawn2[ 5 ], spawn2[ 4 ]
    )
    item1 = misc.spawn_to( "af_full_akkum", obj )
    item2 = misc.spawn_to( "af_baloon", obj )
	off_on( obj )
    local pk       = get_netpk( item1 )
    local data     = pk:get()
    data.condition = 0.05
    pk:set( data )
    pk, data       = nil, nil
    pk             = get_netpk( item2 )
    data           = pk:get()
    data.condition = 0.80
    pk:set( data )
end

function add_two_corpses()
    local obj = create_corpse( "yan_ecolog_respawn_2",
        v3f( 181.03, 6.6, -375.92 ), 938, 381590, 9497
    )
    misc.spawn_to( "scaintist_docs", obj )
    obj = create_corpse( "yan_ecolog_respawn_2",
        v3f( 184.60, 6.0, -378.50 ), 938, 384388, 9496
    )
    sak_dialog.spawn_m_cont( 3 )
end

function add_monster_body()
    local point_dsc_mon = {
        { 405.60488891602, -1.8460313081741, -371.45739746094, 908704, 4153 },
        { 427.96447753906, -2.0680828094482, -340.39221191406, 950425, 4152 },
        { 440.80981445313, -1.5117417573929, -377.07540893555, 970844, 4151 },
        { 445.06329345703, -1.0903329849243, -352.94735717773, 977239, 4160 },
        { 424.95922851563, -1.5664627552032, -378.98260498047, 945823, 4151 }
    }
    local point = ( amk_vars.r_task_reward or 2 )
    local obj   = amk.spawn_item( "physic_object",
        v3f( point_dsc_mon[ point ][ 1 ], point_dsc_mon[ point ][ 2 ], point_dsc_mon[ point ][ 3 ] ),
        point_dsc_mon[ point ][ 5 ], point_dsc_mon[ point ][ 4 ]
    )
    if obj then
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.visual_name = "new_item\\sushi_boar"
        data.custom_data = "[collide]\nignore_static"
        data.physic_type = 3
        data.mass        = 45
        data.fixed_bones = "link"
        pk:set( data )
    end
    obj = amk.spawn_item( "boar_body",
        v3f( point_dsc_mon[ point ][ 1 ], point_dsc_mon[ point ][ 2 ], point_dsc_mon[ point ][ 3 ] ),
        point_dsc_mon[ point ][ 5 ], point_dsc_mon[ point ][ 4 ]
    )
    if obj then
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.custom_data = "[logic]\nactive = ph_idle@enable\n[ph_idle@enable]\nnonscript_usable = true\ntips = st_search_body"
        pk:set( data )
    end
    misc.spawn_to( "bar_lucky_pda", obj )
    timers.start_timer( "save_shustr", 0, 6, 28, "sak.time_shustr("..obj.id..")" )
end

function time_shustr( id )
    if not has_alife_info( "atp_bandit_pda_done" ) then
        db.actor:give_info_portion( "atp_bandits_open_fire" )
        db.actor:give_info_portion( "esc_assault_start" )
    end
    local obj1 = g_sim:object( id )
    if obj1 then misc.release_obj( obj1, 'sak.script:592') end
end

function docent_x10docs_time_start()
    timers.start_timer( "docent_x10docs", 0, 2, 28, "sak.time_docent_x10docs()" )
end

function time_docent_x10docs()
    send_tip( "Меченный, подходи, есть мысли.", "Сообщение от Доцента", 11, 20, "ecolog", "sak", "green" )
    db.actor:give_info_portion( "docent_x10docs_1_1faze" )
end

function docent_x10harddisc_time_start()
    timers.start_timer( "docent_x10harddisc", 0, 13, 28, "sak.time_docent_x10harddisc()" )
end

function time_docent_x10harddisc()
    send_tip( "Меченный, подходи, есть мысли.", "Сообщение от Доцента", 11, 20, "ecolog", "sak", "green" )
    db.actor:give_info_portion( "docent_x10docs_4faze" )
end

function muller_time_start()
    timers.start_timer( "save_muller", 2, 7, 28, "sak.time_muller()" )
end

function time_muller()
    if not has_alife_info( "bar_korovan_done" ) then
        if level.name() ~= "l03u_agr_underground" then
            local obj = g_sim:story_object( story_ids.agr_muller )
            if obj then
                local pk        = get_netpk( obj )
                local data      = pk:get()
                data.health     = 0
                data.upd.health = 0
                pk:set( data )
            end
        else
            local obj = level_object_by_sid( 9517 )
            if obj and obj:alive() then obj:kill( obj ) end
        end
    end
end

function add_agroprom_box()
    local obj = g_sim:story_object( story_ids.agr_quest_case_02 )
    if obj then misc.release_obj( obj, 'add_agroprom_box' ) end
    create_items( db.actor, "quest_case_02", 1 )
    agroprom_tasks.agr_trader_documents()
end

function blockpost_case_clear()
    local obj = g_sim:story_object( story_ids.esc_quest_case_01 )
    if obj then misc.release_obj( obj, 'blockpost_case_clear' ) end
end

function add_kontainer() sak_dialog.spawn_m_cont( 1 ) end

function agroprom_wpm()
    local obj = g_sim:story_object( story_ids.agr_inventory_box_sak )
    misc.spawn_to( "wpn_vintorez_m1", obj )
    off_on( obj )
end

function add_books()
    amk.spawn_item( "sak_book1", v3f( 28.11,   -12.07, 38.93  ), 1161, 6530 )
    amk.spawn_item( "sak_book2", v3f( -120.27, 21.56,  -32.65 ), 1529, 165  )
    amk.spawn_item( "sak_book3", v3f( 0.77,    -19.45, 24.89  ), 2768, 6203 )
end

function add_new_111item()
    amk.spawn_item( "dynamite", v3f( -213.57, -23.19, -127.39 ), 59, 39928 )
end

function add_new_109item()
    local point_val_case = {
        { 150.60958862305, 5.8319563865662, -252.73635864258, 347570, 966 },
        { 161.28861999512, 5.7852087020874, -274.28143310547, 361192, 964 },
        { 159.63629150391, 6.7704277038574, -268.4911499023,  360453, 964 },
        { 160.55030822754, 5.8298053741455, -252.44580078125, 360471, 963 },
        { 141.8815612793,  5.9694418907166, -241.07000732422, 340306, 966 }
    }
    local point = amk_vars.r_task_reward or 2
    local obj = amk.spawn_item( "quest_case_05",
        v3f(
            point_val_case[ point ][ 1 ],
            point_val_case[ point ][ 2 ],
            point_val_case[ point ][ 3 ]
        ),
            point_val_case[ point ][ 5 ],
            point_val_case[ point ][ 4 ]
    )
    timers.start_timer(
        "val_case", 0, lua_random( 8, 11 ), 28,
        "sak.val_case_out("..obj.id..")"
    )
end

function val_case_out( id )
    local obj1 = g_sim:object( id )
    if obj1 and ( obj1.parent_id == nil or obj1.parent_id == BAD_OBJ_ID ) then
        misc.release_obj( obj1, 'sak.script:592' )
    end
end

function add_esc_bandit_letter()
    local obj = create_corpse( "yan_ecolog_respawn_2",
        v3f( 188.23, -0.14, -184.93 ), 402, 335280, 9499
    )
    misc.spawn_to( "scaintist_pda", obj )
end

function add_resiver()
    amk.spawn_item( "sak_resiver", v3f( -185.57, -3.58, 94.89 ), 338, 39411 )
end

function add_drug()
    amk.spawn_item( "dogfrend", v3f( -6.71, 0.41, 247.19 ), 258, 170000 )
end

function add_strelok_pda()
    amk.spawn_item( "strelok_pda", v3f( 42.95, 61.56, -26.25 ), 2417, 6406 )
end

function info_received()
    send_tip(
        "Найдена информация о новом пути!", "Новый путь",
        2, 10, "nlc", "pda_news", "sky_blue"
    )
end

function info_amk_received()
    send_tip(
        "Найден новый рецепт!", "Найдена информация",
        2, 10, "artmod", "pda_news", "sky_blue"
    )
end

function info_strelok_pda()
    send_tip(
        "В ПДА Стрелка предупреждение о фальшивости МОНОЛИТА", "Остановись",
        2, 20, "g_g", "pda_news", "red"
    )
end

function info_artmod()
    send_tip(
        "Найден рецепт преобразования артефакта!", "Новый артмод",
        5, 10, "artmod", "pda_news", "pink"
    )
end

function info_code()
    send_tip(
        "Обнаружена кодовая комбинация блокированной двери!", "Получен код",
        2, 10, "code", "pda_news", "pink"
    )
end

function info_doktor()
    send_tip(
        "Странные записи, странного человека. Харон. Кто это?",
        "Записная книжка Харона",
        0, 10, "teleport", "pda_news", "sky_blue"
    )
end

function info_teleport()
    send_tip(
        "Телепорт настроен и активирован!", "Телепорт готов",
        2, 10, "teleport", "sak", "sky_blue"
    )
end

function mar_zone_tips()
    send_tip(
        "Сталкер! Стой и не двигайся! Сейчас к тебе подойдут...", "Внимание!",
        0, 10, "default", "sak", "red"
    )
end

function gar_zone_tips()
    send_tip(
        "Э! Подойди к знаку и не махай стволом, побазарим...", "Внимание!",
        0, 10, "default", "sak", "red"
    )
end

function gar_zone_2tips()
    send_tip(
        "Ты чё, не вкурил?! К знаку иди и стой! Завалим, в натуре...", "Внимание!",
        0, 10, "default", "sak", "red"
    )
end

function info_no_matches()
    send_tip(
        "Спичек-то нет! Развести огонь не удалось", "Пламя",
        0, 5, "g_g", "pda_news", "red"
    )
end

function info_no_battery()
    send_tip(
        "Прибор не работат. Нет питания. Нужен заряженный аккумулятор.", "Измеритель",
        0, 5, "g_g", "pda_news", "red"
    )
end

function info_no_module()
    send_tip(
        "Что менять-то? Ломать не стоит, мало ли...", "Гармонизатор излучателя",
        0, 5, "g_g", "pda_news", "red"
    )
end

function rad_outfit_in_tip()
    send_tip(
        "Зафиксировано аномальное воздействие...", "Датчик костюма",
        3, 5, "pribor", "pda_news", "red"
    )
end

function rad_outfit_out_tip()
    send_tip(
        "Защитное покрытие нормализовано...", "Датчик костюма",
        3, 5, "pribor", "pda_news", "green"
    )
end

function info_not_ready()
    send_tip(
        "Идёт обработка данных, ждите...", "Измеритель",
        0, 5, "pribor", "pda_news", "red"
    )
end

function info_rep_box()
    send_tip(
        "Нечем ремонтировать! Нет подготовленных ремкомплектов", "Ремонт",
        0, 5, "g_g", "pda_news", "red"
    )
end

function info_klava()
    if
        db.actor:has_info( "global_dialogs" )
        and not has_alife_info( "klava_feik_found1" )
    then
        send_tip(
            "Странная вещица. Похожа на ПДА, только не работает, сзади на корпусе гравировка - {Вергас-08}",
            "Сломанная клавиатура", 2, 10, "g_g", "pda_news", "sky_blue"
        )
        db.actor:give_info_portion( "klava_feik_found1" )
        db.actor:disable_info_portion( "klava_feik_found" )
    end
end

function calc_items_count( section, flt )
    if flt == nil then
        flt = function () return true end
    end
    local result = 0
    for sect, ids in pairs( sak_inventory.rucksack ) do
        if strposx( sect, section ) and flt( sect ) then
            result = result + #ids
        end
    end
    for sect, ids in pairs( sak_inventory.eatable ) do
        if strposx( sect, section ) and flt( sect ) then
            result = result + #ids
        end
    end
    return result
end

function have_items_count( itm, items_count, af_flag, capsule_flag )
    if type( itm ) == "table" then -- проверка группы элементов, синтаксис: have_items_count({ bread = 3, conserva = 3})
        for sect, count in pairs( itm ) do
            if not have_items_count ( sect, count ) then return false end
        end
        return true
    end
    if strpos( itm, "grenade_" ) then
        return amk_utils.inventory_search( itm, items_count )
    end
    local flt = nil
    if capsule_flag then
        flt =   function ( section )
                    return not strposx( section, "_capsule" )
                end -- простой колбек фильтра
    end
    local have = calc_items_count( itm, flt )
    if have < items_count then
        --wprintf( "[~T]. #DBG: в наличии ~C0D %d~C07 предметов~C0A %-35s~C07 из~C0A %d~C07 требуемых", have, itm, items_count )
        return false
    else
        return true
    end
end

sak.have_item_namber = have_items_count

function spawn_items( npc, section, number )
    if type( npc.id ) ~= "function" then
        npc = client_obj( misc.get_object_id( npc ) )
    end
    if npc == nil then return end
    if npc:id() == db.actor:id() then
        if razgruzka.test_item_type( section, "ammo,medical,grenade" ) then
            razgruzka.spawn_to_inv( section, number )
            relocate_item( npc, "in", section, number )
            return
        end
    end
    misc.spawn_multi( section, npc:position(), npc:id(), number )
    relocate_item( npc, "in", section, number )
end

function create_items( npc, sect_list, number )
    local ts = type( sect_list )
    if ts == "string" then
        spawn_items( npc, sect_list, number )
    elseif ts == "table" then
        for k, v in pairs( sect_list ) do
            if type( v ) == "number" then     -- { bandage = 1, medkit = 3 }
                spawn_items( npc, k, v )
            elseif type( v ) == "string" then -- { "bandage", "medkit" }
                spawn_items( npc, v, number )
            end
        end
    end
end

function artmodscheck( anom, af, anom_sect )
    local af_sect = af:section()
    local aid     = "artmod_"
    local at      = sak_artmods.artmod_resiepts
    -------------------- из жарки ---------------------
    if strpos( anom_sect, "_zharka", 1, true ) then
        for i = 1, 6 do
            artmod(
                anom, af,
                at[ aid .. i .. "5" ][ 1 ], at[ aid .. i .. "5" ][ 2 ],
                at[ aid .. i .. "5" ][ 3 ], at[ aid .. i .. "5" ][ 4 ],
                at[ aid .. i .. "5" ][ 5 ], at[ aid .. i .. "5" ][ 6 ],
                anom_sect
            )
        end
    end
    ------------------- из электры -------------------
    if strpos( anom_sect, "_galant", 1, true ) then
        if af_sect == "af_red_dummy_battery" then af_zone_off( af ) end
        for i = 1, 7 do
            artmod(
                anom, af,
                at[ aid .. i .. "6" ][ 1 ], at[ aid .. i .. "6" ][ 2 ],
                at[ aid .. i .. "6" ][ 3 ], at[ aid .. i .. "6" ][ 4 ],
                at[ aid .. i .. "6" ][ 5 ], at[ aid .. i .. "6" ][ 6 ],
                anom_sect
            )
        end
        if level.name() ~= "generators" then return end
        artmod01( af, "af_dummy_dummy_new", "af_dummy_buliz", "akk_is_ready", 0, 1, 10, anom )
    end
    ------------------- из холодца --------------------
    if strpos( anom_sect, "_buzz", 1, true ) then
        for i = 1, 8 do
            artmod(
                anom, af,
                at[ aid .. i .. "4" ][ 1 ], at[ aid .. i .. "4" ][ 2 ],
                at[ aid .. i .. "4" ][ 3 ], at[ aid .. i .. "4" ][ 4 ],
                at[ aid .. i .. "4" ][ 5 ], at[ aid .. i .. "4" ][ 6 ],
                anom_sect
            )
        end
        if level.name() ~= "aver" then return end
        artmod01( af, "af_blood_dyn5d",  "af_dummy_green_blood",  "info_green_blood",  1, 1, 50, anom )
        artmod01( af, "af_medusa_dyn5d", "af_dummy_green_medusa", "info_green_medusa", 1, 0, 50, anom )
        artmod01( af, "af_vyvert_dyn5d", "af_dummy_green_vyvert", "info_green_vyvert", 1, 2, 50, anom )
    end
    ------------------- из карусели -------------------
    if strpos( anom_sect, "_mincer", 1, true ) then
        for i = 1, 6 do
            artmod(
                anom, af,
                at[ aid .. i .. "3" ][ 1 ], at[ aid .. i .. "3" ][ 2 ],
                at[ aid .. i .. "3" ][ 3 ], at[ aid .. i .. "3" ][ 4 ],
                at[ aid .. i .. "3" ][ 5 ], at[ aid .. i .. "3" ][ 6 ],
                anom_sect
            )
        end
        if af_sect == "af_red_dummy_spring" then af_zone_off( af ) end
    end
    -------------------- из воронки --------------------
    if strpos( anom_sect, "_mosquito_bald", 1, true ) then
        for i = 1, 6 do
            artmod(
                anom, af,
                at[ aid .. i .. "1" ][ 1 ], at[ aid .. i .. "1" ][ 2 ],
                at[ aid .. i .. "1" ][ 3 ], at[ aid .. i .. "1" ][ 4 ],
                at[ aid .. i .. "1" ][ 5 ], at[ aid .. i .. "1" ][ 6 ],
                anom_sect
            )
        end
        artmod01( af, "af_dummy_battery", "af_battery", "actor_jump_info", 1, 1, 50, anom )
        if af_sect == "af_red_dummy_pellicle" then af_zone_off( af ) end
    end
    -------------------- из трамплина --------------------
    if strpos( anom_sect, "_gravi_zone", 1, true ) then
        if af_sect == "af_red_dummy_battery" then af_zone_off( af )  end
        for i = 1, 6 do
            artmod(
                anom, af,
                at[ aid .. i .. "2" ][ 1 ], at[ aid .. i .. "2" ][ 2 ],
                at[ aid .. i .. "2" ][ 3 ], at[ aid .. i .. "2" ][ 4 ],
                at[ aid .. i .. "2" ][ 5 ], at[ aid .. i .. "2" ][ 6 ],
                anom_sect
            )
        end
    end
    --------------------- из снежки ---------------------
    if strpos( anom_sect, "_ice", 1, true ) then
        for i = 1, 6 do
            artmod(
                anom, af,
                at[ aid .. "7" .. i ][ 1 ], at[ aid .. "7" .. i ][ 2 ],
                at[ aid .. "7" .. i ][ 3 ], at[ aid .. "7" .. i ][ 4 ],
                at[ aid .. "7" .. i ][ 5 ], at[ aid .. "7" .. i ][ 6 ],
                anom_sect
            )
        end
        artmod01( af, "af_dummy_battery", "af_red_dummy_battery", "info_red_battery", 0, 2, 0, anom )
        artmod01( af, "af_dummy_spring", "af_red_dummy_spring", "info_red_spring", 0, 2, 0, anom )
        artmod01( af, "af_dummy_pellicle", "af_red_dummy_pellicle", "info_red_pellicle", 0, 2, 0, anom )
        artmod01( af, "af_electra_sparkler_dyn5d", "af_dummy_sparkler", "info_artmod_activ_anom", 0, 0, 20, anom )
        artmod01( af, "af_dummy_dummy", "af_dummy_dummy_new", "info_dummy_dummy_new", 0, 2, 0, anom )
    end
    -------------------- из киселя? ---------------------
    if strpos( anom_sect, "_sakbuzz", 1, true ) then
        artmod(
            anom, af,
            at[ aid .. "81" ][ 1 ], at[ aid .. "81" ][ 2 ],
            at[ aid .. "81" ][ 3 ], at[ aid .. "81" ][ 4 ],
            at[ aid .. "81" ][ 5 ], at[ aid .. "81" ][ 6 ],
            anom_sect
        )
    end
end

function artmod( nearest_anomaly, af, item1, item2, item3, item4, info_artmod, item_targ, anom_sect )
    local af_sect    = af:section()
    local pos        = af:position()
    local startflag  = false
    local zombieflag = false
    if not db.actor:has_info( info_artmod ) then return end
    if g_sim:object( af:id() ) == nil then return end
    if
        str_in_tab( af_sect, { item1, item2, item3, item4 } )
        and db.actor:has_info( info_artmod )
    then
        local s = {}
        s.i0t, s.i1t, s.i2t, s.i3t, s.i4t, s.ams, s.ami = -1, -1, -1, -1, -1, 0, -1
        s = nlc_vars[ "artmod_activation_" .. info_artmod ] or s
        if s.i0t ~= nearest_anomaly then
            s.i0t = nearest_anomaly
            s.i1t, s.i2t, s.i3t, s.i4t, s.ams, s.ami = -1, -1, -1, -1, 0, -1
        end
        if s.ams == 1 and s.ami ~= info_artmod then return end
        if strpos( af_sect, item1, 1, true ) and s.i1t == -1 then
            s.i1t = af:id()
            level.add_pp_effector( "blink.ppe", 234, false )
            if s.ams == 0 then startflag = true end
        end
        if strpos( af_sect, item2, 1, true ) and s.i2t == -1 then
            s.i2t = af:id()
            level.add_pp_effector( "blink.ppe", 235, false )
            if s.ams == 0 then startflag = true end
        end
        if strpos( af_sect, item3, 1, true ) and s.i3t == -1 then
            s.i3t = af:id()
            level.add_pp_effector( "blink.ppe", 236, false )
            if s.ams == 0 then startflag = true end
        end
        if strpos( af_sect, item4, 1, true ) and s.i4t == -1 then
            s.i4t = af:id()
            level.add_pp_effector( "blink.ppe", 237, false )
            if s.ams == 0 then startflag = true end
        end
        if startflag then
            s.ams     = 1
            s.ami     = info_artmod
            startflag = false
        end
        if s.i1t ~= -1 and sim:object( s.i1t ) == nil then s.i1t = -1 zombieflag = true end
        if s.i2t ~= -1 and sim:object( s.i2t ) == nil then s.i2t = -1 zombieflag = true end
        if s.i3t ~= -1 and sim:object( s.i3t ) == nil then s.i3t = -1 zombieflag = true end
        if s.i4t ~= -1 and sim:object( s.i4t ) == nil then s.i4t = -1 zombieflag = true end
        if zombieflag then
            if s.i1t == -1 and s.i2t == -1 and s.i3t == -1 and s.i4t == -1 then
                s.i0t      = -1
                s.ams      =  0
                s.ami      = -1
                zombieflag = false
            end
        end
        nlc_vars[ "artmod_activation_" .. info_artmod ] = s
        if s.i1t ~= -1 and s.i2t ~= -1 and s.i3t ~= -1 and s.i4t ~= -1 then
            misc.release_obj( s.i1t, 'sak.script:829' )
            misc.release_obj( s.i2t, 'sak.script:830' )
            misc.release_obj( s.i3t, 'sak.script:831' )
            misc.release_obj( s.i4t, 'sak.script:832' )
            level.add_pp_effector( "teleport.ppe", 1530, false )
            -- Варим арт определенного уровня, в зависимости от сложности и опыта гг
            local dgc   = 1 + ( 3 - level.get_game_difficulty() ) / 5 -- коэффициент в зависимости от сложности игры
            local goods = nlc_vars.artmod_goods or 1
            if not str_in_tab( item_targ, { "af_dummy_", "af_dummy_simbion", "_new" } ) then
                local rand_goods = math.floor( math.log( goods * dgc / 1.4 ) ) + 1
                if rand_goods > 5 then rand_goods = 5 end
                -- переделаем на dsh-рандомы, чтобы не было соблазна время подгонять под зелень
                local rand_dyn = dsh.get_next_random( "sak.artmod", rand_goods )
                -- из ХБМ: зелень можно сварить только в аномалии strong ---
                if strpos( anom_sect, "_strong", 1, true ) then
                    rand_dyn = math.min( rand_dyn, 5 )
                elseif strpos( anom_sect, "_average", 1, true ) then
                    rand_dyn = math.min( rand_dyn, 4 )
                else
                    rand_dyn = math.min( rand_dyn, 1)
                end
                ------------------------------------------------------------
                xr_statistic.addCookingPoints( item_targ )
                item_targ = ( item_targ .. "_dyn" .. rand_dyn .. "d" )
            end
            -- варим 7-13 минут
            amk_mod.af_start_transform_timer(
                amk_mod.af_start_transform( 100, 0, "af_dummy_buliz", item_targ ),
                pos, 0, 0, 7 + math.random( 0, 6 )
            )
            store_anom_id( nearest_anomaly )
            nlc_vars.artmod_goods = goods + 1
            nlc_vars[ "artmod_activation_" .. info_artmod ] = nil
            return
        end
    end
end

function store_anom_id( id ) -- запоминаем id аномалии, чтобы 2 раза не варилось в ней
    local u_tbl         = xray_vars.load_table( nlc_vars, "used_anomz", {} )
    u_tbl[ id ]         = true 
    nlc_vars.used_anomz = u_tbl
    wprintf( "[sak.store_anom_id]: table of used anoms for cooking:" )
    misc.dump_table( u_tbl )
end

function artmod01( af, item, item_targ, info_zone_off, d, h, m, anom_id )
    local af_sect = af:section()
    local pos     = af:position()
    local m       = lua_random( 5, m )
    if af_sect == item and db.actor:has_info( info_zone_off ) then
        amk_mod.af_flash( af )
        amk_mod.af_start_transform_timer(
            amk_mod.af_start_transform( 90, 10, af_sect, item_targ ), pos, d, h, m
        )
        store_anom_id( anom_id )
    end
end

function make_kill_task_failed( actor, npc, p1, p2 )
    local nid = npc:id()
    if nid == db.actor:id() then nid = db.actor:id() end
    local targets = task_manager.amk_kill_targets()
    for n, v in pairs( targets ) do
        if v.id == nid then task_manager.make_task_failed( v.task_id ) end
    end
end

function check_used_item( obj )
    gps_habar.on_item_take( obj )
    local esc_mil_food = {
        [ 6501 ] = true, [ 6502 ] = true, [ 6503 ] = true, [ 6504 ] = true,
        [ 6505 ] = true, [ 6506 ] = true, [ 6507 ] = true, [ 6508 ] = true,
        [ 6509 ] = true, [ 6510 ] = true, [ 6511 ] = true, [ 6512 ] = true,
        [ 6513 ] = true, [ 6514 ] = true, [ 6515 ] = true, [ 6516 ] = true,
        [ 6517 ] = true, [ 6518 ] = true, [ 6519 ] = true, [ 6520 ] = true
    }
    local info = nil
    local sect = obj:section()
    local lvl  = level.name()
    local act  = db.actor
    local rand = amk_vars.x18_iq_check or 2
    if strpos( sect, "ammo_" ) then return end

    if     sect == "dollars1"  then add_money( 1 )  misc.release_obj( obj, 'sak.script:check_used_item_release' )
    elseif sect == "dollars3"  then add_money( 3 )  misc.release_obj( obj, 'sak.script:check_used_item_release' )
    elseif sect == "dollars5"  then add_money( 5 )  misc.release_obj( obj, 'sak.script:check_used_item_release' )
    elseif sect == "dollars10" then add_money( 10 ) misc.release_obj( obj, 'sak.script:check_used_item_release' )
    elseif sect == "dollars25" then add_money( 25 ) misc.release_obj( obj, 'sak.script:check_used_item_release' )
    elseif sect == "dollars50" then add_money( 50 ) misc.release_obj( obj, 'sak.script:check_used_item_release' )
    --------------------------------------------------------------------------------------------------
    elseif strpos( sect, "mfake" ) then
        add_mfake_af( sect )
        misc.release_obj( obj, 'sak.script:check_used_item_release' )
    --------------------------------------------------------------------------------------------------
    elseif sect == "ara_pda" and not act:has_info( "info_way154a" ) then
        add_new_mil_gen_154()
        add_new_gen_mil_191()
    --------------------------------------------------------------------------------------------------
    elseif sect == "ammo_5.45x39_merc" or sect == "ammo_5.56x45_merc" then
        misc.release_obj( obj, 'sak.script:check_used_item_release' )
    --------------------------------------------------------------------------------------------------
    elseif sect == "art_fly" then
        fly_up_flag = true
        misc.release_obj( obj, 'sak.script:check_used_item_release' )
    --------------------------------------------------------------------------------------------------
    elseif sect == "resiept_activ_anom" then info = "info_artmod_activ_anom"
    --------------------------------------------------------------------------------------------------
    elseif sect == "klava_feik" then info = "klava_feik_found"
    --------------------------------------------------------------------------------------------------
    elseif sect == "soldier_letter_bandit" then info = "bandit_pda_trading"
    --------------------------------------------------------------------------------------------------
    elseif sect == "drunk_dolg_letter"  and not test.gg_have_this_bamazhka( sect ) then -- Бром?
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 5 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "sak_document2"      and not test.gg_have_this_bamazhka( sect ) then -- тоннель с электрами
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 2 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "sak_document3"      and not test.gg_have_this_bamazhka( sect ) then -- Радар, Сахар, учёные??
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 5 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "sak_document4"      and not test.gg_have_this_bamazhka( sect ) then -- Танк в РЛ?
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 8 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "aver_bandit_letter" and not test.gg_have_this_bamazhka( sect ) then -- труп в ТЧ
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 3 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "volkodav_pda"       and not test.gg_have_this_bamazhka( sect ) then -- с трупа Волкодава?
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 2 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "gar_bandit_letter"  and not test.gg_have_this_bamazhka( sect ) then -- у Кабана на Свалке
        test.add_bamazhka_to_vars( sect )
        info = test.rnd_rec_art_info( test.tbl_recipt, 1 )
    --------------------------------------------------------------------------------------------------
    elseif sect == "x18_botan_book" and not act:has_info( "info_amk_recipt_simbion" ) then
        info = "info_amk_recipt_simbion"
        info_amk_received()
    --------------------------------------------------------------------------------------------------
    elseif sect == "x8_botan_book" and not act:has_info( "add_new_warlab_info" ) then
        info = "add_new_warlab_info"
    --------------------------------------------------------------------------------------------------
    elseif sect == "x18_door3_code" and not act:has_info( "x18_codelock3_info" ) then
        info = "x18_codelock3_info"
        info_code()
    --------------------------------------------------------------------------------------------------
    elseif sect == "inventory_sakbox_gar_flame" then info = "gar_flame_1have"
    --------------------------------------------------------------------------------------------------
    elseif sect == "yan_pda" then
        info = "yan_find_vasilyev_end"
        vasilev_suit_closed()
        if not act:has_info( "vasiljev_letter_have" ) then
            act:give_info_portion( "vasiljev_letter_have" )
            misc.spawn_to ( "vasiljev_letter", act )
        end
    --------------------------------------------------------------------------------------------------
    elseif sect == "leshyi_letter" then
        misc.release_obj( obj, 'sak.script:check_used_item_release')
        add_kont_leshyi()
    --------------------------------------------------------------------------------------------------
    elseif sect == "zapiska_volk" then
        misc.release_obj( obj, 'sak.script:check_used_item_release')
        add_vil_ranger_treasure()
    --------------------------------------------------------------------------------------------------
    elseif sect == "volk_pda" and not act:has_info( "info_volk_treasure_yes" ) then
        info = "info_volk_treasure_yes"
        info_volk_pda()
    --------------------------------------------------------------------------------------------------
    elseif sect == "svoboda_letter" then info = "mil_freedom_commander_pkm"
    --------------------------------------------------------------------------------------------------
    elseif sect == "vasiljev_letter" and not act:has_info( "vasiljev_letter_have" ) then
        info = "vasiljev_letter_have"
    --------------------------------------------------------------------------------------------------
    elseif sect == "noghost_letter" and not act:has_info( "pseudo_ghost" ) then
        info = "pseudo_ghost"
        yan_ghost_pda()
    --------------------------------------------------------------------------------------------------
    elseif sect == "outfit_bandit_m1" then info = "esc_shustryi_outfit"
    --------------------------------------------------------------------------------------------------
    elseif sect == "sak_book4" and not act:has_info( "doktor_alife" ) then
        info = "doktor_alife"
        info_doktor()
    --------------------------------------------------------------------------------------------------
    elseif sect == "strelok_book1" and not act:has_info( "strelok_book" ) then
        info = "strelok_book"
        mike.info_strelok1()
    --------------------------------------------------------------------------------------------------
    elseif sect == "strelok_book2" and not act:has_info( "last_message" ) then
        info = "last_message"
        mike.info_strelok2()
    --------------------------------------------------------------------------------------------------
    elseif
        lvl == "generators"
        and sect == "item_kamaz_accum"
        and act:has_info( "petrenko_tesla_job_info" )
    then
        info = "petrenko_tesla_job_done"
    --------------------------------------------------------------------------------------------------
    elseif sect == "repair_itemoutfit" or sect == "repair_item_weapon" then repair_box_repair( obj )
    --------------------------------------------------------------------------------------------------
    elseif sect == "closer_box" then repair_box_close( obj )
    --------------------------------------------------------------------------------------------------
    elseif sect == "closer_inv" then sak_box_move.treasurebox_close( obj )
     --------------------------------------------------------------------------------------------------
    elseif sect == "harmonica_b" and not act:has_info( "borov_31_have" ) then
        info = "borov_31_have"
        add_garmonika_letter()
    --------------------------------------------------------------------------------------------------
    elseif sect == "quest_case_02" and not act:has_info( "agroprom_military_case_have" ) then
        info = "agroprom_military_case_have"
        agroprom_tasks.agr_trader_documents()
    --------------------------------------------------------------------------------------------------
    elseif sect == "strelok_pda" then info = "strelok_pda_have"
    --------------------------------------------------------------------------------------------------
    elseif sect == "bar_lucky_pda" then info = "volk_prisoner_start"
    --------------------------------------------------------------------------------------------------
    elseif sect == "redcatcher_albom" then info = "redcatcher_albom_have"
    --------------------------------------------------------------------------------------------------
    elseif sect == "af_dummy_green_medusa" and act:has_info( "strelok_pda2_start" ) then
        info = "strelok_pda2_have"
    --------------------------------------------------------------------------------------------------
    elseif sect == "dar_document4" and not act:has_info( "dar_document5" ) then
        info = "bar_darklab_document_gain"
        act:give_info_portion( "dar_document5" )
        act:give_info_portion( "val_raid_start" )
        x_spawn_actions.x18_dor_open_spawn()
    --------------------------------------------------------------------------------------------------
    elseif sect == "lab_x16_documents" then
        info = "yan_x16_documents_gain"
        act:give_info_portion( "bandit_pda_trading" )
        act:give_info_portion( "yantar_find_ghost_task_end" )
    --------------------------------------------------------------------------------------------------
    elseif sect == "radar_docs" then info = "radar_docs_info"
    --------------------------------------------------------------------------------------------------
    elseif
        sect == "wpn_gauss_auto"
        or sect == "wpn_gauss_auto_model"
        or sect == "wpn_gauss_model"
        or sect == "wpn_gauss"
    then
        local particle = particles_object( "anomaly2\\group_items\\anomaly_greedy_dust" )
        local sound    = sound_object( "anomaly\\greedy_idle_1" )
        particle:play_at_pos( act:position() )
        sound:play_at_pos( act, act:position(), 0 )
        local hit_type = {
            "fire_wound", "wound", "strike", "telepatic", "radiation",
            "chemical_burn", "explosion", "shock"
        }
        for a = 1, lua_random( 4 ) do
            vergas_art.drawing_hits( hit_type[ lua_random( #hit_type ) ] )
            vergas_lib.s_play( "characters_voice\\human_01\\dolg\\fight\\hit\\hit_6", 1 )
        end
        if not act:has_info( "have_tools_out" ) then
            if sect == "wpn_gauss_auto" or sect == "wpn_gauss" then
                misc.release_obj( obj:id(), 'sak.take')
                sim:create( sect .. "_model", act:position(), act:level_vertex_id(), act:game_vertex_id() )
            else
                amk.drop_item( act, obj )
            end
            if act:has_info( "have_tools_in" ) and ( nlc_vars.tools == nil or nlc_vars.tools ~= 1 ) then
                sak.send_tip(
                    "Значит инструмент не работает... \\nИли дело вовсе не в этом? \\nОшиблись наёмники, не для оружия он предназначен. Я теперь знаю для чего...",
                    "Как же так?!", 5, 15, "g_g", "sak", "yellow"
                )
                nlc_vars.tools = 1
            end
        end
        if act:has_info( "have_tools_out" ) then
            if sect == "wpn_gauss_auto_model" or sect == "wpn_gauss_model" then
                misc.release_obj ( obj:id(), 'sak.take' )
                sim:create( "wpn_gauss_auto", act:position(), act:level_vertex_id(), act:game_vertex_id() )
            end
            if nlc_vars.tools_in == nil or nlc_vars.tools_in ~= 1 then
                sak.send_tip(
                    "У меня же нет инструмента... \\nНо почему я могу взять оружие без него?! \\nЗначит, что-то всё-таки не так со мной. И не нужен мне никакой инструмент...",
                    "Как же так?!", 8, 15, "g_g", "sak", "yellow"
                )
                nlc_vars.tools_in = 1
            end
        end
    --------------------------------------------------------------------------------------------------
    elseif sect == "garbage_pda" and not act:has_info( "info_way184a" ) then
        add_new_gar_lv_184()
        add_new_lv_gar_185()
    --------------------------------------------------------------------------------------------------
    elseif
        lvl == "l03u_agr_underground"
        and sect == "gunslinger_flash"
        and not act:has_info( "agr_find_gunslinger_cache_final" )
    then
        info = "agr_find_gunslinger_cache_final"
        agroprom_tasks.ghost_tips()
    --------------------------------------------------------------------------------------------------
    elseif
        ( lvl == "l03_agroprom" or lvl == "l08_yantar" )
        and sect == "decoder2"
        and statys_psy == 1
    then
        statys_psy = 0
        send_tip(
            "Цикл измерения прерван! Повторите измерение!",
            "Статус измерителя", 1, 10, "pribor", "pda_news", "red"
        )
    --------------------------------------------------------------------------------------------------
    elseif lvl == "l07_military" then
        if
            sect == "wpn_rg-6"
            and ( act:has_info( "mil_freedom_rg6_task" ) or act:has_info( "bar_svoboda_rg6_start" ) )
        then
            info = "mil_svoboda_rg6_gain"
        elseif sect == "stukach_book" then
            info = "info_artmod_cristall_buzz"
        elseif sect == "crazy_crystall" then
            info = "mil_max_flash_get"
        elseif sect == "quest_manycase_01_mil_kurjer" then
            info = "mil_kurjer_dead"
        end
    --------------------------------------------------------------------------------------------------
    elseif lvl == "marsh" then
        if sect == "marsh_document" then
            marsh_zapiska()
            misc.release_obj( obj, 'sak.script:check_used_item_release')
        elseif sect == "amk_zapiska_sak" then
            info = "provodnik_senks_have"
        elseif sect == "weapon_box" and not act:has_info( "bar_korovan_info4" ) then
            info_korovan()
            off_spot_korovan_3()
            info = "bar_korovan_info4"
        end
    --------------------------------------------------------------------------------------------------
    elseif lvl == "l03_agroprom" then
        if sect == "letter_for_borov" then
            info = "info_letter_for_borov"
            send_tip(
                "Мой заместитель, Иванцов, что-то пронюхал.", 
                "Письмо Борову", 1, 10, "dolg", "pda_news", "sky_blue"
            )
            misc.release_obj( obj, 'sak.script:check_used_item_release')
        elseif sect == "wpn_vintorez_m1" and not act:has_info( "agr_vintorez_sherstyk_done" ) then
            info = "agr_vintorez_sherstyk_done"
        elseif sect == "amk_zapiska" then
            add_new_escape_100()
            add_new_lost_agr_176()
            misc.release_obj( obj, 'sak.script:check_used_item_release' )
        elseif sect == "rad_document6" then
            info = test.rnd_rec_art_info( test.tbl_recipt, 1 )     -- рандомный рецепт 1 уровня в вагончике у базы вояк
            misc.release_obj( obj, 'sak.script:check_used_item_release' )
        end
    --------------------------------------------------------------------------------------------------
    elseif lvl == "l01_escape" then
        if sect == "rad_document6" then
            info = test.rnd_rec_art_info( test.tbl_recipt, 2 )     -- переход Кордон-Кишка
            misc.release_obj( obj, 'sak.script:check_used_item_release' )
        elseif sect == "dead_novice_letter" then
            info = "esc_tutorial_dead_novice"
            misc.release_obj( obj, 'sak.script:check_used_item_release')
        elseif sect == "arc_art_box_1basic" and not act:has_info( "kvest_art_done" ) then
            info = "kvest_art_have"
        elseif sect == "esc_bandit_letter" and not act:has_info( "info_esc_bandit_letter" ) then
            info = "info_esc_bandit_letter"
        end
        if act:has_info( "mil_find_prizrak_today" ) and esc_mil_food[ obj.m_story_id ] then
            act:disable_info_portion( "mil_find_prizrak_today" )
        end
    --------------------------------------------------------------------------------------------------   
    elseif
            lvl  == "l08u_brainlab"
        and sect == "outfit_stalker_m1"
        and obj:condition() > 0.7
    then
        params.upd_condition( obj:id(), 0.65 )
    --------------------------------------------------------------------------------------------------
    elseif
        lvl == "labx10"
        and sect == "x10_document1"
        and not act:has_info( "labx10_docs1" .. rand .. "_info" )
    then
        info = "labx10_docs1" .. rand .. "_info"
        send_tip( "Приказы, хм... Какие-то коды... Посмотрим.", "Документы", 2, 10, "g_g", "no", "sky_blue" )
    end
    --------------------------------------------------------------------------------------------------
    if act == nil or info == nil or act:has_info( info ) then return end
    if
        strpos( info, "info_artmod_", 1, true )
        or strpos( info, "info_amk_recipt_", 1, true )
    then
        test.sms_recipt_found( info )
    end
    act:give_info_portion( info )
end

sak.check_used_item = check_used_item

function marsh_zapiska()
    local f, c = {}, 0
    for i = 1, 7 do
        f[ i ] = has_alife_info( "marsh_zapiska_" .. i )
        if not f[ i ] then c = c + 1 end
    end
    if c < 1 then return false end
    local r = lua_random( c )
    for i = 1, 7 do
        if not f[ i ] then
            r = r - 1
            if r == 0 then
                send_tip(
                    "Клочки бумаги, исписанные листочки, может, что-то интересное?",
                    "Записки", 2, 10, "g_g", "no", "sky_blue"
                )
                db.actor:give_info_portion( "marsh_zapiska_" .. i )
            end
        end
    end
    mike.add_strelok_spots_info()
end

local point_off_drop = {
    l01_escape = {
        { pos = { -248.7362060546, -24.800107955933, -134.527145385 }, info = { "esc_open_door"          }}
    },
    l04u_labx18 = {
        { pos = { 17.242607116699, -6.6206974983215, -14.7448606491 }, info = { "x18_conrol_room_unlock" }},
        { pos = { 28.111618041992, -10.586278915405, -10.3978986740 }, info = { "dar_door3_free"         }},
        { pos = { 40.722270965576, -6.3106088638306, -17.5506401062 }, info = { "x18_codelock3_unlock"   }},
        { pos = { 23.996559143066, -10.585022926331, -3.35507798194 }, info = { "dar_codelock2_unlock"   }}
    },
    labx10 = {
        { pos = { 54.036945343018, -23.621263504028, 33.93808364868 }, info = { "x18_conrol_room_unlock" }},
        { pos = { 23.637405395508, -8.8965682983398, 6.898777961731 }, info = { "dar_door3_free"         }}
    },
    labx8 = {
        { pos = { -77.00054168701, -13.770574569702, 74.52813720703 }, info = { "lx8_door_unlocked"      }}
    },
    l10u_bunker = {
        { pos = { 7.5520853996277,  -23.69817161561, 4.160028457641 }, info = { "x18_conrol_room_unlock" }},
        { pos = { 5.306640625,      -22.37891960144, 4.590797901153 }, info = { "bun_opendoor0"          }},
        { pos = { -20.064796447754, -9.550071716308, -7.62253093719 }, info = { "x18_conrol_room_unlock" }},
        { pos = { -19.818859100342, -8.990736961364, 7.036190509796 }, info = { "x18_conrol_room_unlock" }},
        { pos = { -21.499710083007, -8.063675880432, -6.91176414489 }, info = { "x18_conrol_room_unlock" }},
        { pos = { 9.23587989807129, -22.22105598449, 15.14147949218 }, info = { "bun_opendoor3"          }},
        { pos = { 6.09000015258789, -8.875,       -22.6900005340576 }, info = { "bun_opendoor1"          }},
        { pos = { 6.3168258666992,  -19.36255455017, 35.18275070190 }, info = { "bun_opendoor5"          }}
    }
}

local point_drop = {
    { x = -240, y = -7,   z = 300  }, --1
    { x = -250, y = -5,   z = 294  }, --2
    { x = 55,   y = 35,   z = 160  }, --3
    { x = 67,   y = 25,   z = 140  }, --4
    { x = 7,    y = -1,   z = 115  }, --5
    { x = 12,   y = 1,    z = 125  }, --6
    { x = 35,   y = 60,   z = 30   }, --7
    { x = 17,   y = 50,   z = 35   }, --8
    { x = 376,  y = -1,   z = 15   }, --9
    { x = 393,  y = 2,    z = 65   }, --10
    { x = -74,  y = -6,   z = -75  }, --11
    { x = -75,  y = -7,   z = -76  }, --12
    -- { x = -11,  y = 15,   z = 192  }, --13  -- Агро Клык 1
    -- { x = -14,  y = 20,   z = 196  }, --14  -- Агро Клык 1
    -- { x = -138, y = 10,   z = 44   }, --15  -- Агро Клык 2
    -- { x = -142, y = 15,   z = 49   }, --16  -- Агро Клык 2
    -- { x = -2,   y = -5,   z = -72  }, --17  -- Агро Клык 3
    -- { x = 2,    y = 5,    z = -77  }, --18  -- Агро Клык 3
    { x = -9,   y = 14,   z = 190  }, --13  -- Агро Клык 1
    { x = -16,  y = 21,   z = 198  }, --14  -- Агро Клык 1
    { x = -136, y =  9,   z = 42   }, --15  -- Агро Клык 2
    { x = -144, y = 16,   z = 51   }, --16  -- Агро Клык 2
    { x = -4,   y = -6,   z = -70  }, --17  -- Агро Клык 3
    { x = 4,    y = 6,    z = -79  }, --18  -- Агро Клык 3    
    { x = 92,   y = 0,    z = -67  }, --19
    { x = 93,   y = 5,    z = -69  }, --20
    { x = -10,  y = 3,    z = 12   }, --21
    { x = -8,   y = 5,    z = 8    }, --22
    { x = -252, y = -25,  z = -157 }, --23
    { x = -160, y = -15,  z = -116 }, --24
    { x = 227,  y = -8,   z = 62   }, --25
    { x = 231,  y = 0,    z = 65   }, --26
    { x = -188, y = 0,    z = -400 }, --27
    { x = -194, y = 50,   z = -405 }, --28
    { x = 530,  y = -45,  z = -143 }, --29
    { x = 534,  y = -50,  z = -147 }, --30
    -- { x = -96,  y = -12,  z = -224 }, --31  -- Янтарь 1
    -- { x = -102, y = -11,  z = -230 }, --32  -- Янтарь 1
    -- { x = 182,  y = -7,   z = -94  }, --33  -- Янтарь 2
    -- { x = 188,  y = -8,   z = -100 }, --34  -- Янтарь 2
    -- { x = 141,  y = -1,   z = 52   }, --35  -- Янтарь 3
    -- { x = 147,  y = -2,   z = 57   }, --36  -- Янтарь 3
    { x = -94,  y = -12,  z = -222 }, --31  -- Янтарь 1
    { x = -104, y = -11,  z = -232 }, --32  -- Янтарь 1
    { x = 180,  y = -7,   z = -92  }, --33  -- Янтарь 2
    { x = 190,  y = -8,   z = -102 }, --34  -- Янтарь 2
    { x = 139,  y = -1,   z = 50   }, --35  -- Янтарь 3
    { x = 149,  y = -2,   z = 59   }, --36  -- Янтарь 3
    { x = -96,  y = -12,  z = -224 }, --37
    { x = -102, y = -11,  z = -230 }, --38
    { x = 182,  y = -7,   z = -94  }, --39
    { x = 188,  y = -8,   z = -100 }, --40
    { x = 141,  y = -1,   z = 52   }, --41
    { x = 147,  y = -2,   z = 57   }, --42
    { x = 414,  y = -1.0, z = -360 }, --43
    { x = 418,  y = -3.0, z = -364 }, --44
    { x = 30.0, y = -1.0, z = -40  }, --45
    { x = 40.0, y = 3.0,  z = -50  }, --46
    { x = 215,  y = -12,  z = -99  }, --47
    { x = 223,  y = -7,   z = -106 }, --48
    { x = 349,  y = -7,   z = -19  }, --49
    { x = 352,  y = -4,   z = -23  }, --50
    { x = -352, y = -27,  z = 159  }, --51
    { x = 332,  y = -22,  z = 179  }, --52
    { x = 20,   y = 1,    z = 365  }, --53
    { x = 40,   y = 3,    z = 345  } --54
}

function check_droped_items( obj_id )
    local lvl     = level.name()
    local obj     = client_obj( obj_id )
    local actr    = db.actor
    local act_pos = actr:position()
    if obj == nil or obj:parent() ~= nil then return end
    for i = 1, #point_off_drop[ lvl ] do
        local info  = point_off_drop[ lvl ][ i ].info[ 1 ]
        local point = v3f(
            point_off_drop[ lvl ][ i ].pos[ 1 ],
            point_off_drop[ lvl ][ i ].pos[ 2 ],
            point_off_drop[ lvl ][ i ].pos[ 3 ]
        )
        if not actr:has_info( info ) and act_pos:distance_to( point ) < 2 then
            return misc.release_obj( obj, 'val_dinamit_podval' )
        end
    end
end

function check_droped_item( obj )
    sak_inventory.inventory_control()
    local info    = nil
    local window  = 0
    local lvl     = level.name()
    local actr    = db.actor
    local act_pos = actr:position()
    if
        point_off_drop[ lvl ]
        and ( not bind_stalker.self_weapon_hide )
        and get_clsid( obj ) <= CLID_WPN_WALTHER
        and get_clsid( obj ) >= CLID_WPN_AK74
    then
        schedule.add( "check_drop", "sak.check_droped_items("..obj:id()..")", 250 )
    end
    local self = level.main_input_receiver()
    if self then
        --------------------------------------------------------------------------------------------------
        if lvl == "l03_agroprom" and obj:section() == "decoder2" then
            if     amk.check_npc_in_box( actr, point_drop[ 13 ], point_drop[ 14 ] ) ~= false then
                klyk_med_psy1( obj:id() )
                window = 1
            elseif amk.check_npc_in_box( actr, point_drop[ 15 ], point_drop[ 16 ] ) ~= false then
                klyk_med_psy2( obj:id() )
                window = 1
            elseif amk.check_npc_in_box( actr, point_drop[ 17 ], point_drop[ 18 ] ) ~= false then
                klyk_med_psy3( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif lvl == "l08_yantar" and obj:section() == "decoder2" then
            if     amk.check_npc_in_box( actr, point_drop[ 31 ], point_drop[ 32 ] ) ~= false then 
                yan_izm_psy1( obj:id() )
                window = 1
            elseif amk.check_npc_in_box( actr, point_drop[ 33 ], point_drop[ 34 ] ) ~= false then
                yan_izm_psy2( obj:id() )
                window = 1
            elseif amk.check_npc_in_box( actr, point_drop[ 35 ], point_drop[ 36 ] ) ~= false then
                yan_izm_psy3( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif lvl == "red_forest" and obj:section() == "marsh_pribor" then
            if amk.check_npc_in_box( actr, point_drop[ 47 ], point_drop[ 48 ] ) ~= false then
                mike.marsh_pribor_on( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif lvl == "red_forest" and strpos( obj:section(), "af_compass", 1, true ) then
            if
                amk.check_npc_in_box( actr, point_drop[ 47 ], point_drop[ 48 ] ) ~= false
                and has_alife_info( "doktor_artteleport_info" )
            then
                mike.compass( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif lvl == "aver" and obj:section() == "marsh_pribor" then
            if
                amk.check_npc_in_box( actr, point_drop[ 49 ], point_drop[ 50 ] ) ~= false
                and not has_alife_info( "marsh_pribor_aver_done" )
            then
                mike.marsh_pribor_aver_on( obj:id())
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif
            lvl == "aver"
            and ( strpos( obj:section(), "af_unknown_", 1, true )
            or strpos( obj:section(), "af_dummy_buliz", 1, true ) )
        then
            if
                amk.check_npc_in_box( actr, point_drop[ 49 ], point_drop[ 50 ] ) ~= false
                and has_alife_info( "mdata_yes_resept_info" )
                and not has_alife_info( "mayatnik_aver_ready_info" )
            then
                mike.mayatnik_aver_will_be( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif lvl == "aver" and obj:section() == "item_kamaz_accum" then
            if
                amk.check_npc_in_box( actr, point_drop[ 51 ], point_drop[ 52 ] ) ~= false
                and not has_alife_info( "akk_aver_done" )
            then
                mike.akk_aver_on( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif
            lvl == "l11_pripyat"
            and ( strpos( obj:section(), "af_unknown_", 1, true )
            or strpos( obj:section(), "af_dummy_buliz", 1, true ) )
        then
            if
                amk.check_npc_in_box( actr, point_drop[ 53 ], point_drop[ 54 ] ) ~= false
                and has_alife_info( "mdata_yes_resept_info" )
                and not has_alife_info( "mayatnik_prip_ready_info" )
            then
                mike.mayatnik_prip_will_be( obj:id() )
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif
            lvl == "red_forest"
            and obj:section() == "scanner_anomaly"
            and amk.check_npc_in_box( actr, point_drop[ 25 ], point_drop[ 26 ] ) ~= false
        then
            out_point_1_scaner()
            info = "serafim_scaner_1_done"
            schedule.add( "check_drop", "misc.release_obj("..obj:id()..")", 50 )
            window = 1
        --------------------------------------------------------------------------------------------------
        elseif
            lvl == "generators"
            and obj:section() == "scanner_anomaly"
            and amk.check_npc_in_box( actr, point_drop[ 27 ], point_drop[ 28 ] ) ~= false
        then
            out_point_2_scaner()
            info = "serafim_scaner_2_done"
            schedule.add( "check_drop", "misc.release_obj("..obj:id()..")", 50 )
            window = 1
        --------------------------------------------------------------------------------------------------
        elseif
            lvl == "l10_radar"
            and obj:section() == "scanner_anomaly"
            and amk.check_npc_in_box( actr, point_drop[ 29 ], point_drop[ 30 ]) ~= false
        then
            out_point_3_scaner()
            info = "serafim_scaner_3_done"
            schedule.add( "check_drop", "misc.release_obj("..obj:id()..")", 50 )
            timers.start_timer( "serafim_out", 1, 1, 0, "sak.serafim_out_end()" )
            window = 1
        --------------------------------------------------------------------------------------------------
        elseif
            lvl == "l04_darkvalley"
            and actr:has_info( "val_dolg_commander_dinamit_info" )
            and obj:section() == "dynamite"
            and amk.check_npc_in_box( actr, point_drop[ 45 ], point_drop[ 46 ] ) ~= false
        then
            local objx = g_sim:story_object( story_ids.val_stena_podval ) -- story_object( 440 )
            local objt = g_sim:story_object( story_ids.val_dinamit_podval ) -- story_object( 441 )
            if objx and not objt then
                schedule.add( "check_drop", "misc.release_obj("..obj:id()..")", 50 )
                misc.spawn_by_name( "val_dinamit_podval" )
                info   = "val_dinamit_podval_ok"
                window = 1
            end
        --------------------------------------------------------------------------------------------------
        elseif black_tip.check_dropped( obj ) then
            window = 0
        end
        if window == 1 then
            local self = level.main_input_receiver()
            if self then schedule.add( "close_window", "sak.close_window()", 100 ) end
            window = 0
        end
    end
    if actr == nil or info == nil or actr:has_info( info ) then return end
    actr:give_info_portion( info )
end

function add_skaner_1_saharoff() add_skaner_saharoff( 1 ) end
function add_skaner_2_saharoff() add_skaner_saharoff( 2 ) end
function add_skaner_3_saharoff() add_skaner_saharoff( 3 ) end

function add_skaner_saharoff( tip )
    local tip_scan = {
        "[logic]\nactive = ph_button@stop\n[ph_button@start]\ntooltip = \nanim = skaner_n1\non_timer = 10000|ph_button@work %=sak.info_pribor() +yan_scientist_teleport_01_done%\n[ph_button@work]\nanim = skaner_n1_rotate\ntooltip = off_pribor\non_press = ph_button@close %-yan_scientist_teleport_01_done%\n[ph_button@close]\nanim = skaner_n1_close\ntooltip = \non_timer = 10000| ph_button@stop\n[ph_button@stop]\nanim = skaner_n1_stop\ntooltip = on_pribor\non_press = ph_button@start",
        "[logic]\nactive = ph_button@stop\n[ph_button@start]\ntooltip = \nanim = skaner_n2_open\non_timer = 9000| ph_button@work %=sak.info_pribor() +yan_scientist_teleport_02_done%\n[ph_button@work]\nanim = skaner_n2_work\ntooltip = off_pribor\non_press = ph_button@close %-yan_scientist_teleport_02_done%\n[ph_button@close]\nanim = skaner_n2_close\ntooltip = \non_timer = 9000| ph_button@stop\n[ph_button@stop]\nanim = skaner_n2_stop\ntooltip = on_pribor\non_press = ph_button@start",
        "[logic]\nactive = ph_button@stop\n[ph_button@start]\ntooltip = \nanim = skaner_n1\non_timer = 10000|ph_button@work %=sak.info_pribor() +yan_scientist_teleport_03_done%\n[ph_button@work]\nanim = skaner_n1_rotate\ntooltip = off_pribor\non_press = ph_button@close %-yan_scientist_teleport_03_done%\n[ph_button@close]\nanim = skaner_n1_close\ntooltip = \non_timer = 1000| ph_button@stop\n[ph_button@stop]\nanim = skaner_n1_stop\ntooltip = on_pribor\non_press = ph_button@start"
    }
    local actr   = db.actor
    local dir    = device().cam_dir
    local a      = math.atan2( dir.x, dir.z )
    local xdelta = math.sin( a )
    local zdelta = math.cos( a )
    local pos    = actr:position()
    local lvid   = actr:level_vertex_id()
    local gvid   = actr:game_vertex_id()
    local obj    = amk.spawn_item( "physic_object",
                    v3f( ( pos.x + xdelta ), pos.y, ( pos.z + zdelta ) ), gvid, lvid )
    if obj then
        local pk           = get_netpk( obj, 1 )
        local data         = pk:get()
        data.visual_name   = "new_item\\skaner_n" .. tip
        data.custom_data   = tip_scan[ tip ]
        data.skeleton_name = "skaner_n" .. tip .. "_stop"
        data.mass          = 20
        data.fixed_bones   = "link"
        pk:set( data )
        obj.set_direction   = v3f( 0, math.atan2( -dir.x, dir.z ), 0 )
        nlc_vars.telepribor = obj.id
    end
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
end

function add_scanner_artefact()
    local actr   = db.actor
    local dir    = device().cam_dir
    local a      = vector()
    a.y          = math.atan2( dir.x, dir.z )
    local xdelta = math.sin( a.y )
    local zdelta = math.cos( a.y )
    local pos    = actr:position()
    local lvid   = actr:level_vertex_id()
    local gvid   = actr:game_vertex_id()
    if has_alife_info( "mar_military_post_ecolog_have" ) then
        if gvid == 3003 then
            sak.send_tip(
                "Начато сканирование по программе.",
                "Прибор установлен правильно", 3, 20, "ecolog", "sak", "green"
            )
            mike.timer_lim_scaner()
        end
    end
    local obj = amk.spawn_item(
        "physic_object", v3f( ( pos.x+xdelta ), pos.y, ( pos.z+zdelta ) ), gvid, lvid
    )
    if obj then
        local pk           = get_netpk( obj, 1 )
        local data         = pk:get()
        data.visual_name   = "new_item\\scanner_artefact"
        data.skeleton_name = "idle"
        data.mass          = 20
        data.fixed_bones   = "link"
        pk:set( data )
        obj.set_direction   = v3f( 0, math.atan2( -dir.x, dir.z ), 0 )
        nlc_vars.telepribor = obj.id
    end
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
end

function info_pribor()
    send_tip(
        "Блок мониторинга установлен и функционирует.",
        "Прибор", 2, 10, "g_g", "no", "sky_blue"
    )
end

function val_stena_podval_explode()
    local actr    = db.actor
    local act_pos = actr:position()
    local stena   = level_object_by_sid( 440 )
    local st_pos  = stena:position()
    local dist    = st_pos:distance_to( act_pos )
    local h       = hit()
    if dist < 25 then
        h.draftsman = actr
        h:bone( "bip01_spine" )
        h.type      = hit.explosion
        h.power     = 50 / dist
        h.impulse   = 1.0
        actr:hit( h )
    end
    local ids, cnt = registry.clsid_objects( CLID_STALKER, CLID_STALKER, true, nil, 7 )
    for n = 1, cnt do
        local id  = ids[ n ]
        local obj = client_obj( id )
        if obj:alive() then
            local pos = obj:position()
            if
                pos.y < 0
                and pos.x < 48 and pos.x > 32
                and pos.z < -24 and pos.z > -60
            then
                misc.release_obj ( obj, 'sak.script:3675' )
            end
        end
    end
    misc.release_obj( stena, 'val_stena_podval' )
    local se_obj = g_sim:story_object( story_ids.val_dinamit_podval )   -- story_object( 441 )
    if se_obj then source = client_obj( se_obj.id ) end
    if source == nil then return end
    h.power     = 1000000
    h.direction = vector():set( 1, 0, 0 )
    h.impulse   = 1
    h.draftsman = source
    h.type      = hit.chemical_burn
    source:hit( h )
    source:explode( 0 )
    for a = 0, 9 do
        local rand = lua_random( 1, 7 )
        local obj  = misc.spawn_obj( "physic_object", st_pos )
        if obj then
            local pk         = get_netpk( obj, 1 )
            local data       = pk:get()
            data.visual_name = "new_item\\oblomok_betona_"  ..  rand
            data.physic_type = 3
            data.mass        = 25
            pk:set( data )
        end
    end
end

function x12_beton_add()
    if has_alife_info( "x12_beton_add_info" ) then return end
    db.actor:give_info_portion( "x12_beton_add_info" )
    for n = 1, 4 do misc.spawn_by_name( "bun_beton_block_" .. n ) end
    local war_docs = {
        { -19.90, -7.4, -44.65, 3538, 2664 },
        { -20.05, -7.4, -49.85, 3380, 2664 }
    }
    for a = 0, 15 do
        local rand = lua_random( 5, 7 )
        for n = 1, 2 do
            local obj = amk.spawn_item( "physic_object",
                v3f( war_docs[ n ][ 1 ], war_docs[ n ][ 2 ] + a * 0.06, war_docs[ n ][ 3 ]),
                war_docs[ n ][ 5 ], war_docs[ n ][ 4 ]
            )
            if obj then
                local pk         = get_netpk( obj, 1 )
                local data       = pk:get()
                data.visual_name = "new_item\\oblomok_betona_" .. rand
                data.physic_type = 3
                data.mass        = 25
                pk:set( data )
                schedule.add( "hit_bet" .. a .. n, "sak.hit_bet("..obj.id..")", 500 )
            end
        end
    end
end

function hit_bet( id )
    local obj   = client_obj( id )
    local h     = hit()
    h.power     = 0.5
    h.direction = db.actor:direction()
    h.draftsman = db.actor
    h.impulse   = 10
    h.type      = hit.wound
    obj:hit( h )
end

function timer_upgrade_start()
    timers.start_timer( "t_upgrade_start", 0, 2, 13, "sak.upgrade_start_end()" )
end

function upgrade_start_end()
    send_tip(
        "Меченный, подходи, вроде получилось.",
        "Сообщение от Демьяна", 11, 20, "ecolog", "sak", "green"
    )
    db.actor:give_info_portion( "upgrade_start_done" )
end

function serafim_out_end()
    db.actor:give_info_portion( "serafim_red_out" )
end

function yan_izm_psy1( obj_id )
    schedule.add( "check_drop", "sak.yan_izm_psy1_start("..obj_id..")", 200 )
end

function yan_izm_psy1_start( obj_id )
    local obj = client_obj( obj_id )
    if obj == nil or obj:parent() ~= nil then return end
    timers.start_timer( "yan_izm_psy1", lua_random( 60, 120 ), "sak.yan_izm_psy1_end()" )
    send_tip(
        "Начато измерение напряженности пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    sak_spawn.add_yan_izm1_monsters()
end

function yan_izm_psy1_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "yan_izm_1faze" )
        db.actor:give_info_portion( "remove_yan_izm_spot1" )
        statys_psy = 0
    end
end

function yan_izm_psy2( obj_id )
    schedule.add( "check_drop", "sak.yan_izm_psy2_start("..obj_id..")", 250 )
end

function yan_izm_psy2_start( obj_id )
    local obj = client_obj( obj_id )
    if obj == nil or obj:parent() ~= nil then return end
    timers.start_timer( "yan_izm_psy2", lua_random( 60, 120 ), "sak.yan_izm_psy2_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    sak_spawn.add_yan_izm2_monsters()
end

function yan_izm_psy2_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "yan_izm_2faze" )
        db.actor:give_info_portion( "remove_yan_izm_spot2" )
        statys_psy = 0
    end
end

function yan_izm_psy3( obj_id )
    schedule.add( "check_drop", "sak.yan_izm_psy3_start("..obj_id..")", 250 )
end

function yan_izm_psy3_start( obj_id )
    local obj = client_obj( obj_id )
    if obj == nil or obj:parent() ~= nil then return end
    timers.start_timer( "yan_izm_psy3", lua_random( 60, 120 ), "sak.yan_izm_psy3_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    --add_yan_izm3_monsters()
end

function yan_izm_psy3_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "yan_izm_3faze" )
        db.actor:give_info_portion( "remove_yan_izm_spot3" )
        statys_psy = 0
    end
end

function rad_izm_psy1()
    timers.start_timer( "rad_izm_psy1", lua_random( 60, 120 ), "sak.rad_izm_psy1_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    --add_rad_izm1_monsters()
end

function rad_izm_psy1_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "rad_izm_1faze" )
        db.actor:give_info_portion( "remove_rad_izm_spot1" )
        statys_psy = 0
    end
end

function rad_izm_psy2()
    timers.start_timer( "rad_izm_psy2", lua_random( 60, 120 ), "sak.rad_izm_psy2_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    --add_rad_izm2_monsters()
end

function rad_izm_psy2_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "rad_izm_2faze" )
        db.actor:give_info_portion( "remove_rad_izm_spot2" )
        statys_psy = 0
    end
end

function rad_izm_psy3()
    timers.start_timer( "rad_izm_psy3", lua_random( 60, 120 ), "sak.rad_izm_psy3_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    --add_rad_izm3_monsters()
end

function rad_izm_psy3_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "rad_izm_3faze" )
        db.actor:give_info_portion( "remove_rad_izm_spot3" )
        statys_psy = 0
    end
end

function out_point_1_scaner()
    local obj = g_sim:story_object( story_ids.scaner_1_space_restrictor )
    if obj then
        amk.remove_spot_from_map( obj.id, "crlc_small" )
        misc.release_obj( obj, "sak.script:1198" )
        sak_spawn.red_near_tank_monsters()
    end
    local objt = g_sim:story_object( story_ids.scaner_03 ) -- story_object( 9147 )
    if not objt then misc.spawn_by_name( "scaner_03" ) end
end

function out_point_2_scaner()
  local obj = g_sim:story_object( story_ids.scaner_2_space_restrictor )
  if obj then
      amk.remove_spot_from_map( obj.id, "crlc_small" )
      misc.release_obj( obj, 'sak.script:1209' )
      sak_spawn.gen_near_marsh_monsters()
  end
  local objt = g_sim:story_object( story_ids.scaner_04 ) -- story_object( 9148 )
  if not objt then misc.spawn_by_name( "scaner_04" ) end
end

function out_point_3_scaner()
    local obj = g_sim:story_object( story_ids.scaner_3_space_restrictor )
    if obj then
        amk.remove_spot_from_map( obj.id, "crlc_small" )
        misc.release_obj( obj, 'sak.script:1220' )
        sak_spawn.rad_near_scaner_monsters()
    end
    local objt = g_sim:story_object( story_ids.scaner_05 ) -- story_object( 9149 )
    if not objt then misc.spawn_by_name( "scaner_05" ) end
end

local many_for_rep = true

function consum_artefact( hour )
    local borov = g_sim:story_object( story_ids.val_lager_borov )
    local npc   = db.actor
    if
        borov and IsStalker( borov )
        and borov:alive()
        and npc:has_info( "borov_info_rep_up_ok" )
    then
        out_many_for_rep_up()
        if many_for_rep == true then
            if npc:character_reputation() < 0 then
                sak_dialog.up_repa( 100 )
            end
        end
    end
    local hangr = -0.065
    if
        arts_operate ~= false
        and (
            sak_inventory.belt_items[ "af_flower_new" ]
            or sak_inventory.belt_items[ "af_armor_4" ]
            or sak_inventory.belt_items[ "af_kol_4" ]
            )
    then
        hangr = hangr + 0.033
    end
    params.satiety_add( hangr )
end

local nv_on, loka_on    = 0, 1
local tmr_discharge_akb = misc.game_timer()

function get_accum() return db.actor:item_in_slot( 11 ) end

function sak.discharge_accum( flag, quiet )
    local obj = get_accum()
    if obj == nil then
        tmr_discharge_akb:elapsed( true ) -- чтобы время разряда не копилось
        nvd_params.disable_NVD()
        arts_operate = false
        return
    end
    local accum_id = obj:id()
    local accum    = g_sim:object( accum_id )
    local ctime    = game.get_game_time()
    if accum then
        local diff_t = tmr_discharge_akb:elapsed( true )
        local coef   = loka_on * balance.devices.accum_discharge / 100.0 or 0.001
        diff_t       = math.abs ( diff_t ) / 60.0  -- сколько прошло времени в игровых минутах
        nv_on        = 0                           -- потребление ПНВ
        if nvd_params.get_NVD_powered () then nv_on = 1 end
        -- если одна минута прошла ( diff_t = 1.0 ), потребление составит coef * число потребителей
        -- ПНВ эквивалентен одному артефакту по потреблению
        local consumption = ( af_count + nv_on ) * coef
        consumption       = consumption * diff_t   -- с учетом текущей скорости времени
        -- CHEAT: наэлектризованная локация, там разряд меньше       -- 18.11.2018
        if level.name() == "generators" then    -- UPD: никто за 4 года про это не узнал, и как-то особо погоды оно
            consumption = consumption * 2       -- не делает, потому сделаем лучше наоборот, в 2 раза больше разряд
        end
        consumption = consumption + coef * diff_t * 0.01   -- плюс разряд светодиодами пояса
        local cond  = params.get_condition( accum_id, 0.9999 ) + ( 0.5 - lua_random() ) * coef * diff_t -- погрешность
        -- wprintf( "[~T].C0F #DBG: accum power =~C0D %.5f~C07, consumption =~C0D %.5f~C0F, diff_t =~C0D %.3f~C0F, nvd power =~C0F %d~C07~C07", cond, consumption, diff_t, nv_on )
        -- wprintf( "~C0A %s~C07", lua_traceback('    '));
        if cond <= 0.13 and diff_t >= 1.0 then
            local act   = db.actor
            local sound = sound_object( "ambient\\special\\marsh_beep_1" )
            sound:play_at_pos( act, act:position(), 0 )
        end
        if cond >= 0.07 then
            arts_operate   = true
            local new_cond = cond - consumption                       -- разряд батареи текущим током
            params.upd_condition( accum_id, new_cond )
            arts_operate   = true
            nvd_params.enable_NVD() -- есть заряд, можно включать
        else
            if arts_operate == true then
                send_tip(
                    "Аккумуляторная батарея разряжена",
                    "Аккумулятор", 2, 10, "pribor", "pda_news", "red"
                )
                nvd_params.disable_NVD()
                arts_operate               = false
                razgruzka.open_inv_raz_pod = false
            end
        end 
        sak_inventory.update_accum_leds()
    else
        wprintf( "[~T].~C0C #FATAL:~C07 bad object in slot 11 = %d ", accum_id )
        nvd_params.disable_NVD()
    end
end

sak.empted_akkum = sak.discharge_accum -- alias
sak.empted_accum = sak.discharge_accum -- alias

local tmr_art_discharge = misc.game_timer()

function discharge_tasks()
    if db.init_stage < 500 then return end
    discharge_accum()
    local coef = balance.artefacts.time_damage_coef * tmr_art_discharge:elapsed( true ) / 60.0 -- коэффициент зависимости от времени
    if coef < 0.00001 then return end -- не зачем и ЦП мучать
    if get_accum() then
        arc_arts.discharge_artefacts( coef )
    else
        arts_operate = false
    end
    if sleep_manager.sleeping then return end
    black_tip.discharge( coef )
end

function new_art_cond( obj_id, cnd, sect )
    local objg = client_obj( obj_id )
    local cond = cnd or 0.25
    if objg then objg:set_condition( cond ) end
    arc_arts.check_artefact()
end

function sleep_discharge_accum( hour ) sleep_discharge_torch( hour ) end

function info_days( hour )
    local info = ""
    if     hour >= 21  or hour < 6  then info = "time_night"
    elseif hour >= 6  and hour < 11 then info = "time_morning"
    elseif hour >= 11 and hour < 17 then info = "time_day"
    elseif hour >= 17 and hour < 21 then info = "time_evening"
    end
    if not has_alife_info( info ) then
        db.actor:give_info_portion( info )
        vodka_stas_new( info )
        lysyi_art_new( info )
        hellcar_attack( info )
        sleep_manager.clear_need_sleep_nrg( info )
    end
    local lname = level.name()
    params.hit_probability_add( level_difficulty[ lname ] * time_difficulty[ hour ] )
    db.actor:disable_info_portion( "botans_dialog_done" )
end

function hellcar_attack( info )
    local act = db.actor
    if
        info == "time_evening"
        and has_alife_info( "gar_start_quest" )
        and has_alife_info( "hellcar_today" )
        and not has_alife_info( "hellcar_raid_start" )
    then
        act:give_info_portion( "hellcar_raid_start_soon" )
        timers.start_timer( "hellcar_raid", 0, 0, 37, "sak.add_hellcar_raid()" )
    elseif
        info == "time_morning"
        and has_alife_info( "gar_start_quest" )
        and not has_alife_info( "hellcar_raid_start" )
    then
        act:give_info_portion( "hellcar_today" )
    end
    if info == "time_morning" then
        if
            has_alife_info( "mil_find_prizrak_start" )
            and not has_alife_info( "gen_mil_group_info" )
        then
            if
                not has_alife_info( "mil_find_prizrak_today" )
                and not has_alife_info( "esc_blockpost_commander_gg_know" )
            then
                act:give_info_portion( "mil_find_prizrak_today" )
            elseif
                not has_alife_info( "esc_blockpost_commander_gg_know" )
            then
                act:disable_info_portion( "mil_find_prizrak_today" )
                act:give_info_portion( "esc_blockpost_commander_gg_know" )
            elseif
                has_alife_info( "mil_find_prizrak_today" )
                and has_alife_info( "esc_blockpost_commander_gg_know" )
            then
                act:disable_info_portion( "mil_find_prizrak_today" )
            end
        elseif
            has_alife_info( "gen_mil_group_info" )
            and has_alife_info( "gen_mil_group_have_info" )
        then
            if not has_alife_info( "mil_find_prizrak_today" ) then
                act:give_info_portion( "mil_find_prizrak_today" )
            elseif has_alife_info( "mil_find_prizrak_today" ) then
                act:disable_info_portion( "mil_find_prizrak_today" )
                act:disable_info_portion( "gen_mil_group_have_info" )
            end
        end
        act:disable_info_portion( "esc_mil_nagrad_info" )
    end
end

function add_hellcar_raid()
    db.actor:give_info_portion( "hellcar_raid_start" )
    db.actor:give_info_portion( "gar_bandits_raid" )
    db.actor:give_info_portion( "gar_counter_fire" )
    db.actor:give_info_portion( "gar_open_fire" )
    if level.name() ~= "l02_garbage" then
        local obj = g_sim:story_object( story_ids.gar_hellcar )
        if obj then
            local pk        = get_netpk( obj )
            local data      = pk:get()
            data.health     = 0
            data.upd.health = 0
            pk:set( data )
        end
        db.actor:give_info_portion( "gar_hellcar_death" )
    else
        local gulag = xr_gulag.get_gulag_by_name( "gar_bandit_agr" )
        if gulag then gulag.smrttrn:update() end
    end
end

function mil_abuse() params.hit_probability_add( 10 ) end

function vodka_stas_new( info )
    if info == "time_day" then
        nlc_vars.vodka_win = 0
        db.actor:disable_info_portion( "gen_hermit_change_done" )
        local name, delay = timers.check_timer( "kolb" )
        if not name then
            timers.start_timer( "kolb", 0, 1, lua_random( 15, 45 ), "sak.kolb_baded()" )
            kolb = false
        end
    elseif info == "time_night" then
        local name, delay = timers.check_timer( "kolb" )
        if not name then
            timers.start_timer( "kolb", 0, 1, lua_random( 15, 45 ), "sak.kolb_baded()" )
            kolb = false
        end
    end
end

function lysyi_art_new( info )
    if info == "time_morning" then
        nlc_vars.art_win        = 0
        nlc_vars.vergas_rem     = 0
        nlc_vars.mongol_wins    = 0
        nlc_vars.greens_kolbasa = 0
        sak_minigame.gg_wined()
    end
end

function mayatnik()
    local mayat_rand = lua_random( -1, 1 )
    amk_vars.mayat_koeff = mayat_rand
end

local need_update = 0
local heart       = nil
local id

function corp_to_life( item )
    heart       = item
    need_update = 1
end

function corp_to_life_update()
    if need_update == 0 then return end
    if need_update == 1 then
        local obj = heart:parent()
        if obj == nil or obj:id() == db.actor:id() or not IsStalker( obj ) or obj:alive() then
            return
        end
        id        = obj:id()
        local inv = level.main_input_receiver()
        if inv ~= nil then level.start_stop_menu( inv, false ) end
        af_flash( heart )
        amk.convert_npc[ id ] = true
        local sim = alife()
        sim:set_switch_online ( id, false )
        sim:set_switch_offline( id, true  )
        need_update = 2
    elseif need_update == 2 then
        local obj = client_obj( id )
        if obj == nil then
        else return end
        local sobj     = g_sim:object( id )
        local pk       = get_netpk( sobj )
        local data     = pk:get()
        data.health    = 0.1
        data.killer_id = BAD_OBJ_ID
        for i = 1, 8 do data.game_death_time[ i ] = 0 end
        data.upd.health     = 0.1
        data.skeleton_flags = 0
        pk:set( data )
        need_update         = 0
    end
end

function af_flash( af )
    level.add_pp_effector( "red_teleport.ppe", 1525, false )
    amk.remove_item( af )
end

function actor_pickup( id, on_fail )
    local obj = client_obj( tonumber( id ) )
    if obj and not arc_arts.is_actor_item( id ) then
        local parent = obj:parent()
        if parent then
            parent:transfer_item( obj, db.actor )
        else
            obj:transfer_item( db.actor )
        end
        sak_inventory.need_update_inventory()
    elseif obj == nil then
        wprintf( "[~T].~C0C #WARN:~C07 actor cannot pickup non existent~C0D %d~C07", DumpVar( id ))
        if on_fail then on_fail() end
    end
end

function anim_actor()
    level.add_cam_effector( "camera_effects\\scenario_cam\\jupiter\\jup_b15_wake_up.anm", 2000, true, "" )
end

function add_cat_eyes()
    level.add_pp_effector( "sak.ppe", 2200, true )
    vergas_medical_elastic.snd_eat_med( 3 )
    timers.start_timer( "cat_eyes_time", lua_random( 600, 700 ), "sak.end_cat_eyes()" )
end

function end_cat_eyes() level.add_pp_effector( "sak.ppe", 2200, false ) end

function klyk_med_psy1( obj_id )
    schedule.add( "check_drop", "sak.klyk_med_psy1_start("..obj_id..")", 200 )
end

function klyk_med_psy1_start( obj_id )
    local obj = client_obj( obj_id )
    if obj == nil or obj:parent() ~= nil then return end
    timers.start_timer( "klyk_med_psy1", lua_random( 60, 120 ), "sak.klyk_med_psy1_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    sak_spawn.add_klyk_med1_monsters()
end

function klyk_med_psy1_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "agr_klyk_1faze" )
        db.actor:give_info_portion( "agr_remove_klyk_med_spot1" )
        statys_psy = 0
    end
end

function klyk_med_psy2( obj_id )
    schedule.add( "check_drop", "sak.klyk_med_psy2_start("..obj_id..")", 200 )
end

function klyk_med_psy2_start( obj_id )
    local obj = client_obj( obj_id )
    if obj == nil or obj:parent() ~= nil then return end
    timers.start_timer( "klyk_med_psy2", lua_random( 60, 120 ), "sak.klyk_med_psy2_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    sak_spawn.add_klyk_med2_monsters()
end

function klyk_med_psy2_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "agr_klyk_2faze" )
        db.actor:give_info_portion( "agr_remove_klyk_med_spot2" )
        statys_psy = 0
    end
end

function klyk_med_psy3( obj_id )
    schedule.add( "check_drop", "sak.klyk_med_psy3_start("..obj_id..")", 200 )
end

function klyk_med_psy3_start( obj_id )
    local obj = client_obj( obj_id )
    if obj == nil or obj:parent() ~= nil then return end
    timers.start_timer( "klyk_med_psy3", lua_random( 60, 120 ), "sak.klyk_med_psy3_end()" )
    send_tip(
        "Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!",
        "Статус измерителя", 2, 10, "pribor", "pda_news", "green"
    )
    statys_psy = 1
    sak_spawn.add_klyk_med3_monsters()
end

function klyk_med_psy3_end()
    if statys_psy == 1 then
        send_tip( "Цикл измерения завершён", "Статус измерителя", 2, 10, "pribor", "pda_news", "green" )
        db.actor:give_info_portion( "agr_klyk_3faze" )
        db.actor:give_info_portion( "agr_remove_klyk_med_spot3" )
        statys_psy = 0
    end
end

function agr_klyk_out()
    level.add_pp_effector( "teleport.ppe", 1526, false )
    misc.release_obj( sim:story_object( story_ids.klyk ), 'sak.script:1569' )
    db.actor:give_info_portion( "klyk_out" )
end

function dezombified( art )
    local objg
    for a, i in pairs( db.storage ) do
        objg = client_obj( a )
        if objg then
            if objg and IsStalker( objg ) and objg:alive()
                and objg:position():distance_to( db.actor:position() ) < 2
            then
                break
            end
        end
    end
    if objg then
        local pk   = get_netpk( objg )
        local data = pk:get()
        data.character_profile = string.gsub( data.character_profile, "(.*)_zombi", "%1" )
        pk:set( data )
        amk_mod.af_flash( art )
    end
end

function esc_shustryi_stalker()
    local npc = level_object_by_sid( 4 )
    if npc and npc:alive() and npc.online then
        npc:set_character_community( "stalker", 0, 0 )
    else
        local obj = g_sim:story_object( story_ids.esc_shustryi )
        if obj then
            local pk             = get_netpk( obj )
            local data           = pk:get()
            data.community_index = 3
            pk:set( data )
        end
    end
end

function trup1_sanek_near()
    local obj1 = g_sim:story_object( story_ids.trup_sanek )
    if ( obj1 and IsStalker( obj1 ) and not obj1:alive()) then
        local posobj1  = obj1.position
        local actorpos = db.actor:position()
        if posobj1:distance_to( actorpos ) < 2 then return true
        else return false end
    else
        return false
    end
end

function trup1_sanek_level_changer()
    level.add_pp_effector( "teleport.ppe", 1527, false )
    misc.release_obj( sim:story_object( story_ids.trup_sanek ), 'sak.script:1619' )
    db.actor:give_info_portion( "trup_sanek_out" )
    local act_pos = db.actor:position()
    local lvid    = db.actor:level_vertex_id()
    local gvid    = db.actor:game_vertex_id()
    obj1 = g_sim:create(
        "level_changer", v3f( act_pos.x, act_pos.y, act_pos.z ), lvid, gvid
    )
    if obj1 then
        local obj2        = g_sim:story_object( story_ids.lost_village_level_changer )  -- story_object( 9166 )
        local pk          = get_netpk( obj2 )
        local data2       = pk:get()
        pk                = get_netpk( obj1 )
        local data1       = pk:get()
        data1             = data2
        data1.story_id    = ( 9481 )
        data1.silent_mode = 1
        pk:set( data1 )
    end
end

function trup2_sanek_near()
    local obj2 = g_sim:story_object( story_ids.trup_sanek2 )
    if ( obj2 and IsStalker( obj2 ) and not obj2:alive() ) then
        local posobj2  = obj2.position
        local actorpos = db.actor:position()
        if posobj2:distance_to( actorpos ) < 3 then
            return true
        else
            return false
        end
    else
        return false
    end
end

function trup2_sanek_has()
    local obj2 = g_sim:story_object( story_ids.trup_sanek2 )
    if obj2 then return true else return false end
end

function trup2_sanek_not() return not trup2_sanek_has() end
function nepis_umer() marsh_radiation() end

fly_up_flag       = false
local fly_tics    = 0
local fly_tic_max = 20

function fly_up()
    --show_coordinates()
    if not fly_up_flag then return end
    if fly_tics <= fly_tic_max then
        local pos   = device().cam_pos
        local delta = ( fly_tics*0.075-1.6 )
        db.actor:set_actor_position( v3f( pos.x, pos.y + delta, pos.z ) )
        fly_tics = fly_tics + 1
    else
        fly_up_flag = false
        fly_tics    = 0
    end
end

function gg_go_down()
    level.add_pp_effector( "teleport.ppe", 1527, false )
    local pos = device().cam_pos
    db.actor:set_actor_position( v3f( pos.x, pos.y - 5, pos.z ) )
end

function af_zone_off( af )
    local anom = amk_anoms.get_nearest_anomaly( db.actor )
    local sid  = g_sim:object( anom )
    if sid then
        amk_mod.af_flash( af )
        misc.release_obj( sid, 'sak.script:1673')
    end
end

function inv_item_cond( item, val )
    local obj = db.actor:object( item )
    if obj ~= nil then obj:set_condition( val ) end
end

local points_kordon = {
    { position = { x = -244.69, y = -14.27, z = -16.33 }, gv = 67,  lv = 12579  },
    { position = { x = 107.54,  y = -7.14,  z = 1.09   }, gv = 119, lv = 408816 },
    { position = { x = 71.48,   y = 1.92,   z = 158.79 }, gv = 96,  lv = 362726 },
    { position = { x = 33.69,   y = 5.02,   z = 407.89 }, gv = 246, lv = 565356 },
    { position = { x = 220.57,  y = 7.62,   z = 100.55 }, gv = 152, lv = 511605 }
}
local points_yantar = {
    { position = { x = 165.06, y = -8.19,  z = -103.95 }, gv = 1442, lv = 131181 },
    { position = { x = 92.58,  y = 0.02,   z = -39.23  }, gv = 1515, lv = 87813  },
    { position = { x = 34.48,  y = 0.04,   z = 18.19   }, gv = 1445, lv = 56341  },
    { position = { x = 24.61,  y = 0.02,   z = -62.60  }, gv = 1505, lv = 51069  },
    { position = { x = -60.17, y = -10.21, z = -202.66 }, gv = 1447, lv = 17529  }
}
local points_pripat = {
    { position = { x = 49.78,  y = -3.6,  z = 120.99 }, gv = 2166, lv = 161768 },
    { position = { x = 191.20, y = -2.0,  z = 219.52 }, gv = 2219, lv = 260280 },
    { position = { x = 164.51, y = -3.89, z = 80.83  }, gv = 2145, lv = 250751 },
    { position = { x = -97.65, y = -2.4,  z = 71.81  }, gv = 2140, lv = 18233  },
    { position = { x = 116.64, y = -0.61, z = 216.98 }, gv = 2163, lv = 226288 }
}
local points_military = {
    { position = { x = -93.83,  y = -20.47, z = 228.28 }, gv = 1734, lv = 220728 },
    { position = { x = -35.96,  y = -21.29, z = 375.80 }, gv = 1821, lv = 272475 },
    { position = { x = -264.86, y = -22.6,  z = 275.85 }, gv = 1797, lv = 72698  },
    { position = { x = -340.59, y = -13.62, z = 388.84 }, gv = 1847, lv = 12469  }
}
local points_marsh          = { { position = { x = 0,      y = 2,      z = 0       }, gv = 3407, lv = 98161  } }
local points_aver           = { { position = { x = 0,      y = 2,      z = 0       }, gv = 2886, lv = 174696 } }
local points_limansk        = { { position = { x = 21,     y = -4,     z = -81     }, gv = 2988, lv = 339    } }
local points_red_forest     = { { position = { x = 27,     y = 4.5,    z = 25      }, gv = 3263, lv = 82470  } }
local points_generators     = { { position = { x = 15,     y = 38,     z = -231    }, gv = 3110, lv = 353867 } }
local points_stancia        = { { position = { x = 374.82, y = 0,      z = 33.345  }, gv = 2384, lv = 161393 } }
local out_points_kordon_sak = { { position = { x = -210,   y = -20.53, z = -145.78 }, gv = 61,   lv = 43273  } }
local out_points_kordon     = { { position = { x = 301.11, y = 13.31,  z = 276.43  }, gv = 246,  lv = 565356 } }
local out_points_yantar     = { { position = { x = -60.78, y = -13.02, z = -253.92 }, gv = 1454, lv = 17204  } }
local out_points_pripat     = { { position = { x = 52.17,  y = -3.5,   z = 120.94  }, gv = 2166, lv = 164012 } }
local out_points_military   = { { position = { x = -94.71, y = -20.55, z = 229.54  }, gv = 1734, lv = 220072 } }
local out_points_sarcofag   = { { position = { x = 23.58,  y = 56,     z = 25.68   }, gv = 2417, lv = 5160   } }

function get_kordon_military()   get_teleport( "kordon",   "military", 1, 9121 ) end
function get_kordon_yantar()     get_teleport( "kordon",   "yantar",   1, 9121 ) end
function get_kordon_pripyat()    get_teleport( "kordon",   "pripat",   1, 9121 ) end
function get_pripyat_military()  get_teleport( "pripat",   "military", 1, 9122 ) end
function get_pripyat_yantar()    get_teleport( "pripat",   "yantar",   1, 9122 ) end
function get_pripyat_kordon()    get_teleport( "pripat",   "kordon",   1, 9122 ) end
function get_military_kordon()   get_teleport( "military", "kordon",   1, 9123 ) end
function get_military_pripyat()  get_teleport( "military", "pripat",   1, 9123 ) end
function get_military_yantar()   get_teleport( "military", "yantar",   1, 9123 ) end
function get_yantar_military()   get_teleport( "yantar",   "military", 1, 9124 ) end
function get_yantar_kordon()     get_teleport( "yantar",   "kordon",   1, 9124 ) end
function get_yantar_pripyat()    get_teleport( "yantar",   "pripat",   1, 9124 ) end
function get_kordon_militaryr()  get_teleport( "kordon",   "military", 0, 9121 ) end
function get_kordon_yantarr()    get_teleport( "kordon",   "yantar",   0, 9121 ) end
function get_kordon_pripyatr()   get_teleport( "kordon",   "pripat",   0, 9121 ) end
function get_pripyat_militaryr() get_teleport( "pripat",   "military", 0, 9122 ) end
function get_pripyat_yantarr()   get_teleport( "pripat",   "yantar",   0, 9122 ) end
function get_pripyat_kordonr()   get_teleport( "pripat",   "kordon",   0, 9122 ) end
function get_military_kordonr()  get_teleport( "military", "kordon",   0, 9123 ) end
function get_military_pripyatr() get_teleport( "military", "pripat",   0, 9123 ) end
function get_military_yantarr()  get_teleport( "military", "yantar",   0, 9123 ) end
function get_yantar_militaryr()  get_teleport( "yantar",   "military", 0, 9124 ) end
function get_yantar_kordonr()    get_teleport( "yantar",   "kordon",   0, 9124 ) end
function get_yantar_pripyatr()   get_teleport( "yantar",   "pripat",   0, 9124 ) end
function get_sarcofag_stancia()  get_teleport( "sarcofag", "stancia",  1, 9125 ) end

function get_teleport ( pos_out, pos_in, made, sidlc )
    local obj1, name_level, obj_tport, a, b
    name_level = pos_in
    if     pos_out == "kordon"   then a = out_points_kordon[ 1 ]
    elseif pos_out == "pripat"   then a = out_points_pripat[ 1 ]
    elseif pos_out == "military" then a = out_points_military[ 1 ]
    elseif pos_out == "yantar"   then a = out_points_yantar[ 1 ]
    elseif pos_out == "sarcofag" then a = out_points_sarcofag[ 1 ]
    end
    if made == 0 then
        -- destination point selection?
        if  pos_in == "kordon" then 
            name_level = "l01_escape"
            b = points_kordon[ lua_random( table.getn( points_kordon ) ) ]
        elseif pos_in == "pripat"then
            name_level = "l11_pripyat"
            b = points_pripat[ lua_random( table.getn( points_pripat ) ) ]
        elseif pos_in == "military" then
            name_level = "l07_military"
            b = points_military[ lua_random( table.getn( points_military ) ) ]
        elseif pos_in == "yantar" then
            name_level = "l08_yantar"
            b = points_yantar[ lua_random( table.getn( points_yantar ) ) ]
        end
    elseif made == 1 then
        if     pos_in == "kordon"     then name_level = "l01_escape"      b = points_kordon[ 1 ]
        elseif pos_in == "pripat"     then name_level = "l11_pripyat"     b = points_pripat[ 1 ]
        elseif pos_in == "military"   then name_level = "l07_military"    b = points_military[ 1 ]
        elseif pos_in == "yantar"     then name_level = "l08_yantar"      b = points_yantar[ 1 ]
        elseif pos_in == "stancia"    then name_level = "l12_stancia_new" b = points_stancia[ 1 ]
        elseif pos_in == "marsh"      then b = points_marsh[ 1 ]
        elseif pos_in == "aver"       then b = points_aver[ 1 ]
        elseif pos_in == "limansk"    then b = points_limansk[ 1 ]
        elseif pos_in == "red_forest" then b = points_red_forest[ 1 ]
        elseif pos_in == "generators" then b = points_generators[ 1 ]
        end
    end
    obj1 = g_sim:create( "level_changer", 
        v3f( a.position.x, a.position.y, a.position.z ), a.lv, a.gv
    )
    obj_tp = g_sim:create( "amk_zone_sphere",
        v3f( a.position.x, a.position.y, a.position.z ), a.lv, a.gv
    )
    obj_tport = obj_tp.id
    amk_vars.sak_teleport_vis = obj_tport
    if obj1 then
        local rand_direction      = lua_random( 0, 6 )
        local pk                  = get_netpk( obj1 )
        local data                = pk:get()
        data.object_flags         = bit_not( 193 )
        data.shapes:addSphere( 1, v3f( 0, 0.5, 0 ) )
        data.story_id             = sidlc
        data.restrictor_type      = 3
        data.dest_position        = v3f( b.position.x, b.position.y, b.position.z )
        data.dest_direction       = v3f( 0, -3 + rand_direction, 0 )
        data.dest_game_vertex_id  = b.gv
        data.dest_level_vertex_id = b.lv
        data.dest_level_name      = name_level
        data.silent_mode          = 1
        pk:set( data )
    end
    if obj1.id then amk_vars.sak_teleport = obj1.id end
    info_teleport()
    return obj1
end

local time_sub   = time_global()
local time_sound = time_global()
local flash_icon = true
local color_icons = {
    [ 1 ] = {
        [ 0 ] = { 255, 0,   0,   255 },
        [ 1 ] = { 255, 51,  51,  229 },
        [ 2 ] = { 255, 102, 51,  204 },
        [ 3 ] = { 255, 204, 51,  178 },
        [ 4 ] = { 255, 255, 51,  153 },
        [ 5 ] = { 204, 255, 51,  127 },
        [ 6 ] = { 102, 255, 51,  102 },
        [ 7 ] = { 51,  255, 102, 76  },
        [ 8 ] = { 51,  255, 204, 51  },
        [ 9 ] = { 51,  204, 204, 25  }
    },
    [ 2 ] = {
        [ 0 ] = { 250, 250, 250, 240 },
        [ 1 ] = { 180, 180, 180, 240 },
        [ 2 ] = { 153, 153, 153, 190 },
        [ 3 ] = { 153, 153, 153, 178 },
        [ 4 ] = { 153, 153, 153, 153 },
        [ 5 ] = { 153, 153, 153, 127 },
        [ 6 ] = { 153, 153, 153, 102 },
        [ 7 ] = { 153, 153, 153, 76  },
        [ 8 ] = { 153, 153, 153, 51  },
        [ 9 ] = { 153, 153, 153, 25  }
    },
    [ 3 ] = {
        [ 0 ] = { 255, 0,   0,   255 },
        [ 1 ] = { 255, 0,   20,  248 },
        [ 2 ] = { 255, 20,  20,  235 },
        [ 3 ] = { 255, 40,  40,  229 },
        [ 4 ] = { 255, 60,  60,  204 },
        [ 5 ] = { 255, 80,  80,  178 },
        [ 6 ] = { 255, 100, 100, 153 },
        [ 7 ] = { 255, 120, 120, 127 },
        [ 8 ] = { 255, 140, 140, 102 },
        [ 9 ] = { 255, 153, 153, 51  }
    },
    [ 4 ] = {
        [ 0 ] = { 0, 0,   255, 255 },
        [ 1 ] = { 0, 25,  255, 248 },
        [ 2 ] = { 0, 51,  255, 235 },
        [ 3 ] = { 0, 77,  255, 229 },
        [ 4 ] = { 0, 102, 255, 204 },
        [ 5 ] = { 0, 127, 255, 178 },
        [ 6 ] = { 0, 153, 255, 153 },
        [ 7 ] = { 0, 178, 255, 127 },
        [ 8 ] = { 0, 204, 255, 102 },
        [ 9 ] = { 0, 255, 255, 51  }
    },
    [ 5 ] = {
        [ 0 ] = { 255, 0,   0,   255 },
        [ 1 ] = { 255, 255, 20,  248 },
        [ 2 ] = { 255, 255, 40,  235 },
        [ 3 ] = { 255, 255, 55,  229 },
        [ 4 ] = { 255, 255, 70,  204 },
        [ 5 ] = { 255, 255, 85,  178 },
        [ 6 ] = { 255, 255, 100, 153 },
        [ 7 ] = { 255, 255, 115, 127 },
        [ 8 ] = { 255, 255, 140, 102 },
        [ 9 ] = { 255, 255, 155, 51  }
    }
}

function argb32( koef, tip )
    if koef < 0 then koef = 0 end
    koef = math.floor( koef * 10 )
    local r, g, b, a = color_icons[ tip ][ koef ][ 1 ], color_icons[ tip ][ koef ][ 2 ], color_icons[ tip ][ koef ][ 3 ], color_icons[ tip ][ koef ][ 4 ]
    if koef == 0 and flash_icon then a = 51 end
    local res = a * 256
    res = ( res + ( r ) ) * 256
    res = ( res + ( g ) ) * 256
    res =   res + ( b )
    return res
end

local act_breath = {
    [ "wht" ] = {
        {"actor\\without_mask_1_", 2, 1.2 },
        {"actor\\without_mask_2_", 2, 1.1 },
        {"actor\\without_mask_3_", 6, 1   }
    },
    [ "gas" ] = {
        {"actor\\gas_mask_1_", 6, 1.0  },
        {"actor\\gas_mask_2_", 10, 0.9 },
        {"actor\\gas_mask_3_", 10, 0.8 }
    },
    [ "mil" ] = {
        {"actor\\exo_mask_1_", 9, 1.5 },
        {"actor\\exo_mask_2_", 9, 1.3 },
        {"actor\\exo_mask_3_", 8, 1.1 }
    },
    [ "scn" ] = {
        {"actor\\scient_mask_1_", 2, 1.6 },
        {"actor\\scient_mask_2_", 2, 1.4 },
        {"actor\\scient_mask_3_", 6, 1.2 }
    }
}

local breath_sound = {
    "actor\\gas_mask_breath_in_0",
    "actor\\gas_mask_breath_in_1",
    "actor\\gas_mask_breath_in_2"
}

local delt, delt_h = 0, 0

function actor_heart()
    local npc = db.actor
    if npc == nil then return end
    local hb = npc.health
    if ( hb <= 0 ) or ( not npc:alive()) then return end
    local time_curr = time_global()
    local time_delt = 0
    local step      = 1
    if hb < 0.3 then
        time_delt = time_curr - delt_h
        if time_delt >= ( math.log( hb * 200 ) ) * 200 then
            if hb < 0.05 then
                step = 3
            elseif hb < 0.15 then
                step = 2
            else
                step = 1
            end
            vergas_lib.s_play( "actor\\heartbeat_"..step.."_"..lua_random( 4 ), ( 1.5 - 5 * hb ) )
            delt_h = time_curr
        end
    end
    local r_h = npc.power
    if r_h < 0.79 then
        time_delt = time_curr - delt
        local tip = vergas_masks.tip_breath or "wht"
        if time_delt >= ( r_h * 1500 + 800 ) then
            if r_h < 0.25 then step = 3 elseif r_h < 0.5 then step = 2 else step = 1 end
            if astma == true then
                vergas_lib.s_play( breath_sound[ lua_random( 1, 3 ) ], 1 )
                astma = false
            else
                local zv = 2.5 - act_breath[ tip ][ step ][ 3 ] - r_h
                vergas_lib.s_play(
                    act_breath[ tip ][ step ][ 1 ] .. lua_random( act_breath[ tip ][ step ][ 2 ] ), zv
                )
            end
            delt = time_curr
        end
    end
end

function health_handle()
    local npc = db.actor
    if not npc then return end
    local lname            = level.name()
    local time_current     = time_global()
    local time_delta       = time_current - time_sub
    local time_delta_sound = time_current - time_sound
    if time_delta_sound >= 1113 and lname ~= "l05_bar" and lname ~= "l01_escape" then
        fear_sounds()
        time_sound = time_current + lua_random( t_s_1, t_s_1 * 2 )
    end
    local n_healh = npc.health
    local r_healh = npc.power
    local p_healh = params.actor_psy_health()
    local s_healh = params.actor_satiety_health()
    local b_healh = params.actor_bleeding()
    local x_healh = npc.radiation
    ----------------------------------------------------------------------
    if n_healh < 0.92 then
        hud_params.set_icon_color( 1, argb32( ( n_healh * 1.08 ), 1 ) )
    else
        hud_params.set_icon_color( 1, 0 )
    end
    ----------------------------------------------------------------------
    if p_healh < 0.95 then
        hud_params.set_icon_color( 5, argb32( p_healh, 1 ) )
    else
        hud_params.set_icon_color( 5, 0 )
    end
    ----------------------------------------------------------------------
    if s_healh < 0.5  then
        hud_params.set_icon_color( 4, argb32( ( s_healh * 1.95 ), 1 ) )
    else
        hud_params.set_icon_color( 4, 0 )
    end
    ----------------------------------------------------------------------
    if r_healh < 0.8  then
        hud_params.set_icon_color( 2, argb32( ( r_healh * 1.21 ), 2 ) )
    else
        hud_params.set_icon_color( 2, 0 )
    end
    ----------------------------------------------------------------------
    if b_healh > 0.05 then
        hud_params.set_icon_color( 3, argb32( ( 1 - ( b_healh / 5 ) ), 3 ) )
    else
        hud_params.set_icon_color( 3, 0 )
    end
    ----------------------------------------------------------------------
    if x_healh > 0.02 then
        hud_params.set_icon_color( 6, argb32( ( 1 - x_healh ), 5 ) )
    else
        hud_params.set_icon_color( 6, 0 )
    end
    ----------------------------------------------------------------------
    flash_icon = not( flash_icon )
    if time_delta >= 8538 then
        time_sub   = time_current
        local s_nd = level.get_snd_volume()
        if s_nd < snd_volume then
            s_nd = s_nd + 0.1
            level.set_snd_volume( s_nd )
        end
        local grena = npc:item_in_slot( 3 )
        if grena then
            local zapal = lua_random( 500, 6000 )
            params.zapal_add( grena, zapal )
        end
        if s_healh < 0.15 then
            local add = -( 0.16 - s_healh )^2
            params.health_add( add )
        end
        if x_healh > 0.05 then
            if params.actor_alcohol_health() > 0.01 then npc.radiation = -0.05 end
        end
        if p_healh < 0.95 then
            -- восстановление пси-здоровья рядом с костром
            if params.actor_alcohol_health() > 0.05 then params.psy_health_add( 0.12 ) end
            local npos = device().cam_pos
            local cdir = get_actor_obj().orientation
            local vd   = device().cam_dir --  cdir:get_dir() -- actor direction as vector
            local objs, cnt = registry.sc_objects( "zone_flame_*", true, 7, client_obj )
            for n, objg in ipairs( objs ) do
                local op = objg:position()
                if op:distance_to( npos ) < 3   then
                    local diff  = vector():sub( op, npos ):normalize()
                    local cp    = vector():crossproduct( vd, diff )
                    local dp    = vd:dotproduct( diff )
                    local angle = math.atan2( cp:magnitude(), dp )
                    if math.abs( angle ) < 0.75 then
                        -- params.psy_health_add( 0.05 )
                        local crouch = db.actor:get_crouch_factor()
                        if crouch == 1 or crouch == 2 then
                            params.psy_health_add( 0.12 )
                        else
                            params.psy_health_add( 0.06 )      -- увеличим в 2 раза на пробу
                        end
                    else
                    end
                    wprintf(
                        "[~T].~C0F #DBG( camp_heal_psy ): angle =~C0D %.3f~C0F, dp =~C0F %.3f~C07 ",
                        angle, dp
                    )
                end -- if distance
            end -- for
        end -- if psy_health
        black_tip.health_handle()
        test.rad_disease_health_handle()
        test.art_satiety_restore()
    end
end

function breath_poison() -- реализация астмы с учетом противогаза
    --mask_poison = ( 1.1-1.2 )*0.2
    if mask_poison >= 0 then return end
    local npc     = db.actor
    local act_pos = npc:position()
    local cond    = vergas_masks.mask_condition()
    ------------------ чтобы в х6 на лестнице во время двухнедельного сна не задыхался -------------
    if
        level.name() == "warlab" 
        and amk.check_npc_in_box(
            db.actor,
            { x = 1.803, y = 0.8, z = -3.447 },
            { x = 9.220, y = 1.5, z = -0.737 }
        ) ~= false
    then
        return
    end
    ------------------------------------------------------------------------------------------------
    if
        amk_anoms.check_coordinates( act_pos )
        and (
                ( vergas_masks.get_flag_mask() == false
                 and vergas_masks.watch_flag == false )
            or cond < 0.85
            or vergas_masks.mask_definition() == "?"
        )
    then
        local r_h = npc.power
        if r_h >= 0.79 then
            vergas_lib.s_play( breath_sound[ lua_random( 1, 3 ) ], 1 )
        else
            astma = true
        end
        local add = mask_poison * 1.5
        params.health_add( add )
        if npc:item_in_slot( 6 ) == nil then
            local h     = hit()
            h.draftsman = npc
            h:bone( "bip01_spine" )
            h.type      = hit.chemical_burn
            h.power     = -mask_poison * 4
            h.impulse   = 0
            npc:hit( h )
        end
    end
    local t_add = 160
    if vergas_masks.get_flag_mask() == true then
        if     cond < 0.66 then t_add = 100
        elseif cond < 0.73 then t_add = 120
        elseif cond < 0.81 then t_add = 140
        end
    else
        t_add = 80
    end
    local t_m = math.floor( ( 0.04 - mask_poison ) * t_add )
    timers.start_timer ( "time_breath", t_m, "sak.breath_poison()" )
end

function out_many_pda_broken()
    local many  = nlc_vars.many_cash or 450
    local bablo = db.actor:money()
    if bablo > many then
        db.actor:give_money( -( bablo - many ) )
        nlc_vars.gg_money = bablo - many
    else
        nlc_vars.many_cash = bablo
    end
end

function end_power( end_power ) db.actor.power = end_power end

function s_play_rem_open()
    vergas_lib.s_play( "script_sound\\treasure_sounds\\treasure_2_open", 1 )
end

function s_play_rem_close()
    vergas_lib.s_play( "script_sound\\treasure_sounds\\treasure_2_close", 1 )
end

local rep_percent       = 0.1
local rep_percent_tiski = 0.15

function repair_boxoutfit( repiout, repiweap )
    local actr   = db.actor
    local dir    = device().cam_dir
    local a      = math.atan2( dir.x, dir.z )
    local xdelta = math.sin( a )
    local zdelta = math.cos( a )
    local pos    = actr:position()
    local lvid   = actr:level_vertex_id()
    local gvid   = actr:game_vertex_id()
    local obj = g_sim:create( "physic_object",
        v3f( ( pos.x + xdelta ), pos.y + 0.1, ( pos.z + zdelta ) ), lvid, gvid
    )
    if obj then
        local open = "[logic]\nactive = ph_button@closed\n[ph_button@closed]\ntooltip = search_self_rep\nanim = rembox_close_static\non_press = %= sak.actor_hide_weapon() =sak.s_play_rem_open()% ph_button@open\n[ph_button@open]\ntooltip = \nanim = rembox_open\non_timer = 1900| %=sak.restore_weap() +rem_open% ph_button@opened\n[ph_button@opened]\ntooltip = \nanim = rembox_open_static\non_info = {+rem_close} ph_button@close %=sak.actor_hide_weapon() =sak.s_play_rem_close() -rem_close -rem_open%\n[ph_button@close]\ntooltip = \nanim = rembox_close\non_timer = 1900| ph_button@close_end\n[ph_button@close_end]\ntooltip = \nanim = rembox_close_static"
        local dirs         = math.atan2( -dir.x, dir.z ) - 1.57
        obj.direction      = vector():set( 0, dirs, 0 )
        local pk           = get_netpk( obj, 1 )
        local data         = pk:get()
        data.visual_name   = "new_item\\rembox"
        data.custom_data   = open
        data.skeleton_name = "rembox_close_static"
        data.mass          = 20
        data.fixed_bones   = "link"
        pk:set( data )
        local robjd = g_sim:create( "m_repair_boxoutfit",
            v3f( ( pos.x + xdelta ), pos.y + 0.3, ( pos.z + zdelta ) ), lvid, gvid
        )
        local c_box = misc.spawn_obj( "closer_box", robjd.position, robjd.id, 1 )
        if repiout ~= 0 then
            se_respawn.create_ammo( "repair_itemoutfit",
                robjd.position, robjd.level_vertex_id, robjd.game_vertex_id, robjd.id, repiout
            )
        end
        if repiweap ~= 0 then
            se_respawn.create_ammo( "repair_item_weapon",
                robjd.position, robjd.level_vertex_id, robjd.game_vertex_id, robjd.id, repiweap
            )
        end
        robjd.direction  = vector():set( 0, dirs, 0 )
        local pk         = get_netpk( robjd, 1 )
        local data       = pk:get()
        data.custom_data = "[logic]\ncfg = scripts\\self_rep_box.ltx"
        pk:set( data )
        self_rep_boxes[ c_box.id ]             = {}
        self_rep_boxes[ c_box.id ][ "treas"  ] = robjd.id
        self_rep_boxes[ c_box.id ][ "phis"   ] = obj.id
        self_rep_boxes[ c_box.id ][ "direct" ] = dirs
        nlc_vars.self_rep_boxes = self_rep_boxes
    end
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
end

function repair_box_close( obj, attempt )
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
    misc.process_spawn()
    sak.self_rep_boxes = xray_vars.load_table( nlc_vars, "self_rep_boxes", {} )
    local c_box_id = obj:id()
    local rbox     = sak.self_rep_boxes[ c_box_id ]
    local objd_id, objr_id, dirs  = rbox[ "treas" ], rbox[ "phis" ], rbox[ "direct" ]
    local out_object, outr_object = client_obj( objd_id ), client_obj( objr_id )
    local repiout  = 0
    local repiweap = 0
    if out_object then
        local o_id     = out_object:id()
        local ids, cnt = registry.inv_objects( o_id, false )
        for n = 1, cnt do
            local id   = ids[ n ]
            local item = client_obj( id )
            if item then
                local sect = item:section()
                if     strposx( sect, "repair_itemoutfit"  ) then repiout  = repiout  + 1
                elseif strposx( sect, "repair_item_weapon" ) then repiweap = repiweap + 1
                else   out_object:transfer_item( item, db.actor )
                end
            end
        end -- for
        misc.release_obj( obj )
        misc.release_obj( out_object )
        nlc_vars.self_rep_boxes[ c_box_id ] = nil
        db.actor:give_info_portion( "rem_close" )
        schedule.add( "cl_rep",
            "sak.repair_box_closed("..objr_id..","..repiout..","..repiweap..","..dirs..")", 2500
        )
    end
end

function repair_box_closed( obj_id, repiout, repiweap, dirs )
    local robjd = client_obj( tonumber( obj_id ) )
    local pos   = robjd:position()
    local dir   = tonumber( dirs )
    if robjd then misc.release_obj( obj_id ) end
    local r_box = misc.spawn_obj( "repair_boxoutfit", pos )
    if r_box then
        r_box.direction  = vector():set( 0, dir, 0 )
        local pk         = get_netpk( r_box, 1 )
        local data       = pk:get()
        data.custom_data = repiout..","..repiweap
        pk:set( data )
    end
    restore_weap()
end

local repair_sound = {
    "device\\tiski_pistol_",
    "device\\tiski_avto_",
    "device\\tiski_bronik_"
}

local outfit_proc = {
    [ "exo"        ] = 0.06,
    [ "scientific" ] = 0.08,
    [ "ecolog"     ] = 0.08,
    [ "protection" ] = 0.08,
    [ "soldier"    ] = 0.12,
    [ "military"   ] = 0.12,
    [ "specops"    ] = 0.12
}

local wpn_proc = { 
    [ "wpn_v"      ] = 0.07, -- вал, винторез
    [ "wpn_sv"     ] = 0.04, -- свд, сву, св98
    [ "wpn_awm"    ] = 0.04,
    [ "wpn_abakan" ] = 0.06,
    [ "wpn_p"      ] = 0.16, -- пм, пб, пп19
    [ "wpn_bizon"  ] = 0.16,
    [ "wpn_fort"   ] = 0.14, -- форт12, форт17
    [ "wpn_aps"    ] = 0.08,
    [ "wpn_rpk"    ] = 0.07,
    [ "wpn_groza"  ] = 0.07,
    [ "wpn_lr300"  ] = 0.06,
    [ "wpn_sig550" ] = 0.07,
    [ "wpn_g36"    ] = 0.06,
    [ "wpn_m16a4"  ] = 0.06,
    [ "wpn_rpg7"   ] = 0.04,
    [ "wpn_m110"   ] = 0.04,
    [ "wpn_flame"  ] = 0.02
}

function check_repair_percent_by_tbl( sect, tbl )
    local percent = 0.1
    for k, v in pairs( tbl ) do
        if strposx( sect , k ) then percent = v end
    end
    return percent
end

function check_if_repaired( rep_table, name, rep_percent, amnt )
    local subtract    = 0
    local tbl_rep_ids = xray_vars.load_table( nlc_vars, rep_table, {} )
    if not tbl_rep_ids[ name ] then
        tbl_rep_ids[ name ] = amnt
    else
        subtract = tbl_rep_ids[ name ]
        tbl_rep_ids[ name ] = tbl_rep_ids[ name ] + amnt
    end
    rep_percent = rep_percent - subtract
    if rep_percent < 0.01 then rep_percent = 0.01 end
    nlc_vars[ rep_table ] = tbl_rep_ids
    misc.dump_table( nlc_vars[ rep_table ] )
    return rep_percent
end

function repair_box_repair( obj )
    if obj then
        local self = level.main_input_receiver()
        if self then self:GetHolder():start_stop_menu( self, true ) end
        local actor  = db.actor
        local slot_1 = actor:item_in_slot( 1 )
        local slot_2 = actor:item_in_slot( 2 )
        local armor  = actor:item_in_slot( 6 )
        local sounds = lua_random( 1, 3 )
        local r_damage = 0.01
        if obj and obj:section() == "repair_item_weapon" then
            if
                   ( slot_1 and slot_1:condition() >= 0.87 and slot_1:condition() < 0.985 )
                or ( slot_2 and slot_2:condition() >= 0.87 and slot_2:condition() < 0.985 )
            then
                actor_hide_weapon()
                level.add_cam_effector( "camera_effects\\item_use.anm", 9008, false, "" )
                level.add_pp_effector( "fade_to_black_9_sec.ppe", 9009, false )
                schedule.add( "tmp_rep_123", "level.remove_pp_effector(9009)", 8500 )

                if slot_1 and slot_1:condition() >= 0.87 and slot_1:condition() < 0.985 then
                    rep_percent      = check_repair_percent_by_tbl( slot_1:section(), wpn_proc ) or 0.1
                    rep_percent      = check_if_repaired( "rep_wpn_ids", slot_1:name(), rep_percent, 0.005 )
                    local rep_point  = slot_1:condition() + rep_percent
                    if rep_point > 1 then rep_point = 1 end
                    slot_1:set_condition( rep_point )
                    snd_obj = xr_sound.get_safe_sound_object( repair_sound[ 1 ] .. sounds )
                    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )

                elseif ( slot_2 and slot_2:condition() >= 0.87 and slot_2:condition() < 0.985 ) then
                    rep_percent     = check_repair_percent_by_tbl( slot_2:section(), wpn_proc ) or 0.1
                    rep_percent     = check_if_repaired( "rep_wpn_ids", slot_2:name(), rep_percent, 0.005 )
                    local rep_point = slot_2:condition() + rep_percent
                    if rep_point > 1 then rep_point = 1 end
                    slot_2:set_condition( rep_point )
                    snd_obj = xr_sound.get_safe_sound_object( repair_sound[ 2 ] .. sounds )
                    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
                end
                send_tip(
                        "Оружие отремонтировано на %c[255,0,255,0]" .. tostring( math.ceil( rep_percent * 100 ) ) .. "%",
                        nil, 12, 5, "g_g", "no", "green"
                    )
                xr_statistic.add_pts( "stalkerkills", game.translate_string( "st_pda_weapon_repairs" ), 1, 0 )
                timers.start_timer( "time_rep", 13, "sak.restore_weap()" )
            elseif ( slot_1 and slot_1:condition() <0.87 ) or ( slot_2 and slot_2:condition() < 0.87 ) then
                send_tip( "Слишком сильное повреждение оружия!", nil, 2, 5, "g_g", "no", "red" )
                misc.spawn_to( obj:section() .. "_feik", actor )
            else
                send_tip( "Оружие не нуждается в починке!", nil, 2, 5, "g_g", "no", "green" )
                misc.spawn_to( obj:section() .. "_feik", actor )
            end
        elseif obj and obj:section() == "repair_itemoutfit" then
            if armor then
                if str_in_tab( armor:section(), { "bandit_veteran_", "bandit_master_" } ) then
                    send_tip( "Для кожаного плаща не подходит!", nil, 2, 5, "g_g", "no", "yellow" )
                    misc.spawn_to( obj:section().."_feik", actor )
                else
                    if armor:condition() >= 0.87 and armor:condition() < 0.985 then
                        if str_in_tab( armor:section(), { "monolit", "exo" } ) then r_damage = 0.005 end
                        actor_hide_weapon()
                        level.add_cam_effector( "camera_effects\\item_use.anm", 9008, false, "" )
                        level.add_pp_effector( "fade_to_black_9_sec.ppe", 9009, false )
                        schedule.add( "tmp_rep_123", "level.remove_pp_effector(9009)", 8500 )
                        vergas_masks.set_flag_minimap( false )
                        local arm_sect = armor:section()
                        rep_percent = check_repair_percent_by_tbl( arm_sect, outfit_proc ) or 0.1
                        rep_percent = check_if_repaired( "rep_arm_ids", armor:name(), rep_percent, r_damage )
                        if strposx( arm_sect, "_q_" ) and not strposx( arm_sect, "exo" ) then
                            rep_percent = rep_percent * 0.5
                        end
                        if rep_percent < 0.01 then rep_percent = 0.01 end
                        local rep_point = armor:condition() + rep_percent
                        if rep_point > 1 then rep_point = 1 end
                        amk_mod.repair_armor( rep_point )
                        sound   = repair_sound[ 3 ] .. sounds
                        snd_obj = xr_sound.get_safe_sound_object( sound )
                        snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
                        send_tip(
                            "Броня отремонтирована на %c[255,0,255,0]" .. tostring( math.ceil( rep_percent * 100 ) ) .. "%",
                            nil, 12, 5, "g_g", "no", "green"
                        )
                        xr_statistic.add_pts( "stalkerkills", game.translate_string( "st_pda_armor_repairs" ), 1, 0 )
                        schedule.add( "tm_rep", "sak.return_mask()", 12500 )
                    elseif armor:condition() < 0.87 then
                        send_tip( "Слишком сильное повреждение брони!", nil, 2, 5, "g_g", "no", "red" )
                        misc.spawn_to( obj:section() .. "_feik", actor )
                    else
                        send_tip( "Броня не нуждается в починке!", nil, 2, 5, "g_g", "no", "green" )
                        misc.spawn_to( obj:section().."_feik", actor )
                    end
                end
            else
                send_tip( "А что же ремонтировать то? Нечего!", nil, 2, 5, "g_g", "no", "yellow" )
                misc.spawn_to( obj:section().."_feik", actor )
            end
        end
        amk.remove_item( obj )
    end
end

function return_mask()
    vergas_masks.set_flag_minimap( true )
    restore_weap()
end

local rep_armor

function repair_on()
    local snd_obj
    local sounds   = lua_random( 1, 3 )
    local sound
    local slot     = 0
    local slot_obj
    local slot_1   = db.actor:item_in_slot( 1 )
    local slot_2   = db.actor:item_in_slot( 2 )
    local armor    = db.actor:item_in_slot( 6 )
    local r_box_id = sak_inventory.eatable[ "repair_boxoutfit" ][ 1 ]
    local rem      = {}
    local r_box    = alife():object( r_box_id )
    local pk       = get_netpk( r_box, 1 )
    local data     = pk:get()
    local str      = data.custom_data
    rem            = vergas_lib.str_explode( ",", str, true )
    local repiout  = tonumber( rem[ 1 ] ) or 0
    local repiweap = tonumber( rem[ 2 ] ) or 0
    local tiski    = nil
    local ltx      = system_ini()
    local m        = "visual"
    for a, i in pairs( db.storage ) do
        local objg = client_obj( a )
        if objg then
            if
                ( objg and strpos( objg:name(), "_tiski_repair", 1, true )
                and objg:position():distance_to( db.actor:position() ) < 3
                and objg:position():distance_to( db.actor:position() ) > 0.9 )
            then
                tiski = objg
                break
            end
        end
    end
    actor_hide_weapon()
    level.add_cam_effector( "camera_effects\\item_use.anm", 9008, false, "" )
    if tiski ~= nil then
        if slot_1 ~= nil and slot_1:condition() < 0.985 then slot = 1 end
        if slot_2 ~= nil and slot_2:condition() < 0.985 then
            if slot == 0 then
                slot = 2
            elseif slot == 1 then
                if slot_1:condition() > slot_2:condition() then slot = 2 end
            end
        end
        if armor ~= nil and armor:condition()<0.985 then
            if slot == 0 then slot = 6
            elseif slot == 1 then
                if slot_1:condition() > armor:condition() then slot = 6 end
            elseif slot == 2 then
                if slot_2:condition() > armor:condition() then slot = 6 end
            end
        end
        if slot == 1 then
            local a   = slot_1:section()
            local vis = tostring( ltx:r_string( a, m ) )
            create_physic_object( vis,
                v3f(
                    tiski:position().x - 0.09,
                    tiski:position().y + 0.20,
                    tiski:position().z
                ),
                tiski:level_vertex_id(), tiski:game_vertex_id()
            )
            sound   = repair_sound[ 1 ] .. sounds
            snd_obj = xr_sound.get_safe_sound_object( sound )
            snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
            slot_obj = slot_1:id()
            schedule.add( "tm_rep",
                "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500
            )
        elseif slot == 2 then
            local a   = slot_2:section()
            local vis = tostring( ltx:r_string( a, m ) )
            create_physic_object( vis,
                v3f(
                    tiski:position().x - 0.09,
                    tiski:position().y + 0.20,
                    tiski:position().z - 0.1
                ),
                tiski:level_vertex_id(), tiski:game_vertex_id()
            )
            sound   = repair_sound[ 2 ] .. sounds
            snd_obj = xr_sound.get_safe_sound_object( sound )
            snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
            slot_obj = slot_2:id()
            schedule.add( "tm_rep",
                "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500
            )
        elseif slot == 6 then
            local a   = armor:section()
            local vis = tostring( ltx:r_string( a, m ) )
            create_physic_object( vis,
                v3f(
                    tiski:position().x,
                    tiski:position().y + 0.28,
                    tiski:position().z 
                ),
                tiski:level_vertex_id(), tiski:game_vertex_id()
            )
            sound   = repair_sound[ 3 ] .. sounds
            snd_obj = xr_sound.get_safe_sound_object( sound )
            snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
            slot_obj = armor:id()
            vergas_masks.set_flag_minimap( false )
            schedule.add( "tm_rep",
                "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500
            )
        else
            send_tip( "Нечего ремонтировать...", nil, 2, 5, "g_g", "no", "sky_blue" )
            restore_weap()
        end
        tiski = nil
    else
        send_tip( "Неудобно работать! Нужно немного отойти...", nil, 2, 5, "g_g", "no", "sky_blue" )
        restore_weap()
    end
end
-- была прописана в логике 2х тисков в all.spawn, переписал фиксом их на repair_on()
function repair_2_on()
    --tiski:position().x + 0.09, -- всё, чем отличалась от repair_on() 
 end

function repair_tiski_do( slot, slot_obj_id, r_box_id, repiout, repiweap )
    local r_damage = 0.005
    local slot_obj = client_obj( slot_obj_id )
    if slot_obj:condition() < 0.985 then
        if slot == 1 then
            if repiweap ~= 0 then
                if slot_obj:condition() >= 0.75 then
                    rep_percent_tiski = check_repair_percent_by_tbl( slot_obj:section(), wpn_proc ) or 0.1
                    rep_percent_tiski = check_if_repaired( "rep_wpn_ids", slot_obj:name(), rep_percent_tiski, 0.004 )
                    rep_percent_tiski = rep_percent_tiski * 1.5
                    local rep_point   = slot_obj:condition() + rep_percent_tiski
                    if rep_point > 1 then rep_point = 1 end
                    slot_obj:set_condition( rep_point )
                    send_tip(
                        "Оружие отремонтировано на %c[255,0,255,0]".. tostring( math.ceil( rep_percent_tiski * 100 ) ) .. "%...",
                        nil, 2, 5, "g_g", "no", "green"
                    )
                    xr_statistic.add_pts( "stalkerkills", game.translate_string( "st_pda_weapon_repairs" ), 1, 0 )
                    repiweap = repiweap - 1
                else
                    send_tip( "Оружие слишком повреждено", nil, 2, 5, "g_g", "no", "red" )
                end
            else
                send_tip( "Нет комплекта для ремонта оружия", nil, 2, 5, "g_g", "no", "red" )
            end
        elseif slot == 2 then
            if repiweap ~= 0 then
                if slot_obj:condition() >= 0.75 then
                    rep_percent_tiski = check_repair_percent_by_tbl( slot_obj:section(), wpn_proc ) or 0.1
                    rep_percent_tiski = check_if_repaired( "rep_wpn_ids", slot_obj:name(), rep_percent_tiski, 0.004 )
                    rep_percent_tiski = rep_percent_tiski * 1.5
                    local rep_point   = slot_obj:condition() + rep_percent_tiski
                    if rep_point > 1 then rep_point = 1 end
                    slot_obj:set_condition( rep_point )
                    send_tip(
                        "Оружие отремонтировано на %c[255,0,255,0]".. tostring( math.ceil( rep_percent_tiski * 100 ) ) .. "%...",
                        nil, 2, 5, "g_g", "no", "green"
                    )
                    xr_statistic.add_pts( "stalkerkills", game.translate_string( "st_pda_weapon_repairs" ), 1, 0 )
                    repiweap = repiweap - 1
                else
                    send_tip( "Оружие слишком повреждено", nil, 2, 5, "g_g", "no", "red" )
                end
            else
                send_tip( "Нет комплекта для ремонта оружия", nil, 2, 5, "g_g", "no", "red" )
            end
        elseif slot == 6 then
            if repiout ~= 0 then
                if str_in_tab( slot_obj:section(), { "bandit_veteran_", "bandit_master_" } ) then
                    send_tip( "Для кожаного плаща не подходит!", nil, 2, 5, "g_g", "no", "yellow" )
                else
                    if slot_obj:condition() >= 0.75 then
                        local arm_sect    = slot_obj:section()
                        if str_in_tab( arm_sect, { "monolit", "exo" } ) then r_damage = 0.003 end
                        rep_percent_tiski = check_repair_percent_by_tbl( arm_sect, outfit_proc ) or 0.1
                        rep_percent_tiski = check_if_repaired( "rep_arm_ids", slot_obj:name(), rep_percent_tiski, r_damage )
                        if strposx( arm_sect, "_q_" ) and not strposx( arm_sect, "exo" ) then
                            rep_percent_tiski = rep_percent_tiski * 0.5
                        end
                        if rep_percent_tiski < 0.01 then rep_percent_tiski = 0.01 end
                        rep_percent_tiski = rep_percent_tiski * 1.5
                        local rep_point   = slot_obj:condition() + rep_percent_tiski
                        if rep_point > 1 then rep_point = 1 end
                        amk_mod.repair_armor( rep_point )
                        send_tip(
                            "Ну вот, подлатали на %c[255,0,255,0]".. tostring( math.ceil( rep_percent_tiski * 100 ) ) .. "%...",
                            nil, 2, 5, "g_g", "no", "green"
                        )
                        xr_statistic.add_pts( "stalkerkills", game.translate_string( "st_pda_armor_repairs" ), 1, 0 )
                        repiout = repiout - 1
                    else
                        send_tip( "Слишком поврежден костюмчик-то", nil, 2, 5, "g_g", "no", "red" )
                    end
                end
            else
                send_tip( "Нет комплекта для ремонта", nil, 2, 5, "g_g", "no", "red" )
            end
            vergas_masks.set_flag_minimap( true )
        end
    else
        send_tip( "Вроде все нормально...", nil, 2, 5, "g_g", "no", "sky_blue" )
    end
    local r_box       = alife():object( r_box_id )
    local pk          = get_netpk( r_box, 1 )
    local data        = pk:get()
    data.object_flags = bit_not( 5 )
    data.custom_data  = repiout..","..repiweap
    pk:set( data )
    misc.release_obj( rep_armor, 'sak.script:2475')
    rep_armor = nil
    restore_weap()
end

function repair_tiski_use() end

function create_physic_object( p_visual, p_position, p_lvertex_id, p_gvertex_id )
    local obj = misc.spawn_obj( "physic_object", p_position )
    if obj then
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.visual_name = p_visual
        data.physic_type = 3
        pk:set( data )
    end
    rep_armor = obj.id
end

function add_2repair_item_weapon() create_items( db.actor, "repair_item_weapon_feik", 2 ) end
function add_3repair_item_weapon() create_items( db.actor, "repair_item_weapon_feik", 3 ) end
function add_4repair_item_weapon() create_items( db.actor, "repair_item_weapon_feik", 4 ) end
function add_5repair_item_weapon() create_items( db.actor, "repair_item_weapon_feik", 5 ) end
function add_2repair_itemoutfit()  create_items( db.actor, "repair_itemoutfit_feik",  2 ) end
function add_3repair_itemoutfit()  create_items( db.actor, "repair_itemoutfit_feik",  3 ) end
function add_4repair_itemoutfit()  create_items( db.actor, "repair_itemoutfit_feik",  4 ) end
function add_5repair_itemoutfit()  create_items( db.actor, "repair_itemoutfit_feik",  5 ) end

function have_1_repair_item_weapon() return have_n_repair_item_weapon( 1 ) end
function give_1_repair_item_weapon() give_n_repair_item_weapon( 1 )        end
function have_2_repair_item_weapon() return have_n_repair_item_weapon( 2 ) end
function give_2_repair_item_weapon() give_n_repair_item_weapon( 2 )        end
function have_3_repair_item_weapon() return have_n_repair_item_weapon( 3 ) end
function give_3_repair_item_weapon() give_n_repair_item_weapon( 3 )        end
function have_4_repair_item_weapon() return have_n_repair_item_weapon( 4 ) end
function give_4_repair_item_weapon() give_n_repair_item_weapon( 4 )        end
function have_5_repair_item_weapon() return have_n_repair_item_weapon( 5 ) end
function give_5_repair_item_weapon() give_n_repair_item_weapon( 5 )        end
function have_10_repair_item_weapon()return have_n_repair_item_weapon( 10 )end
function give_10_repair_item_weapon()give_n_repair_item_weapon( 10 )       end

function have_n_repair_item_weapon( n )
    local repiweap = 0
    if sak_inventory.rucksack[ "repair_item_weapon_feik" ] then
        repiweap = #sak_inventory.rucksack[ "repair_item_weapon_feik" ]
    end
    if sak_inventory.eatable[ "repair_boxoutfit" ] then
        for a = 1, #sak_inventory.eatable[ "repair_boxoutfit" ] do
            local repbox_id = sak_inventory.eatable[ "repair_boxoutfit" ][ a ]
            local rem       = {}
            local sobj      = alife():object( repbox_id )
            local pk        = get_netpk( sobj, 1 )
            local data      = pk:get()
            local str       = data.custom_data
            rem             = vergas_lib.str_explode( ",", str, true )
            local weap      = tonumber( rem[ 2 ] ) or 0
            repiweap        = repiweap + weap
        end
    end
    return repiweap >= n
end

function give_n_repair_item_weapon( n )
    local repiwp = n
    if sak_inventory.rucksack[ "repair_item_weapon_feik" ] then
        for a = 1, #sak_inventory.rucksack[ "repair_item_weapon_feik" ] do
            local id  = sak_inventory.rucksack[ "repair_item_weapon_feik" ][ a ]
            local obj = g_sim:object( id )
            if obj then
                misc.release_obj( obj, 'sak.script:2680' )
                repiwp = repiwp - 1
            end
            if repiwp == 0 then break end
        end
        sak_inventory.need_update_inventory()
        if repiwp == 0 then
            relocate_item( db.actor, "out", "repair_item_weapon", n )
            return
        end
    end
    local repbox_id  = sak_inventory.eatable[ "repair_boxoutfit" ][ 1 ]
    local rem        = {}
    local sobj       = alife():object( repbox_id )
    local pk         = get_netpk( sobj, 1 )
    local data       = pk:get()
    local str        = data.custom_data
    rem              = vergas_lib.str_explode( ",",str, true )
    local repiout    = tonumber( rem[ 1 ] ) or 0
    local repiweap   = tonumber( rem[ 2 ] ) or 0
    repiweap         = repiweap - repiwp
    data.custom_data = repiout..","..repiweap
    pk:set( data )
    relocate_item( db.actor, "out", "repair_item_weapon", n )
end

function add_repair_itemoutfit()    create_items( db.actor, "repair_itemoutfit_feik", 1 ) end
function add_repair_item_weapon()   create_items( db.actor, "repair_item_weapon_feik", 1 )end
function have_1_repair_itemoutfit() return have_n_repair_itemoutfit( 1 ) end
function give_1_repair_itemoutfit() give_n_repair_itemoutfit( 1 )        end
function have_2_repair_itemoutfit() return have_n_repair_itemoutfit( 2 ) end
function give_2_repair_itemoutfit() give_n_repair_itemoutfit( 2 )        end
function have_3_repair_itemoutfit() return have_n_repair_itemoutfit( 3 ) end
function give_3_repair_itemoutfit() give_n_repair_itemoutfit( 3 )        end
function have_4_repair_itemoutfit() return have_n_repair_itemoutfit( 4 ) end
function give_4_repair_itemoutfit() give_n_repair_itemoutfit( 4 )        end
function have_5_repair_itemoutfit() return have_n_repair_itemoutfit( 5 ) end
function give_5_repair_itemoutfit() give_n_repair_itemoutfit( 5 )        end
function have_10_repair_itemoutfit()return have_n_repair_itemoutfit( 10 )end
function give_10_repair_itemoutfit()give_n_repair_itemoutfit( 10 )       end

function have_n_repair_itemoutfit( n )
    local repiweap = 0
    if sak_inventory.rucksack[ "repair_itemoutfit_feik" ] then
        repiweap = #sak_inventory.rucksack[ "repair_itemoutfit_feik" ]
    end
    if sak_inventory.eatable[ "repair_boxoutfit" ] then
        for a = 1, #sak_inventory.eatable[ "repair_boxoutfit" ] do
            local repbox_id = sak_inventory.eatable[ "repair_boxoutfit" ][ a ]
            local rem       = {}
            local sobj      = alife():object( repbox_id )
            local pk        = get_netpk( sobj, 1 )
            local data      = pk:get()
            local str       = data.custom_data
            rem             = vergas_lib.str_explode( ",", str, true )
            local weap      = tonumber( rem[ 1 ] ) or 0
            repiweap        = repiweap + weap
        end
    end
    return repiweap >= n
end

function give_n_repair_itemoutfit( n )
    local repiwp = n
    if sak_inventory.rucksack[ "repair_itemoutfit_feik" ] then
        for a = 1, #sak_inventory.rucksack[ "repair_itemoutfit_feik" ] do
            local id  = sak_inventory.rucksack[ "repair_itemoutfit_feik" ][ a ]
            local obj = g_sim:object( id )
            if obj then
                misc.release_obj( obj, 'sak.script:2842')
                repiwp = repiwp - 1
            end
            if repiwp == 0 then break end
        end
        sak_inventory.need_update_inventory()
        if repiwp == 0 then
            relocate_item( db.actor, "out", "repair_itemoutfit", n )
            return
        end
    end
    local repbox_id  = sak_inventory.eatable[ "repair_boxoutfit" ][ 1 ]
    local rem        = {}
    local sobj       = alife():object( repbox_id )
    local pk         = get_netpk( sobj, 1 )
    local data       = pk:get()
    local str        = data.custom_data
    rem              = vergas_lib.str_explode( ",", str, true )
    local repiout    = tonumber( rem[ 1 ] ) or 0
    local repiweap   = tonumber( rem[ 2 ] ) or 0
    repiout          = repiout - repiwp
    data.custom_data = repiout..","..repiweap
    pk:set( data )
    relocate_item( db.actor, "out", "repair_itemoutfit", n )
end

function btr_looks()
    local snd_obj
    local sound = "scripts\\matches_no_light_2"
    snd_obj     = xr_sound.get_safe_sound_object( sound )
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
    level.add_pp_effector( "black_q.ppe", 1234, true )
    actor_hide_weapon()
end

function add_black_box()
    local dir    = device().cam_dir
    local coor_x = -dir.x
    local coor_y = dir.y
    local coor_z = -dir.z
    params.set_direction( coor_x, coor_y, coor_z )
    create_items( db.actor, "agr_black_box", 1 )
    restore_weap()
    level.add_pp_effector( "black_q.ppe", 1234, false )
end

koster_sound   = { "scripts\\matches_", "scripts\\matches_no_light_" }
matches_delays = { 3500, 4000, 4600 }

function scratch_match_sound( sidx )
    -- воспроизвести звук чирканья спичкой о коробок и вернуть задержку времени зажигания спички
    if sidx == nil then sidx = lua_random( 1, 3 ) end
    misc.easy_sound( koster_sound[ 1 ] .. sidx )
    return matches_delays[ sidx ]
end

function koster_on()
    local itm = bag_on_belt_use.get_matches() or bag_on_belt_use.load_matches()
    -- попытка запалить кострище
    if params.matches_flame > 0 then return end
    if not itm then return end
    wprintf( " matches exists, trying ignite!" )
    db.actor:eat ( itm )
    bag_on_belt_use.unload_matches()
    local delay = scratch_match_sound()
    actor_hide_weapon()
    schedule.add( "ignite_campfire", "campmgr.try_ignite()", delay )
end

function koster_yes() end

function candle_on()
    -- попытка засветить лампаду
    if ( params.matches_flame > 0 ) or ( savemgmt.candle_id > 0 ) then return end
    local itm = bag_on_belt_use.get_matches() or bag_on_belt_use.load_matches()
    if not itm then return end
    db.actor:eat( itm )
    bag_on_belt_use.unload_matches()
    actor_hide_weapon()
    local delay = scratch_match_sound()
    schedule.add( "ignite_candle", "sak.ignite_candle()", delay )
    schedule.add( "restor_wpn",    "sak.restore_weap()", delay + 2500 )
end

sak.candle_on = candle_on

function candle_yes() end

function ignite_candle()
    local rend = lua_random( 2 )
    if rend == 1 then
        schedule.add( "matches_flame", "params.spawn_matches_flame(1000)", 50 )
        local apos = db.actor:position()
        for a, i in pairs( db.storage ) do
            local candle = client_obj( a )
            if candle then
                local pos = candle:position()
                if strpos( candle:name(), "_candle_", 1, true ) and ( pos:distance_to( apos ) < 2.3 ) then
                    savemgmt.candle_id = candle:id()
                    schedule.add( "candle_flame", "savemgmt.enable_candle_flame()", 200 )
                    break
                end
            end
        end
    else
        savemgmt.candle_id = -1
        schedule.add( "matches_flame", "params.spawn_matches_flame(500)", 50 )
        schedule.add( "actor_grumble", "sak.actor_grumble()", 1000 )
    end
end

function actor_grumble()
    local sidx = lua_random( 1, 3 )
    if sidx <= 3 then
    local snd_name = sprintf( '%s%d', sak.koster_sound[ 2 ], sidx )
    misc.easy_sound( snd_name )
    end
end

sak.actor_grumble = actor_grumble
sak.ignite_candle = ignite_candle

local rad_pribor_sound = {
    "ambient\\special\\device_hum_",
    "scripts\\matches_no_light_"
}

function labx10_ventil()
   local sound = "scripts\\ventil_sound"
   snd_obj = xr_sound.get_safe_sound_object( sound )
   snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
   actor_hide_weapon()
end

function labx8_pribor_on()
    local snd_obj
    local sounds = lua_random( 1, 3 )
    local modul  = db.actor:object( "memory_module" )
    if modul then
    local sound = rad_pribor_sound[ 1 ] .. sounds
    snd_obj     = xr_sound.get_safe_sound_object( sound )
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
    misc.release_obj( modul:id(), 'sak.script:3518' )
    actor_hide_weapon()
    end
end

function labx8_pribor1_yes()
    restore_weap()
    local sobj = level_object_by_sid( 8151 )
    sobj:get_hanging_lamp():turn_off()
    local sobj = level_object_by_sid( 8156 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "labx8_pribor1_on" )
end

function labx8_pribor2_yes()
    restore_weap()
    local sobj = level_object_by_sid( 8152 )
    sobj:get_hanging_lamp():turn_off()
    local sobj = level_object_by_sid( 8157 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "labx8_pribor2_on" )
end

function labx8_pribor3_yes()
    restore_weap()
    misc.release_by_name( "labx8_lamp_pribor13" )
    local sobj = level_object_by_sid( 8158 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "labx8_pribor3_on" )
end

function labx8_pribor4_yes()
    restore_weap()
    misc.release_by_name( "labx8_lamp_pribor14" )
    local sobj = level_object_by_sid( 8159 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "labx8_pribor4_on" )
end

function labx8_pribor5_yes()
    restore_weap()
    local sobj = level_object_by_sid( 8155 )
    sobj:get_hanging_lamp():turn_off()
    local sobj = level_object_by_sid( 8160 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "labx8_pribor5_on" )
end

function rad_pribor_on()
    local snd_obj
    local sounds = lua_random( 1, 3 )
    local akk    = db.actor:object( "item_battery_03" )
    if akk then
        local sound = rad_pribor_sound[ 1 ]..sounds
        snd_obj     = xr_sound.get_safe_sound_object( sound )
        snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
        misc.release_obj( akk:id(), 'sak.script:2974' )
    end
    actor_hide_weapon()
end

function rad_pribor1_yes()
    local sobj = level_object_by_sid( 6152 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "radar_pribor1_on" )
    timers.start_timer( "rad_pribor3_on", 0, 0, 28, "sak.rad_pribor1_ready()" )
    restore_weap()
end

function rad_pribor2_yes()
    local sobj = level_object_by_sid( 6153 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "radar_pribor2_on" )
    timers.start_timer( "rad_pribor3_on", 0, 0, 28, "sak.rad_pribor2_ready()" )
    restore_weap()
end

-- доспавн зомби при начале замеров, вход в х12
function rad_pribor3_yes()
    local sobj = level_object_by_sid( 6154 )
    sobj:get_hanging_lamp():turn_on()
    db.actor:give_info_portion( "radar_pribor3_on" )
    timers.start_timer( "rad_pribor3_on", 0, 0, 28, "sak.rad_pribor3_ready()" )
    restore_weap()
    if lua_random() > 0.75 then return end
    local table_monsters = {
        "rad_zombied_respawn_1",
        "rad_zombied_respawn_2",
        "rad_zombied_respawn_3",
        "yan_zombied_respawn_1",
        "yan_zombied_respawn_2",
        "yan_zombied_respawn_3",
        "yan_zombied_respawn_4",
        "yan_zombied_respawn_5",
        "yan_zombied_respawn_6"
    }
    local table_spawn = {
        { 635.404053, -43.856487, 197.151382, 225752, 1909 },
        { 633.207214, -43.861454, 198.539993, 225478, 1909 },
        { 634.332092, -43.841942, 192.377808, 225573, 1909 },
        { 621.343628, -43.854050, 196.815125, 223236, 1908 },
        { 620.972290, -43.848282, 195.368713, 223034, 1908 },
        { 636.359924, -43.829460, 177.257782, 225807, 1911 }
    }
    for i = 1, #table_spawn do
        local zomb       = table_monsters[ lua_random( #table_monsters ) ]
        local point      = table_spawn[ i ]
        local obj        = alife():create( zomb,
            v3f( point[ 1 ], point[ 2 ], point[ 3 ] ), point[ 4 ], point[ 5 ]
        )
        local pk         = get_netpk( obj )
        local data       = pk:get()
        data.custom_data = "[smart_terrains]\nnone = true"
        pk:set( data )
        off_on( obj )
    end
end

function rad_pribor1_ready() db.actor:give_info_portion( "rad_pribor1_ready" ) end
function rad_pribor2_ready() db.actor:give_info_portion( "rad_pribor2_ready" ) end
function rad_pribor3_ready() db.actor:give_info_portion( "rad_pribor3_ready" ) end

function rad_pribor_cart_on()
    create_items( db.actor, "rad_cart", 1 )
    restore_weap()
end

function add_aver_cart()
    create_items( db.actor, "aver_cart", 1 )
    restore_weap()
end

function add_marsh_cart()
    create_items( db.actor, "marsh_cart", 1 )
    restore_weap()
end

function add_red_cart()
    create_items( db.actor, "red_cart", 1 )
    restore_weap()
end

function mar_corps_done()
    if
            level_object_by_sid( 9552 ) == nil
        and level_object_by_sid( 9553 ) == nil
        and level_object_by_sid( 9554 ) == nil
    then
        return true
    end
end

local mar_rand  = lua_random( 100 )
local mar_prize = 0

function mar_factory_leader_prize()
    if mar_rand > mar_prize then return true end
end

function mar_factory_leader_no_prize()
    if mar_rand <= mar_prize then return true end
end

function add_medkit() create_items( db.actor, "medkit", 1 ) end

function proba()
    local b = nlc_vars.proba or 0
    if b == 2 then return true end
end

function mongol_good_have()
  timers.start_timer( "mongol_good", 0, 0, 35, "sak.set_community()" )
end

function set_community()
    local act = db.actor
    if not act:has_info( "mongol_umer" ) and not act:has_info( "val_bandit_talk" ) then
        local lname = level.name()
        if lname == "l04_darkvalley" then
            act:set_character_community( "stranger", 0, 0 )
        end
        act:give_info_portion( "val_bandit_talk" )
        send_tip(
            "Короче, если чё - подваливай. Пахан согласен.",
            "Типку с корявой рожей", 11, 20, "death", "sak", "red"
        )
    end
end

function red_community() db.actor:set_character_community( "stranger", 0, 0 ) end
function set_community_actor() db.actor:set_character_community( "actor", 0, 0 ) end

local flag_drink = true

function drinked_vodka() return not flag_drink end
function not_drinked_vodka() return flag_drink end
function hanter_vodka() flag_drink = false end

function drink_vodka()
    db.actor:eat( db.actor:object( "vodka" ) )
    sak_dialog.up_repa( 5 )
end

function eat_vodka()
    local snd_obj
    snd_obj = xr_sound.get_safe_sound_object( [[scripts\inv_vodka]] )
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
end

local rand_tres = lua_random( 1, 12 )

function take_trasure( npc, npc1 )
    local npc_id       = npc:id()
    local npc_id_treas = ReadIni( db.stor_ltx, "stor", "npc_" .. npc_id )
    if npc_id_treas and npc_id_treas ~= "" then
        treasure_manager.get_treasure_manager():give_treasure( npc_id_treas )
        rand_tres = rand_tres + 1
    else
        treasure_manager.get_treasure_manager():dialog( npc, true )
        rand_tres = rand_tres + 1
    end
end

function have_trasure( first_speaker, second_speaker )
    local randd, randh, randm = level.get_time_days(), level.get_time_hours(), level.get_time_minutes()
    local rand = randh + randd
    while rand > 23 do rand = rand - 24 end
    for  i = 0, 1 do
        if
            ( rand == ( i * 12 + rand_tres ) )
            and randm > randh
        then
            return db.actor:give_info_portion( "have_sak_treasure" )
        end
    end
    return db.actor:give_info_portion( "havent_sak_treasure" )
end

function zombie_checkup()
    if db.actor ~= nil then
        if lua_random() > 0.8 then
            local a     = lua_random()
            local h     = hit()
            h.draftsman = db.actor
            h:bone( "bip01_spine" )
            h.type      = hit.telepatic
            h.power     = 0.04 + a / 5
            h.impulse   = 1.0
            db.actor:hit( h )
            h.type      = hit.strike
            db.actor:hit( h )
            h.type      = hit.radiation
            db.actor:hit( h )
            level.add_pp_effector( "alcohol.ppe", 100, false )
            local rnd   = lua_random( 1, 6 )
            local snd_obj
            if rnd == 1 then
                snd_obj = xr_sound.get_safe_sound_object( [[characters_voice\human_01\stalker\fight\hit\hit_1]] )
            elseif rnd == 2 then
                snd_obj = xr_sound.get_safe_sound_object( [[characters_voice\human_01\stalker\fight\hit\hit_2]] )
            elseif rnd == 3 then
                snd_obj = xr_sound.get_safe_sound_object( [[characters_voice\human_01\stalker\fight\hit\hit_3]] )
            elseif rnd == 4 then
                snd_obj = xr_sound.get_safe_sound_object( [[characters_voice\human_01\stalker\fight\hit\hit_6]] )
            elseif rnd == 5 then
                snd_obj = xr_sound.get_safe_sound_object( [[characters_voice\human_01\stalker\fight\hit\hit_7]] )
            elseif rnd == 6 then
                snd_obj = xr_sound.get_safe_sound_object( [[characters_voice\human_01\stalker\fight\hit\hit_8]] )
            end
            snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
        end
    end
end

function eff_vodka()
    if db.actor ~= nil then
        local a     = lua_random()
        local h     = hit()
        h.draftsman = db.actor
        h:bone( "bip01_spine" )
        h.type      = hit.telepatic
        h.power     = 0.04 + a / 5
        h.impulse   = 0.2
        db.actor:hit( h )
    end
end

function add_spot_of_docent( a )
    local old_spot = nlc_vars.spot_of_nps or 0
    if old_spot ~= 0 then
        local obj_old = g_sim:story_object( old_spot )
        amk.remove_spot_from_map( obj_old.id, 'blue_location' )
    end
    local obj = g_sim:story_object( a )
    if obj then
        local name = amk_offline_alife.get_npc_name( obj )
        amk.add_spot_on_map( obj.id, 'blue_location', name )
        old_spot = a
        nlc_vars.spot_of_nps = old_spot
    end
end

function add_yan_izm_spots( sid )
    local obj = g_sim:story_object( sid )
    if obj then amk.add_spot_on_map( obj.id, "crlc_small", "yan_izm_spot" .. tostring( sid ) ) end
end

function add_rad_izm_spots( sid )
    local obj  = g_sim:story_object( sid )
    local spot = lua_random( 1, 3 )
    if obj then amk.add_spot_on_map( obj.id, "crlc_big_treasure" .. spot, "rad_izm_spot" ) end
end

function remove_rad_izm_spots( sid )
    local obj = g_sim:story_object( sid )
    for spot = 1, 4 do amk.remove_spot_from_map( obj.id, "crlc_big_treasure" .. spot ) end
end

function add_klyk_med_spots( sid )
    local obj = g_sim:story_object( sid )
    if obj then amk.add_spot_on_map( obj.id, "crlc_small", "agr_klyk_med_spot" .. tostring( sid ) ) end
end

function remove_klyk_med_spots( sid )
    local obj = g_sim:story_object( sid )
    if obj then amk.remove_spot_from_map( obj.id, "crlc_small" ) end
end

function save_gg_community()
    local gg_community = db.actor:character_community()
    if level.name() ~= "l04_darkvalley" then amk_vars.gg_community = gg_community end
end

local chiter = false

function return_community()
  local gg_community = ( amk_vars.gg_community or "actor" )
  db.actor:set_character_community( gg_community, 0, 0 )
end

function amb_clear()
  if level and level.name() and level.name() ~= "" then
    local lname = level.name()
    if const.underground( lname ) then
       get_command( "r2_sun_lumscale_amb 0.1" )
    end
  end
end

function vokodav_vis_new()
    local obj = g_sim:story_object( story_ids.volkodav )
    if obj then
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.visual_name = "actors\\killer\\stalker_ki_nauchniy"
        pk:set( data )
    end
end

function bes_seryi_vis_new()
    local act = db.actor
    if act:has_info( "deactivate_radar_fall" ) then return end
    local obj = g_sim:story_object( story_ids.gar_seryi )
    if obj then
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.custom_data = "[smart_terrains]\nsak_lager = {-deactivate_radar_fall}\nrad_stalkers_lager = {+deactivate_radar_fall}"
        data.visual_name = "actors\\neytral\\stalker_neytral_nauchniy"
        pk:set( data )
        obj:set_rank( 790 )
    end
    obj = g_sim:story_object( story_ids.gar_hellcar )
    if obj then
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.custom_data = "[smart_terrains]\nsak_lager = {-deactivate_radar_fall}\nrad_stalkers_lager = {+deactivate_radar_fall}"
        data.visual_name = "actors\\neytral\\stalker_neytral_exoskeleton"
        pk:set( data )
        obj:set_rank( 755 )
    end
    act:give_info_portion( "deactivate_radar_fall" )
end

function timer_dead_prizrak()
    timers.start_timer( "dead_prizrak", 2, 10, 19, "sak.dead_prizrak_info()" )
end

function dead_prizrak_info()
    send_tip(
        "Это Бармен. Меченный, есть для тебя важное дело. Заходи.",
        "Сообщение для Меченного", 11, 20, "barman", "sak", "red"
    )
    db.actor:give_info_portion( "dead_prizrak_barmen_info" )
end

function agr_spec_start()
    timers.start_timer( "agr_spec_attack", 0, 0, 9, "sak.agr_spawn_spetsnaz()" )
end

function agr_spawn_spetsnaz()
    db.actor:give_info_portion( "agr_factory_spawn_spetsnaz" )
    misc.release_by_name( "agr_factory_location" )
    misc.release_by_name( "agr_krot_combat_trigger" )
    misc.release_by_name( "agr_krot_help_trigger" )
end

function compile_rules( rules )
    local result = {}
    for key, val in pairs( rules ) do
        local t    = type( val )
        local code = "" -- function body
        if t == "boolean" then
            code = "return " .. tostring( val ) .. " end"
        elseif t == "string" then
            code = "return " .. val .. " end"
        end
        local f = loadstring( "return function( obj, actor ) "..code )() -- компиляция функции в чанк
        result[ key ] = f
    end
    return result
end

function check_rules( rules, obj, actor, nname )
    for key, func in pairs( rules ) do
        if strposx( nname, key ) then return func( obj, actor ) end
    end
    -- universal rule test
    local func = rules[ 'any_name' ]
    if func then return func( obj, actor ) end
    return false
end

function add_tail()
    wprintf( '~CF0[~T/~U/~B]. #PERF: sak.add_tail begin~C07' )
    local actor         = db.actor
    local lname         = level.name()
    local tip           = level_trees[ lname ]
    local sname         = amk_vars.level_on_save or ""
    nlc_vars.prev_level = sname -- для дополнительного детектирования переходов
    nlc_vars.curr_level = lname
    if tip ~= 0 then texman.swap_trees( tip ) end
    tip = level_stons[ lname ]
    if tip ~= 0 then texman.swap_stons( tip ) end
    if lname == "l01_escape" then
        texman.swap_briks( "esc_" )
        local day = level.get_time_days()
        if     math.fmod( day, 8 ) == 0 then texman.swap_sid_plakat( "s" )
        elseif math.fmod( day, 9 ) == 0 then texman.swap_sid_plakat( "k" )
        end
    end

    local gg_community = amk_vars.gg_community or "actor"
    torch_id_norm()
    if lname == "l04_darkvalley" then
        local obj = g_sim:story_object( story_ids.val_lager_borov )
        if obj and obj:alive() then
            if
                ( actor:has_info( "val_bandit_talk" ) or actor:has_info( "borov_has_good" ) )
                and not actor:has_info( "actor_enemy_for_bandit" )
            then
                actor:set_character_community( "stranger", 0, 0 )
                misc.release_by_name( "val_bandits_enemy_zone", 'sak.script:4541')
            end
        else
            actor:set_character_community( gg_community, 0, 0 )
        end
    elseif lname ~= "red_forest" then
        actor:set_character_community( gg_community, 0, 0 )
    end
    local drawn_thing  = "obj.parent_id and obj.parent_id == 0"
    local remove_rules = {
        minigame_thimble = true,
        fear_sound_item  = true,
        fall_object      = true,
        dollars          = drawn_thing,
        ammo_flame       = drawn_thing,
        soldier_letter_  = drawn_thing,
        closer_                           = "obj.parent_id==nil or obj.parent_id==BAD_OBJ_ID",
        yan_zone_zharka_static_average_01 = "actor:has_info('yan_labx16_switcher_primary_off')",
        sak_document2                     = "actor:has_info('escape_lager_volk_document_done')",
        esc_suicidal_flash_restrictor     = "actor:has_info('escape_lager_volk_document_done')",
        space_restrictor_vagonchik        = "actor:has_info('esc_killers_raid')",
        gar_bandits_fire                  = "actor:has_info('gar_counter_fire')",
        esc_exit_bandit_                  = "actor:has_info('gar_start_quest')",
        bar_ambush_killer_                = "actor:has_info('sak_ros_merk_out')",
        dt_merc_baze                      = "actor:has_info('sak_ros_merk_out')",
        any_name                          = "obj.m_game_vertex_id==nil or obj.m_game_vertex_id==BAD_OBJ_ID"
    }
    remove_rules = compile_rules( remove_rules )
    local testobj, gen_teleport, aver_teleport, prip_teleport = 0, 0, 0
    local sl = 1

    for a = 1, BAD_OBJ_ID, 1 do
        local obj = g_sim:object( a )
        if obj then
            local nname = obj:name()
            local o_sid = obj.m_story_id
            if     strpos( nname, "testsak_" .. lname, 1, true )               then testobj = 1
            elseif strpos( nname, "amk_zone_teleport_labirint", 1, true )      then gen_teleport = 1
            elseif strpos( nname, "amk_zone_teleport_aver_labirint", 1, true ) then aver_teleport = 1
            elseif strpos( nname, "amk_zone_teleport_prip_labirint", 1, true ) then prip_teleport = 1
            elseif strpos( nname, "flask_army", 1, true ) then vergas_flask.take_flask_army( obj, a )
            elseif ( obj:section_name() == "device_torch" and obj.parent_id ~= 0 ) then torch_npc_brock( a )
            elseif lname ~= sname and sak_off_corpses.off_logic_npc[ nname ] then
                if has_alife_info( sak_off_corpses.off_logic_npc[ nname ][ 1 ] ) then
                    local pk                  = get_netpk( obj, 1 )
                    local data                = pk:get()
                    data.base_out_restrictors = ''
                    data.base_in_restrictors  = ''
                    data.money                = lua_random( 25000 )
                    data.custom_data          = sak_off_corpses.off_logic_npc[ nname ][ 2 ]
                    pk:set( data )
                end
            elseif ( check_rules( remove_rules, obj, actor, nname )
                or ( strpos( obj:section_name(), "^rat_" ) and not obj:alive())
                or ( actor:has_info( "deactivate_radar_fall" )
                and str_in_tab( lname, { "l05_bar", "labx8", "warlab", "l10_radar" }) == nil
                and str_in_tab( nname, {
                    "bar_stalker_off_", "gar_dolg_blokpost_", "_tramplin_",
                    "val_lager_bandit", "val_bandit_", "val_sacrifice_guard2",
                    "val_lager_bodyguard1", "bar_flame_off_", "bar_bar_visitor_hunter",
                    "bar_bar_guard", "square_1_guard", "bar_dolg_bunker_" }))
                or (( obj.level_id ~= nil ) and ( lname == obj._level_name )
                    and const.ground_levels[ lname ]
                    and obj.m_level_vertex_id > const.level_vertices[ lname ]
                    and not strposx( nname, "single_player" ))
                or ( nname == "device_pda" and obj.parent_id ~= 0 ))
            then
                misc.release_obj( obj, 'sak.script->add_tail')
            elseif
                IsStalker( obj ) and obj.alive and obj:alive() and obj.m_game_vertex_id
                and ( lname ~= "l02_garbage" or ( lname == "l02_garbage" and obj:community() ~= "bandit" ))
                and obj:community() ~= "zombied" and
                ( o_sid == NONE_SID or o_sid == NONE_CL_SID or o_sid == 9503
                or o_sid == 424 or o_sid == 9541 or o_sid == 3 or o_sid == 9543
                or o_sid == 902 or lname == "l05_bar"
                or ( lname == "l07_military" and not o_sid == 509 )
                or ( actor:has_info( "volk_prisoner_start" )
                and not actor:has_info( "atp_bandit_leader_ok" )
                and ( o_sid == 4 or o_sid == 9 ) and lname == "l01_escape" ))
            then
                if game_graph():valid_vertex_id( obj.m_game_vertex_id ) then
                    local map = obj.level_name -- g_sim:level_name( game_graph():vertex( obj.m_game_vertex_id ):level_id())
                    if map == lname then
                        g_sim:set_switch_online( obj.id, true )
                        g_sim:set_switch_offline( obj.id, false )
                        local npc = client_obj( a )
                        if npc then npc:clear_animations() end
                        if
                            lname ~= sname and sname ~= ""
                            and not str_in_tab( obj:community(), {
                                "military", "monolith", "killer", "trader"
                            })
                            and obj:clsid() ~= CLID_TRADER
                        then
                            log2( "@--------- [ sak.script ]: restocking NPC: .......................... %s", nname  )
                            habar_by_nps( a )
                        end
                    end
                end
            end
        end
    end

    if const.ground_levels[ lname ] then
        if testobj == 0 then
            amk_anoms.generate_arts()
            add_sak_skelets( lname )
        elseif testobj == 1 then
            amk_anoms.randomize_arts()
        end
    end

    local levch_lab = { 9130, 9131, 9167, 9170, 9186, 9187, 9192, 9196, 9197, 9481, 9109, 9256, 9118, 9119 }
    for d = 1, table.getn( levch_lab ) do
        local objt = g_sim:story_object( levch_lab[ d ] )
        if objt then misc.release_obj( objt, 'sak.script:3339') end
    end

    if actor:has_info( "trup_sanek_out" ) then actor:give_info_portion( "sanek_out" )
        local sanek = g_sim:story_object( story_ids.sanek )
        if sanek then misc.release_obj( sanek, 'remove sanek' ) end
    end
    ----------- установка фоновой освещённости, не восстанавливается при выходе из подземки -------
    local amb_cfg = FindConfigStr( "r2_sun_lumscale_amb" )
    WriteIni( db.stor_ltx, "stor", "lumscale_amb", "\""..amb_cfg.."\"" )
    local amb = ReadIni( db.stor_ltx, "stor", "lumscale_amb" )
    if
        ( strpos( amb, "r2_sun_lumscale_amb ", 1, true )
        and tonumber( string.sub( amb, -3 ) ) < 0.2 ) or amb == ""
    then
        amb = "r2_sun_lumscale_amb 0.5"
    end
    if const.ground_levels[ lname ] then get_command( amb )
    else get_command( "r2_sun_lumscale_amb 0.1" )
    end
    ---------------------------  начало обработки левел ченджера ---------------------------------
    if lname ~= sname and sname ~= "" then
        wprintf( "sak.add_tail: level change detected from~C0E %s~C07 to~C0F %s~C07", sname, lname )
        nlc_vars.semeneckyi_done = nil
        local obj
        -------------------------------------------------------
        if lname ~= "l05_bar" and not has_alife_info( "minigame_stas_start" ) then 
            actor:give_info_portion( "minigame_stas_start" )
        end
        -------------------------------------------------------
        if
            not has_alife_info( "bar_heli_scene_professor_die" )
            and not has_alife_info( "kruglov_is_fly" )
            and (
                   actor:has_info( "kruglov_way_2_end"     )
                or actor:has_info( "kruglov_flash_done"    )
                or actor:has_info( "kruglov_resiever_done" )
                or actor:has_info( "kruglov_weapon_done"   )
                or actor:has_info( "kruglov_letter_done"   )
                or actor:has_info( "kruglov_follow_done"   )
                or actor:has_info( "krugl_end_time"        )
            )
        then
            actor:give_info_portion( "kruglov1_is_fly" )
            actor:give_info_portion( "kruglov2_is_fly" )
            actor:give_info_portion( "kruglov3_is_fly" )
            actor:give_info_portion( "kruglov_is_fly"  )
            --obj= g_sim:story_object( story_ids.bar_ecolog_professor )
            for a = 0, 2 do misc.release_by_name( "ros_zone_flame_000"..a, 'sak.script:4680') end
            for a = 0, 4 do misc.release_by_name( "ros_zone_flame_small_000"..a, 'sak.script:4681') end
            obj = g_sim:story_object( story_ids.bar_ecolog_crush_1 )
            if obj then misc.release_obj( obj, 'sak.script:3371') end
            obj = g_sim:story_object( story_ids.bar_ecolog_crush_3 )
            if obj then misc.release_obj( obj, 'sak.script:3373') end
            obj = g_sim:story_object( story_ids.bar_ecolog_crush_2 )
            if obj then misc.release_obj( obj, 'sak.script:3375') end
        end
        -------------------------------------------------------
        local obj_t   = amk_vars.sak_teleport or 0
        local obj_vis = amk_vars.sak_teleport_vis or 0
        if obj_t ~= 0 and obj_vis ~= 0 then
            misc.release_obj( tonumber( obj_t ), 'sak.script:3380')
            misc.release_obj( tonumber( obj_vis ), 'sak.script:3380')
        end
        loks_count()
        -- для статистики:
        xr_statistic.add_pts( "stalkerkills", game.translate_string( "st_pda_lc_used" ), 1, 0 )
        amk_vars.sak_teleport     = nil
        amk_vars.sak_teleport_vis = nil
        sak_off_corpses.off_corpses( true )
        -------------------------------------------------------
        if
            actor:has_info( "bar_deactivate_radar_done" )
            and actor:has_info( "klyk_out" )
            and not actor:has_info( "klyk_saved_info" )
        then
            add_klyk_body()
        end
        -------------------------------------------------------
        if not actor:has_info( "marsh_leader_found_corps" ) and actor:has_info( "mar_leader_job_done" ) then
            actor:give_info_portion( "marsh_leader_found_corps" )
        end
        if actor:has_info( "trup_sanek_to_charch_end" ) and not actor:has_info( "sanek2_out" ) then
            actor:give_info_portion( "sanek2_out" )
            obj = g_sim:story_object( story_ids.trup_sanek2 )
            if obj then misc.release_obj( obj, 'sak.script:3395') end
            add_sanek_tomb()
        end
        -------------------------------------------------------
        if lname == "l04u_labx18" then
            if not actor:has_info( "dar_run_quest" ) then
                actor:give_info_portion( "dar_run_quest" )
                x_spawn_actions.x18_dor_open_spawn()
            end
        end
        -------------------------------------------------------
        if lname == "l08u_brainlab" and not actor:has_info( "yan_find_laboratory_end" ) then
            actor:give_info_portion( "yan_find_laboratory_end" )
            actor:give_info_portion( "yantar_vasilyev_info" )
        end
        -------------------------------------------------------
        if lname ~= "l10u_bunker" and sname ~= "l10u_bunker" then
            actor:give_info_portion( "bun_lamp_1_off" )
        end
        -------------------------------------------------------
        if lname ~= "l04u_labx18" and sname ~= "l04u_labx18" then
            for a = 1, 9 do
                actor:give_info_portion( "labx18_lamp_"..a.."_off" )
            end
        end
        -------------------------------------------------------
        if lname ~= "l08u_brainlab" and sname ~= "l08u_brainlab" then
            for a = 1, 9 do
                actor:give_info_portion( "labx16_lamp_"..a.."_off" )
            end
        end
        -------------------------------------------------------
        if lname ~= "labx8" and sname ~= "labx8" then
            for a = 1, 4 do
                actor:give_info_portion( "labx8_lamp_"..a.."_off" )
            end
        end
        -------------------------------------------------------
        if lname ~= "labx10" and sname ~= "labx10" then
            for a = 1, 13 do
                actor:give_info_portion( "labx10_lamp_"..a.."_off" )
            end
            for a = 15, 25 do
                actor:give_info_portion( "labx10_lamp_"..a.."_off" )
            end
            actor:give_info_portion( "labx10_lamp_14_on" )
            actor:disable_info_portion( "x10_switch_on_rats" )
        end
        -------------------------------------------------------
        if actor:has_info( "art_exchanger_umer" ) and not actor:has_info( "art_exchanger_out" ) then
            actor:give_info_portion( "art_exchanger_out" )
        end
        -------------------------------------------------------
        if actor:has_info( "esc_vlad_new_gg" ) and not actor:has_info( "vlad_oksana_out" ) then
            actor:give_info_portion( "vlad_oksana_out" )
        end
        -------------------------------------------------------
        if
            lname ~= "l06_rostok" and lname ~= "l08_yantar"
            and actor:has_info( "kruglov_is_fly" ) and not actor:has_info( "sak_ros_merk_out" )
        then
            actor:give_info_portion( "sak_ros_merk_out" )
            vokodav_vis_new()
        end
        -------------------------------------------------------
        if
            sname == "l03_agroprom" and lname == "l03u_agr_underground"
            and not actor:has_info( "agr_find_rygyi_done" )
        then
            actor:give_info_portion( "agr_find_rygyi_done" )
            local obj = g_sim:story_object( story_ids.rygyi )
            if obj then
                if obj:alive() then
                    local pk        = get_netpk( obj )
                    local data      = pk:get()
                    data.health     = 1
                    data.upd.health = 1
                    pk:set( data )
                    local sobj      = alife():object( obj.id )
                    sobj.wounded    = false
                    actor:give_info_portion( "self_medkit_rygyi_done" )
                else
                    misc.release_by_name( "rygyi" )
                    actor:give_info_portion( "rygyi_umer" )
                end
            end
            misc.release_by_name( "esc_tips_fox" )
        end
        -------------------------------------------------------
        if
            sname == "l03u_agr_underground" and lname == "l03_agroprom"
            and not actor:has_info( "kat_soldier_end" )
            and actor:has_info( "agr_find_gunslinger_cache_found" )
        then
            misc.release_by_name( "kat_soldier_trigger1" )
            misc.release_by_name( "kat_soldier_trigger2" )
            misc.release_by_name( "kat_soldier_trigger3" )
            --misc.release_by_name( "agr_u_soldiers" )
            misc.release_by_name( "kat_soldier_0000" )
            misc.release_by_name( "kat_soldier_0001" )
            misc.release_by_name( "kat_soldier_0002" )
            misc.release_by_name( "kat_soldier_0006" )
            misc.release_by_name( "kat_soldier_0007" )
            misc.release_by_name( "kat_soldier_0008" )
            misc.release_by_name( "kat_soldier_0009" )
            misc.release_by_name( "kat_soldier_0010" )
            misc.release_by_name( "kat_soldier_0011" )
            misc.release_by_name( "kat_soldier_0012" )
            misc.release_by_name( "kat_soldier_0013" )
            misc.release_by_name( "kat_soldier_0014" )
            actor:give_info_portion( "kat_soldier_end" )
        end
        -------------------------------------------------------
        if sname == "marsh" then
            if
                actor:has_info( "oksana_go_to_kordon_end" )
                and not actor:has_info( "oksana_umer" )
                and not actor:has_info( "oksana_kordon_out" )
            then
                actor:give_info_portion( "oksana_kordon_out" )
            end
            if
                actor:has_info( "info_way181b" ) and actor:has_info( "info_way178a" )
                and not actor:has_info( "mar_stepanych_umer" )
                and not actor:has_info( "mar_stepanych_out" )
            then
                actor:give_info_portion( "mar_stepanych_out" )
            end
            if
                actor:has_info( "marsh_botan_new_gg" )
                and not actor:has_info( "marsh_botan_to_gigant_end" )
            then
                actor:give_info_portion( "marsh_botan_to_gigant_end" )
                provodnik_body_full_out()
            end
        end
        -------------------------------------------------------
        if
            lname ~= "labx8" and lname ~= "l10_radar"
            and sname ~= "labx8" and sname ~= "l10_radar"
            and lname ~= "warlab" and sname ~= "warlab"
            and actor:has_info( "deactivate_radar_fall" )
            and not actor:has_info( "bar_deactivate_radar_done" )
        then
            actor:give_info_portion( "bar_deactivate_radar_done" )
            add_gar_sign_stop()
        end
        -------------------------------------------------------
        if lname == "k01_darkscape" and has_alife_info( "dsk_sanek_new_gg" ) then
            if has_alife_info( "time_night" ) then
                obj = g_sim:story_object( story_ids.dsk_sanek )
                if not obj then misc.spawn_by_name( "dsk_sanek" ) end
            else
                misc.release_by_name( "dsk_sanek" )
            end
        end
        -------------------------------------------------------
        if
            actor:has_info( "esc_petruha_toz_done" )
            and not actor:has_info( "lost_vil_stalker_dom_go" )
        then
            actor:give_info_portion( "lost_vil_stalker_dom_go" )
        end
        -------------------------------------------------------
        if lname == "generators" and gen_teleport == 0 then
            spawn_teleports(
                v3f( -20.4, 34.8, -223.8 ), 311873, 3106, 5, 20,
                "amk_zone_teleport_labirint", 20
            )
            actor:give_info_portion( "tesla_in" )
        end
        -------------------------------------------------------
        if lname == "aver" and aver_teleport == 0 then
            spawn_teleports(
                v3f( 350.91, -6.01, -21.23 ), 1492916, 2902, 5, 30,
                "amk_zone_teleport_aver_labirint", 40
            )
        end
        -------------------------------------------------------
        if lname == "l11_pripyat" and prip_teleport == 0 then
            spawn_teleports(
                v3f( 29.7, 1.8, 355.8 ), 139177, 2260, 5, 30,
                "amk_zone_teleport_prip_labirint", 40
            )
        end
        -------------------------------------------------------
        if
            lname ~= "l01_escape"
            and actor:has_info( "gar_dm_bandits_done" )
            and actor:has_info( "info_way178a" )
        then
            actor:give_info_portion( "ivan_go_limansk" )
        end
        -------------------------------------------------------
        if
            lname ~= "l03_agroprom"
            and actor:has_info( "ratcatcher_order_done" )
            and not actor:has_info( "ratcatcher_out" )
        then
            actor:give_info_portion( "ratcatcher_out" )
            obj = g_sim:story_object( story_ids.agr_ratcatcher )
            if obj then misc.release_obj( obj, 'sak.script:3471') end
        end
        -------------------------------------------------------
        if
            lname ~= "l05_bar" and actor:has_info( "info_way_false" )
            and not actor:has_info( "informer_out" )
        then
            actor:give_info_portion( "informer_out" )
            obj = g_sim:story_object( story_ids.bar_bar_osvedomitel )
            if obj then misc.release_obj( obj, 'sak.script:3474') end
        end
        -------------------------------------------------------
        if lname ~= "l02_garbage" and actor:has_info( "gar_stalker_info2" ) then
            obj = g_sim:story_object( story_ids.gar_stalker )
            if obj then misc.release_obj( obj, 'sak.script:3477') end
        end
        -------------------------------------------------------
        if lname ~= "l01_escape" and actor:has_info( "gar_flame_done" ) then
            obj = g_sim:story_object( story_ids.leshyi )
            if obj then misc.release_obj ( obj, 'sak.script:3480') end
        end
        -------------------------------------------------------
        if lname == "l01_escape" then
            if
                actor:has_info( "tutorial_end" )
                and not actor:has_info( "tutorial_wounded_give_info" )
            then
                esc_shustryi_stalker()
                actor:give_info_portion( "tutorial_wounded_give_info" )
                actor:give_info_portion( "esc_shustryi_outfit_start" )
            end
            if sname == "l02_garbage" and not actor:has_info( "esc_serious_talk" ) then
                esc_trader_start_quest()
            end
        end
        -------------------------------------------------------
        if lname ~= "l01_escape" then actor:give_info_portion( "esc_lamp_1_off" ) end
        -------------------------------------------------------
        if lname ~= "l02_garbage" and actor:has_info( "borov_31_have" ) then
            obj = g_sim:story_object( 9495 ) -- story_object( 9495 )
            if obj then misc.release_obj ( obj, 'sak.script:3488') end
        end
        -------------------------------------------------------
        if
            lname ~= "l04_darkvalley"
            and actor:has_info( "val_escort_scene_add_end" )
            and not actor:has_info( "val_escort_scene_end" )
        then
            actor:give_info_portion( "val_escort_scene_end" )
            obj = g_sim:story_object( story_ids.val_escort_guard1 )
            if obj then misc.release_obj ( obj, 'sak.script:3491') end
            obj = g_sim:story_object( story_ids.val_escort_guard3 )
            if obj then misc.release_obj ( obj, 'sak.script:3493') end
            obj = g_sim:story_object( story_ids.val_escort_guard2 )
            if obj then misc.release_obj ( obj, 'sak.script:3495') end
        end
        -------------------------------------------------------
        if
            lname ~= "l07_military" and actor:has_info( "personal_things_max" )
            and not actor:has_info( "personal_things_skryaga_no" )
        then
            actor:give_info_portion( "personal_things_skryaga_no" )
        end
        -------------------------------------------------------
        if
            lname ~= "l07_military" and actor:has_info( "mil_Svoboda_trader_plan_done" )
            and not actor:has_info( "mil_Svoboda_trader_plan_done_ok" )
        then
            actor:give_info_portion( "mil_Svoboda_trader_plan_done_ok" )
        end
        -------------------------------------------------------
        if lname ~= "l07_military" and actor:has_info( "mil_zoneguard_test2_passed" ) then
            actor:disable_info_portion( "mil_zoneguard_test2_passed" )
        end
        -------------------------------------------------------
        if
            lname ~= "l07_military"
            and ( actor:has_info( "mil_freedom_under_attack" )
            or actor:has_info( "mil_lukash_dolg_task_complete" ) )
        then
            mil_mines_add()
        end
        -------------------------------------------------------
        if
            lname == "l05_bar"
            and ( actor:has_info( "burer_hos_dead" )
            or actor:has_info( "burer_hos_off" ) )
            and not actor:has_info( "add_hos_junkman" )
        then
            actor:give_info_portion( "add_hos_junkman" )
        end
        -------------------------------------------------------
        if
            lname == "l02_garbage" and actor:has_info( "hellcar_raid_start" )
            and not actor:has_info( "gar_hellcar_thanks" )
            and not actor:has_info( "gar_open_fire" )
        then
            actor:give_info_portion( "gar_bandits_raid" )
            actor:give_info_portion( "gar_open_fire" )
            obj = g_sim:story_object( story_ids.gar_hellcar )
            if obj and obj:alive() and obj.online then
                obj = client_obj( obj.id )
                obj:kill( obj )
            end
        end
        -------------------------------------------------------
        if
            lname ~= "l06_rostok"
            and actor:has_info( "ivancov_val_business_done" )
            and not actor:has_info( "actor_has_fraer" )
        then
            actor:give_info_portion( "actor_has_fraer" )
        end
        -------------------------------------------------------
        if
            lname == "l06_rostok"
            and actor:has_info( "yan_kill_brain_done" )
            and not actor:has_info( "assistant_out" )
        then
            actor:give_info_portion( "assistant_out" )
            misc.release_by_name( "yan_helicopter_1" )
            misc.release_by_name( "yan_helicopter_2" )
        end
        -------------------------------------------------------
        if lname == "red_forest" then
            if sname == "limansk" and actor:has_info( "red_scaut_pass_on" ) then
                red_community()
                actor:disable_info_portion( "red_lim_pass_on" )
            else
                actor:give_info_portion( "red_lim_pass_on" )
                off_red_mines()
            end
            local day  = timers.Get_Game_Days()+1
            local rand = ( amk_vars.r_treas_items or 1 ) + 6
            if math.fmod( day, rand ) ~= 0 then
                obj = g_sim:story_object( story_ids.red_forest_lesnik )
                if not obj then misc.spawn_by_name( "red_forest_lesnik" ) end
            else
                misc.release_by_name( "red_forest_lesnik" )
            end
        end
        -------------------------------------------------------
        if lname == "l05_bar" then
            if not actor:has_info( "bar_seif_prot_out" ) then
                obj = level_object_by_sid( 31 )
                grabb_bar_seif( obj:id(), actor )
            end
            local day  = timers.Get_Game_Days() + 1
            local rand = ( amk_vars.r_treas_items or 1 ) + 4
            if math.fmod( day, rand ) ~= 0 then
                obj = g_sim:story_object( story_ids.bar_bar_osvedomitel )
                if not obj then misc.spawn_by_name( "bar_bar_osvedomitel" ) end
            else
                if
                    actor:has_info( "bar_x18_documents_know" )
                    and not actor:has_info( "deactivate_radar_fall" )
                then
                    misc.release_by_name( "bar_bar_osvedomitel" )
                end
            end
        end
        -------------------------------------------------------
        obj = level_object_by_sid( lev_prot[ lname ] )
        if obj then grabb_seif( obj:id(), lname ) end
    end
---------------------------  конец обработки левел ченджера? ---------------------------------
    if lname == "aver" then
        level.set_time_factor( system_ini():r_float( "alife", "time_factor" ) * 5 )
        t_s_1 = 45150
    elseif const.ground_levels[ lname ] then
        level.set_time_factor( system_ini():r_float( "alife", "time_factor" ) )
        t_s_1 = math.floor( 600000 - ( level_difficulty[ lname ]^2 * 160000 ) )
    else
        level.set_time_factor( system_ini():r_float( "alife", "time_factor" ) )
        t_s_1 = 160000
    end
    local hour = level.get_time_hours()
    params.hit_probability_add( level_difficulty[ lname ] * time_difficulty[ hour ] )
    sak_off_corpses.off_corpses()
    razgruzka.end_use_info()
    sak.reset_actor_bio()
    wprintf( '~CF0[~T/~U/~B]. #PERF: sak.add_tail end~C07' )
end

function sak.actor_bio() params.tiredness_add( 0 ) end

function sak.reset_actor_bio()
    params.health_v_add( 1, level_difficulty[ level.name() ] ) -- восстановление здоровья во время бодрствования
    params.satiety_v_add( 1, 1 )  -- нарастание голода по умолчанию
    actor_bio()
end

function grabb_seif( obj_id, lname )
    have_many = 0
    local ids, cnt = registry.inv_objects( obj_id, true )
    for n = 1, cnt do
        local id   = ids[ n ]
        local sobj = client_obj( id )
        if sobj then
            local nname = sobj:section()
            if
                (
                            strpos ( nname, "af_", 1, true    )
                    and not strposx( nname, "af_full_akkum"   )
                    and not strposx( nname, black_tip.section )
                )
                or ( strposx( nname, "arc_art_box_" ) )
            then
                add_price_arts( sobj )
            end
        end
    end
    log2( "@-------------------------------------  TOTAL STASH COST ON THIS LVL:   %s", have_many )
    if ( have_many > 1250000 ) and not db.actor:has_info( lname .. "_prot_out" ) then
        db.actor:give_info_portion( lname .. "_prot_out" )
        for n = 1, cnt do
            local id   = ids[ n ]
            local sobj = client_obj( id )
            if lname == "l01_escape" then
                misc.release_obj( id, 'sak.script:3555')
                local obj2 = g_sim:story_object( story_ids.esc_sid_guard )
                if obj2 then misc.release_obj( obj2, 'sak.script:3557') end
                db.actor:give_info_portion( "esc_sid_guard_umer" )
            else
                local nname = sobj:section()
                if
                    str_in_tab( nname, {
                        "af_", "_m", "monster", "bearer_cheque", "arc_art_box_"
                    })
                then
                    misc.release_obj( id, 'sak.script:3562' )
                end
            end
        end
    end
end

function grabb_bar_seif ( obj_id, actor )
    have_many = 0
    local ids, cnt = registry.inv_objects( obj_id, true )
    for n = 1, cnt do
        local id   = ids[ n ]
        local sobj = client_obj( id )
        if sobj then
            local nname = sobj:section()
            if strpos( nname, "af_", 1, true ) or strpos( nname, "arc_art_box_", 1, true ) then
                add_price_arts( sobj )
            end
        end
    end
    if
        ( have_many > 300000 or actor:has_info( "deactivate_radar_fall" ) )
        and not actor:has_info( "bar_seif_prot_out" )
    then
        actor:give_info_portion( "bar_seif_prot_out" )
        local name, sname = amk_names_lists.get_strings()
        send_tip(
            "Слыхали? Сталкера в баре отключили! Спит сутки без просыпу!",
            name.." "..sname, 20, 15, "uniq", "news", "gray"
        )
        for n = 1, cnt do
            local id   = ids[ n ]
            local sobj = client_obj( id )
            misc.release_obj( id, 'sak.script:3588')
        end
    end
end

function voronin_seif_out()
    local obj      = level_object_by_sid( 9142 )
    local ids, cnt = registry.inv_objects( obj:id(), true )
    for n = 1, cnt do
        local id   = ids[ n ]
        local sobj = client_obj( id )
        misc.release_obj( id, 'sak.script:3599')
    end
end
-- наполнение хабаром НПС???
function habar_by_nps( lid )
    local npc = client_obj( lid )
    local tbl_stuff = { 
            "batt_torch",
            "drag_cat_eyes",
            "matches",
            "ammo_9x19_pbp",
            "ammo_7.62x39_fmj",
            "ammo_9x39_pab9",
            "ammo_11.43x23_fmj",
            "ammo_11.43x23_hydro"
    }
    if not npc then return end
    local ids, cnt = registry.inv_objects( npc:id(), true )
    for n = 1, cnt do
        local id   = ids[ n ]
        local cobj = client_obj( id )
        if cobj then
            local sect = cobj:section()
            if
                   is_food( cobj ) == true
                or is_arts( cobj ) == true
                or str_in_tab( sect, tbl_stuff )
                or str_in_tab( sect, { "arc_art_box_", "wpn_addon_grenade_launcher" })
            then
                misc.release_obj( id )
            end
        end
    end
    -- собственно спавн жратвы и порча её
    for k, v in pairs( table_food ) do
        if
        	lua_random() < 0.09
        	and not str_in_tab( k, { "energy_drink", "conserva" } )
        then
            local obj = misc.spawn_to( k, npc )
            if str_in_tab( k, { "bread", "kolbasa" } ) then
                misc.process_spawn()
                local rand = lua_random( 30, 90 ) / 100
                params.upd_condition( obj, rand )
            end
        end
    end
    -- спавн всякой полезной мелочи
    if npc:rank() > 500 then
        for _, v in ipairs( tbl_stuff ) do
            if lua_random() < 0.03 then
                misc.spawn_to( v, npc )
                misc.process_spawn()
                break
            end
        end
    end
end

function is_food( item )
    local section = item:section()
    if table_food[ section ] then return true
    else return false
    end
end

function is_arts( item )
    local section = string.sub( item:section(), 1, -7 )
    if table_aart[ section ] then return true
    else return false
    end
end

function spawn_red_mines()
    local obj = g_sim:story_object( 525 ) -- story_object( 525 )
    if obj then return end
    for n = 1, 4, 1 do
        misc.spawn_by_name( "red_zone_mine_field_" .. n )
    end
end

function off_red_mines()
    local obj = g_sim:story_object( 525 ) -- story_object( 525 )
    if not obj then return end
    for n = 524, 527 do
        local obj = g_sim:story_object( n )
        if obj then
            misc.release_obj( obj, 'sak.script:3628')
        else
            wprintf( "[~T].~C0C #WARN( off_red_mines ):~C07 not found story-object~C0D %d~C07 ", n )
        end
    end
end

function kirpich_kick_gg() end
function rem_loks()end

function loks_count()
    local n_count = nlc_vars.mik_count or 0
    if n_count >= 10 and lua_random()>0.5 then
        local t = lua_random( 1, 3 )
        schedule.add( "chat_content", "news_mikelik.chat_content()", 10000*t )
        n_count = 0
    else
        n_count = n_count+1
    end
    nlc_vars.mik_count = n_count
    local r_count = nlc_vars.rem_count or 0
    if r_count > 8 then return end
    local count = nlc_vars.loks_count or 0
    if count >= 7 + r_count * 10 then
        if lua_random() > 0.5 then
            local t = lua_random( 1, 3 )
            schedule.add( "remer_loks", "sak.add_rem_infos()", 10000*t )
            count = 0
        end
    else
        count = count+1
    end
    nlc_vars.loks_count = count
end

function add_rem_infos()
    local count = nlc_vars.rem_count or 0
    if count > 8 then return end
    send_tip(
        "Что-то мелькнуло в голове... Вспомнилось или так, показалось...\\nНадо бы записать, а то вдруг опять забудется.",
        "Воспоминание", 2, 20, "g_g", "rememb", "yellow"
    )
    nlc_vars.rem_count = count + 1
    local character    = math.floor( ( ( amk_vars.r_task_reward or 1 ) + ( amk_vars.x18_iq_check or 1 ) ) / 2 )
    local info         = "rem_" .. tostring( character ) .. "_" .. tostring( count )
    db.actor:give_info_portion( info )
end

function gg_bandit() db.actor:set_character_community( "bandit", 0, 0 ) end

function timer_lager_attack()
    timers.start_timer( "mil_attack", 0, 12, 33, "sak.escape_lager_attack()" )
end
function escape_lager_attack()
    db.actor:give_info_portion( "escape_lager_spawn_killers" )
    db.actor:give_info_portion( "escape_lager_failed" )
end

function mil_dolg_attacking()
    local actor = db.actor
    if actor:has_info( "ivancov_return_cherep_have" ) then return end
    actor:give_info_portion( "mil_dolg_skull_time" )
    actor:give_info_portion( "mil_dolg_auto_attack" )
    if level.name() ~= "l07_military" then
        local obj = g_sim:story_object( story_ids.mil_freedom_stalker0004 ) -- Mil_Sniper
        if obj then
            local pk        = get_netpk( obj )
            local data      = pk:get()
            data.health     = 0
            data.upd.health = 0
            pk:set( data )
        end
    else
        local obj = level_object_by_sid( 704 )
        if obj and obj:alive() then obj:kill( obj ) end
    end
end

function mil_mines_add()
    local objt = g_sim:story_object( story_ids.mil_zabor )
    if objt then
        misc.release_obj( objt, 'sak.script:3661' )
        objt = g_sim:story_object( story_ids.mil_zabor_0000 )
        if objt then misc.release_obj( objt, 'sak.script:3664' ) end
        for n = 1, 22, 1 do misc.spawn_by_name( "mil_new_mine_" .. n ) end
    end
    local ids, cnt = registry.clsid_objects( CLID_STALKER, CLID_STALKER, true, nil, 15 )
    for n = 1, cnt do
        local id  = ids[ n ]
        local obj = g_sim:object( id )
        if obj and not obj:alive() and strpos( obj:name(), "mil_", 1, true ) then
            misc.release_obj ( obj, 'sak.script:3675')
        end
    end
end

function rad_zomb_off()
    local ids, cnt = registry.clsid_objects( CLID_STALKER, CLID_STALKER, true, nil, 15 )
    for n = 1, cnt do
        local id  = ids[ n ]
        local obj = g_sim:object( id )
        if not obj:alive() and strpos( obj:profile_name(), "rad_zombied", 1, true ) then
            misc.release_obj ( obj, 'sak.script:3687' )
        end
    end
end

function add_gar_sign_stop()
    local objt = g_sim:story_object( story_ids.gar_sign_stop_blokpost )
    if not objt then misc.spawn_by_name( "gar_sign_stop_blokpost" ) end
    local obj = g_sim:story_object( story_ids.rad_half_dead_scientist )
    if obj then
        local pk         = get_netpk( obj )
        local data       = pk:get()
        data.custom_data = "[dont_spawn_character_supplies]"
        data.health      = 0
        data.upd.health  = 0
        pk:set( data )
    end
    misc.spawn_by_name( "val_stena_podval" )
end

function turn_off_sid_lamp()
    local actor = db.actor
    local lamp_sid
    local lamp_2 = { 51, 52, 53 }
    if actor:has_info( "esc_lamp_1_off" ) then turn_off_lamp( 13 ) end
    if actor:has_info( "esc_lamp_2_off" ) then
        for a = 1, #lamp_2 do
            lamp_sid = ( lamp_2[ a ] )
            turn_off_lamp( lamp_sid )
        end
    end
end

function turn_off_x16_lamp()
    local actor = db.actor
    local lamp_sid
    local lamp = {
        { 5330, 5331, 5332, 5346, 5347, 5348 },
        { 5335, 5326, 5327, 5378 },
        { 5336, 5337, 5328 },
        { 5338, 5339, 5329 },
        { 5360, 5361, 5362, 5344, 5377 },
        { 5363, 5364, 5365, 5366, 5367, 5368, 5369 },
        { 5333, 5334, 5349, 5350, 5351, 5352, 5353 },
        { 5370, 5371, 5372, 5373, 5374, 5375 }
    }
    for a = 1, #lamp do
        if actor:has_info( "labx16_lamp_" .. a .. "_off" ) then
            for i = 1, #lamp[ a ] do
                lamp_sid = ( lamp[ a ][ i ] )
                turn_off_lamp( lamp_sid )
            end
        end
    end
end

function turn_off_x18_lamp()
    local actor = db.actor
    local lamp_sid
    local lamp = {
        { 5172, 5173, 5174, 5179 },
        { 5120, 5121, 5180, 5184 },
        { 5122, 5123, 5124, 5125, 5126, 5175, 5176, 5177, 5178, 5182, 5183 },
        { 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155 },
        { 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5143, 5144, 5145 },
        { 5139, 5140, 5141, 5142, 5146, 5147 },
        { 5147 },
        { 5127, 5128, 5129, 5130, 5131, 5156, 5157, 5158 },
        { 5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171 }
    }
    for a = 1, #lamp do
        if actor:has_info( "labx18_lamp_" .. a .. "_off" ) then
            for i = 1, #lamp[ a ] do
                lamp_sid = ( lamp[ a ][ i ] )
                turn_off_lamp( lamp_sid )
            end
        end
    end
end

function turn_off_x8_lamp()
    local actor = db.actor
    local lamp_sid
    local lamp = {
        { 6123, 6115, 6136, 6137 },
        { 6111, 6114, 6116, 6117, 6118, 6119, 6120, 6141 },
        { 6121, 6122, 6124, 6128, 6129, 6130 },
        { 6132, 6133, 6134, 6135, 6138, 6139, 6140, 6125, 6126, 6127 }
    }
    for a = 1, #lamp do
        if actor:has_info( "labx8_lamp_" .. a .. "_off" ) then
            for i = 1, #lamp[ a ] do
                lamp_sid = ( lamp[ a ][ i ] )
                turn_off_lamp( lamp_sid )
            end
        end
    end
end

function turn_off_bun_lamp()
    local actor = db.actor
    local lamp_sid
    if actor:has_info( "bun_lamp_1_off" ) then
        for a = 1, 58 do
            lamp_sid = 3101 + a
            turn_off_lamp( lamp_sid )
        end
    end
end

function turn_off_radar_lamp()
    local actor = db.actor
    if not actor:has_info( "radar_pribor1_on" ) then turn_off_lamp( 6152 ) end
    if not actor:has_info( "radar_pribor2_on" ) then turn_off_lamp( 6153 ) end
    if not actor:has_info( "radar_pribor3_on" ) then turn_off_lamp( 6154 ) end
end

function turn_off_lab8_lamp()
    local actor = db.actor
    if not actor:has_info( "lab8_pribor1_on" ) then turn_off_lamp( 8156 ) end
    if not actor:has_info( "lab8_pribor2_on" ) then turn_off_lamp( 8157 ) end
    if not actor:has_info( "lab8_pribor3_on" ) then turn_off_lamp( 8158 ) end
    if not actor:has_info( "lab8_pribor4_on" ) then turn_off_lamp( 8159 ) end
    if not actor:has_info( "lab8_pribor5_on" ) then turn_off_lamp( 8160 ) end
end

function turn_off_x10_lamp()
    local actor = db.actor
    local lamp_sid
    local lamp = {
        { 4258, 4259, 4276, 4277 },
        { 4260 },
        { 4261 },
        { 4262, 4263, 4253, 4254, 4255, 4256, 4257 },
        { 4270, 4271 },
        { 4250 },
        { 4251 },
        { 4252 },
        { 4249 },
        { 4248 },
        { 4247 },
        { 4285, 4264, 4265, 4266, 4267, 4268, 4269, 4272, 4273, 4274 },
        { 4278, 4279, 4280, 4281, 4282, 4283, 4284 },
        { 4301 },
        { 4217, 4219, 4218, 4231, 4216 },
        { 4213, 4214, 4215, 4212 },
        { 4240, 4211, 4241, 4210 },
        { 4232, 4233, 4234, 4235, 4209 },
        { 4223, 4224, 4222, 4242, 4201 },
        { 4237, 4236, 4221, 4203 },
        { 4204, 4229, 4230, 4206, 4207, 4208, 4225, 4227, 4243, 4228 },
        { 4239, 4238 }
    }
    for a = 1, #lamp do
        if actor:has_info( "labx10_lamp_" .. a .. "_off" ) and a ~= 14 then
            for i = 1, #lamp[ a ] do
                lamp_sid = ( lamp[ a ][ i ] )
                turn_off_lamp( lamp_sid )
            end
        end
    end
end

function turn_off_mon_lamp()
    local actor = db.actor
    local lamp_sid
    if actor:has_info( "mon_lamp_1_off" ) then
        for a = 1, 41 do
            lamp_sid = 3009 + a
            turn_off_lamp( lamp_sid )
        end
    end
end

function turn_off_lamp( l_sid )
    local obj = level_object_by_sid( l_sid )
    if obj then obj:get_hanging_lamp():turn_off() end
end

function monolit_zone()
    local snd_obj1 = xr_sound.get_safe_sound_object([[affects\\psy_blackout_l]])
    local snd_obj2 = xr_sound.get_safe_sound_object([[affects\\psy_blackout_r]])
    snd_obj1:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
    snd_obj2:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
end

function volkodav_ok_rad()
    if db.actor:has_info( "rad_tramplin_glavn_new_gg" ) then return false end
    local time_h = level.get_time_hours()
    return time_h == 8 or time_h == 9
end

function take_vodka() misc.spawn_to( "vodka", db.actor ) end

local detectors = {
    "detector_simple",
    "detector_advances",
    "detector_elite",
    "detector_elite_sak",
    "detector_sakbuzz_simple",
    "detector_sakbuzz_elite",
    "detector_sakbuzz_sak"
}

function detectors_fake( flag )
    local npc     = db.actor
    local act_pos = db.actor:position()
    local lname   = level.name()
    local sname   = ( amk_vars.level_on_save or "" )

    if     lname == "l04u_labx18"           then turn_off_x18_lamp()
    elseif lname == "l08u_brainlab"         then turn_off_x16_lamp()
    elseif lname == "labx8"                 then turn_off_x8_lamp()   turn_off_lab8_lamp()
    elseif lname == "l10_radar"             then turn_off_radar_lamp()
    elseif lname == "l01_escape"            then turn_off_sid_lamp()
    elseif lname == "l10u_bunker"           then turn_off_bun_lamp()
    elseif lname == "labx10"                then turn_off_x10_lamp()
    elseif lname == "l12u_control_monolith" then turn_off_mon_lamp()
    end

    local r_task_rew, r_treasur = ( amk_vars.r_task_reward or 1 ), ( amk_vars.r_treas_items or 1 )
    local g_dif = ( amk_vars.g_diff or tonumber( level.get_game_difficulty() ) )
    WriteIni( db.stor_ltx, "stor", "r_task_reward", r_task_rew )
    WriteIni( db.stor_ltx, "stor", "r_treas_items", r_treasur  )
    get_command( "g_game_difficulty "..game_difficulty_by_num[ g_dif ] )
    ---------------------- обработка левел ченджера ---------------------------
    if lname ~= sname and sname ~= "" then
        if
            sname == "marsh" and lname == "l03_agroprom"
            and npc:has_info( "mar_leader_job_folls" )
            and not npc:has_info( "agr_mil_job_go" )
        then
            agr_mil_teleport()
        end
        -- добавлено mike для info - первое посещение Радара
        if lname == "l10_radar" and not npc:has_info( "info_way306a" ) then
            mike.add_spots_mil_rad()
        end
        -- добавлено mike для спавна мерков
        if
            lname == "l07_military"
            and npc:has_info( "lim_zub_last_info" )
            and not npc:has_info( "gross_merc_spawned" )
        then
            mike.spawn_gross_merc()
            npc:give_info_portion( "gross_merc_spawned" )
        end
        if
            lname == "l10_radar"
            and npc:has_info( "mercs_call" )
            and not npc:has_info( "rad_mercs_spawned" )
        then
            mike.spawn_radar_mercs()
            npc:give_info_portion( "rad_mercs_spawned" )
        end
        if
            lname == "l10_radar"
            and npc:has_info( "have_tools" )
            and not npc:has_info( "after_x12_spawned" )
        then
            mike.spawn_after_x12()
            npc:give_info_portion( "after_x12_spawned" )
        end
        if
            lname == "l10u_bunker"
            and npc:has_info( "mercs_gun_1_info" )
            and not npc:has_info( "x12_mercs_spawned" )
            and not npc:has_info( "mil_mercs_fire" )
        then
            mike.spawn_x12_mercs()
            npc:give_info_portion( "x12_mercs_spawned" )
        end
        -- добавлено mike для Матвеева
        if
            lname == "l05_bar"
            and npc:has_info( "assistant_go_to_mil" )
            and not npc:has_info( "assistant_bar" )
            and not npc:has_info( "assistant2_umer" )
        then
            npc:give_info_portion( "assistant_bar" )
            misc.release_by_name( "assistant2" )
        end
        -- добавлено mike для исправления вкл. насоса
        if lname == "labx8" and npc:has_info( "x12_pump_info3" ) then
            npc:give_info_portion( "x12_pump_off" )
        end
        if lname == "warlab" and npc:has_info( "x12_pump_info3" ) then
            npc:give_info_portion( "x12_pump_off" )
        end
        ------------------ TODO: выпилить к богине-матери это "поддержание штанов" ----------------
        -- добавлено mike для спавна в саркофаге
        if lname == "l12u_sarcofag" then mike.spawn_in_sarcofag() end
        -- добавлено mike для спавна в х12
        if lname == "l10u_bunker" and not npc:has_info( "x12_gift_info" ) then
            mike.spawn_in_x12()
            npc:give_info_portion( "x12_gift_info" )
        end
        -- добавлено mike для спавна в Тесле
        if lname == "generators" and not npc:has_info( "tesla_gift_info" ) then
            test.spawn_jolly_roger( lname )
            npc:give_info_portion( "tesla_gift_info" )
        end
        -- добавлено mike для спавна в райцентре
        if lname == "deadcity" and not npc:has_info( "deadcity_gift_info" ) then
            test.spawn_jolly_roger( lname )
            npc:give_info_portion( "deadcity_gift_info" )
        end
        -- добавлено mike для спавна маятника в ТЧ или Припяти
        if
            lname == "aver"
            and npc:has_info( "mayatnik_aver_ready_info" )
            and not npc:has_info( "mayatnik_aver_info" )
        then
            mike.add_mayatnik_aver()
            npc:give_info_portion( "mayatnik_aver_info" )
        end
        if
            lname == "l11_pripyat"
            and npc:has_info( "mayatnik_prip_ready_info" )
            and not npc:has_info( "mayatnik_prip_info" )
        then
            mike.add_mayatnik_prip()
            npc:give_info_portion( "mayatnik_prip_info" )
        end
        if
            lname == "generators"
            and npc:has_info( "petrenko_tesla_job_info" )
            and not npc:has_info( "petrenko_tesla_job_done" )
        then
            db.actor:give_info_portion( "akk_is_ready" )
        end
        -- добавлено mike для спавна в Припяти
        if lname == "l11_pripyat" then
            g_sim:create( "amk_zone_sphere", vector():set( 29.7, 10, 355.8 ), 139177, 2260 )
        end
        -- добавлено mike для задания Воронина
        if
            lname == "l08_yantar"
            and npc:has_info( "voronin_killzombi_start" )
            and not npc:has_info( "voronin_killzombi_info" )
        then
            npc:give_info_portion( "voronin_killzombi_info" )
        end
        -- убираем Искателя и его друга с Теслы
        if
            lname ~= "generators"
            and npc:has_info( "gen_iskatel_akkum_info" )
            and not npc:has_info( "gen_iskatel_akkum_done" )
        then
            npc:give_info_portion( "gen_iskatel_akkum_done" )
            misc.release_by_name( "gen_iskatel_drug" )
        end
        -- для спавна ecolog_outfit_m1
        if
            lname == "l10_radar"
            and npc:has_info( "barmen_find_item_2_start" )
            and not npc:has_info( "barmen_find_item_2_done" )
        then
            sak_dialog.spawn_barmen_find_item()
        end
        -- для ecolog_apparat_aver
        if
            lname == "aver"
            and npc:has_info( "info_ecolog_apparat_bolota_done" )
            and not npc:has_info( "info_kruglov_message_aver" )
        then
            sak_dialog.timer_kruglov_aver()
        end
        -- для ecolog_apparat_rf
        if
            lname == "red_forest"
            and npc:has_info( "info_ecolog_apparat_aver_done" )
            and not npc:has_info( "info_kruglov_message_rf" )
        then
            sak_dialog.timer_kruglov_rf()
        end
        -- убираем Небова из Лиманска
        if
            lname ~= "limansk"
            and npc:has_info( "gen_iskatel_akkum_done" )
            and not npc:has_info( "ivan_umer" )
        then
            misc.release_by_name( "ivan" )
        end
        -- убираем Фраера из ДТ
        if
            lname ~= "l06_rostok"
            and npc:has_info( "dt_fraer_dialog_done" )
            and not npc:has_info( "dt_fraer_pda_know" )
        then
            npc:give_info_portion( "dt_fraer_pda_know" )
        end
        -- убираем Кочергу из ДТ
        if
            lname ~= "l06_rostok"
            and npc:has_info( "dt_kocherga_secret_done" )
            and not npc:has_info( "kocherga_umer" )
        then
            misc.release_by_name( "td_kocherga" )
        end
        -- убираем Искателя из Лиманска
        if
            lname == "l05_bar"
            and npc:has_info( "bar_tonnel_info" )
            and npc:has_info( "gen_iskatel_akkum_done" )
        then
            misc.release_by_name( "gen_iskatel" )
        end
        -- убираем Фраера из Лиманска
        if
            lname ~= "limansk"
            and npc:has_info( "info_fraer_pripyat_done" )
            and not npc:has_info( "fraer_umer" )
        then
            misc.release_by_name( "td_stalker_fraer" )
        end
        -- спавним бромовский Spas-12 при заходе на локацию
        if
            lname == "l07_military"
            and npc:has_info( "drunk_dolg_story_start" )
            and not npc:has_info( "drunk_dolg_story_done" )
        then
            sak_dialog.spawn_drunk_dolg_spas()
        end
        -----------------
        if lname == "l07_military" and sname == "aver" then
            npc:give_info_portion( "mil_zoneguard_test1_passed" )
        end
        if lname == "red_forest" and sname == "l08u_brainlab" then
            local obj = g_sim:story_object( story_ids.x16_beton_block_7 )
            if obj then misc.release_obj( obj, 'sak.script:3975') end
        end
        if lname == "l11_pripyat" then mike.fill_food_prip() end
        -- выдаём поршень для диалога с Фраером в Лиманске
        if
            lname == "l11_pripyat"
            and npc:has_info( "lim_fraer_gg_know" )
            and not npc:has_info( "lim_fraer_pripyat_info" )
        then
            npc:give_info_portion( "lim_fraer_pripyat_info" )
        end
        if lname == "l07_military" and not npc:has_info( "mil_dolg_auto_attack" ) then
            local name, delay = timers.check_timer( "mil_attack" )
            if not name then
                timers.start_timer( "mil_attack", 0, 3, 33, "sak.mil_dolg_attacking()" )
                timers.start_timer( "max_things", 0, 0, 13, "sak.max_things_attantion()" )
            end
        end
        if lname ~= "l07_military" and npc:has_info( "ivancov_return_cherep_have" ) then
            for n = 0, 9 do
                misc.release_by_name( "mil_sound_dolg_res_000"..n )
            end
            for n = 10, 15 do
                misc.release_by_name( "mil_sound_dolg_res_00"..n )
            end
            misc.release_by_name( "mil_scull_message1_restrictor" )
            misc.release_by_name( "mil_scull_message2_restrictor" )
            misc.release_by_name( "mil_scull_message1_restrictor" )
            misc.release_by_name( "mil_scull_message1_restrictor" )
            misc.release_by_name( "mil_scull_message1_restrictor" )
            misc.release_by_name( "mil_scull_message1_restrictor" )
            npc:give_info_portion( "mil_dolg_gulag_return" )
            npc:give_info_portion( "mil_lukash_dolg_task_complete" )
        end
        if sname == "l04_darkvalley" and npc:has_info( "val_escort_new_begin" ) then
            npc:give_info_portion( "val_prisoner_scene_end" )
            npc:give_info_portion( "val_escort_guards_free" )
        end

        for k, v in pairs( sak_artmods.artmod_resiepts ) do
            nlc_vars[ "artmod_activation_" .. v[ 5 ] ] = nil
        end
        npc:disable_info_portion( "dead_vergas_actor_hangry_info" )
        npc:give_info_portion   ( "gar_bandit_blokpost_pass_off" )
        npc:disable_info_portion( "info_way109a" )
        npc:disable_info_portion( "cook_door_open" )
        npc:disable_info_portion( "esc_give_water" )
        npc:disable_info_portion( "black_tip_yes" )
        npc:disable_info_portion( "dsc_monsters_1_add_have" )
        npc:disable_info_portion( "rad_monsters_1_add_have" )
        npc:disable_info_portion( "red_monsters_1_add_have" )
        npc:disable_info_portion( "black_tip_no" )
        npc:disable_info_portion( "mutant_blok_post_have" )
        npc:disable_info_portion( "gar_monster_angar_have" )
        npc:disable_info_portion( "val_monster_add_have" )
        npc:disable_info_portion( "val2_monster_add_have" )
        npc:disable_info_portion( "ros_monsters_have" )
        npc:disable_info_portion( "ros2_monsters_have" )
        npc:disable_info_portion( "ros3_monsters_have" )
        npc:disable_info_portion( "blowout_dialog" )
        npc:disable_info_portion( "gar_monster_bandits_have" )
        npc:disable_info_portion( "escape_trader_jobs_new" )
        npc:disable_info_portion( "gg_luser" )
        npc:disable_info_portion( "part_exchang_2out" )
        amk_offline_alife.update_trade()

        local ids, cnt = registry.sc_objects( "kolbasa*", false, 7 )
        for n = 1, cnt do
            local id  = ids[ n ]
            local obj = client_obj( id )
            if obj then
                if ( obj:parent() == nil or obj:parent():id() == nil or obj:parent():id() == BAD_OBJ_ID ) then
                    misc.release_obj( id, 'kolbasa_off')
                end
            end
        end
        ids, cnt = registry.sc_objects( "bread*", false, 7 )
        for n = 1, cnt do
            local id = ids[ n ]
            local obj = client_obj( id )
            if obj and ( obj:parent() == nil or obj:parent():id() == nil or obj:parent():id() == BAD_OBJ_ID ) then
                misc.release_obj ( id, 'bread_off')
            end
        end
        if lua_random() < 0.075 then
            local ids, cnt = registry.sc_objects( "m_inventory_box*", false, 7 )
            for n = 1, cnt do
                local id  = ids[ n ]
                local obj = client_obj( id )
                if obj and obj:position():distance_to( act_pos ) > 20 then
                    misc.release_obj( id, 'm_inventory_box_off')
                end
            end
        end
        if lua_random() < 0.095 then
            local ids, cnt = registry.sc_objects( "rucksack*", false, 7 )
            for n = 1, cnt do
                local id  = ids[ n ]
                local obj = client_obj( id )
                if obj and obj:position():distance_to( act_pos ) > 20 then
                    misc.release_obj( id, 'rucksack_off' )
                end
            end
        end
        if npc:has_info( "serafim_red_out" ) then
            local obj = g_sim:story_object( story_ids.serafim )
            if obj then misc.release_obj( obj, 'sak.script:4020' ) end
        end
        if npc:has_info( "diador_umer" ) then
            local obj = g_sim:story_object( story_ids.diador )
            if obj then misc.release_obj( obj, 'diador_off' ) end
            local obj = g_sim:story_object( story_ids.esc_exit_bandit_diador )
            if obj then misc.release_obj( obj, 'diador_off' ) end
        end
        if not npc:object( "bag_on_belt" ) then
            create_items( npc, "bag_on_belt", 1 )
            if sim:story_object( story_ids.hran_sumka ) == nil then
                local act_pos    = npc:position()
                local lvid       = npc:level_vertex_id()
                local gvid       = npc:game_vertex_id()
                local pos        = v3f( ( act_pos.x ), ( act_pos.y - 100 ), ( act_pos.z ) )
                local hran       = g_sim:create( "non_vis_inv", pos, lvid, gvid )
                local pk         = get_netpk( hran )
                local data       = pk:get()
                data.story_id    = story_ids.hran_sumka -- ( 11 )
                data.custom_data = "[logic]\nactive = ph_idle@enable\n[ph_idle@enable]\nnonscript_usable = false\n[collide]\nignore_static"
                pk:set( data )
            end
        end
    else
        sak_dialog.start_time( "start_antichit_time" )
        sak_dialog.start_time( "start_treasure_time" )
    end
    vergas_lib.game_load()
    local name, delay = timers.check_timer( "news_check" )
    if not name then timers.start_timer( "news_check", 0, 0, 13, "news_main.check_news()" ) end
    name, delay = timers.check_timer( "show_news" )
    if not name then timers.start_timer( "show_news", 0, 0, lua_random( 17, 42 ), "amk_mod.show_news()" ) end
    name, delay = timers.check_timer( "blow_shift" )
    if not name then amk_mod.start_blow_timer() end
    if not npc:has_info( "game_difficulty_info" ) then
        local rand4     = tonumber( level.get_game_difficulty() )
        amk_vars.g_diff = rand4
        npc:give_info_portion( "game_difficulty_info" )
    end
end

function kruglov_end_time() db.actor:give_info_portion( "krugl_end_time" ) end

function dead_volk_end()
    if db.actor:has_info( "esc_wolf_dead" ) then
        db.actor:give_info_portion( "esc_kill_bandits_quest_done" )
    end
end

function botan_help()
    local act_pos = db.actor:position()
    local lvid    = db.actor:level_vertex_id()
    local gvid    = db.actor:game_vertex_id()
end

function kolb_baded()
    if kolb then return end
    for a = 1, MAX_OBJ_ID do
        local obj = g_sim:object( a )
        if obj then
            local p_obj = obj.parent_id
            local nname = obj:name()
            if
                str_in_tab( nname, { "mutant_", "bread", "kolbasa" } )
                and (
                    p_obj == nil or p_obj == BAD_OBJ_ID or p_obj == 0
                    or str_in_tab(
                        g_sim:object( p_obj ):section_name(), { "rucksack", "inventory_box" }
                    )
                    or IsStalker( sim:object( p_obj ) )
                )
            then
                local pk       = get_netpk( obj, 1 )
                local data     = pk:get()
                local new_cond = 0.10
                local cond     = obj.condition or data.condition
                if     strpos( nname, "green_kolbasa" ) then new_cond = 0.02
                elseif strpos( nname, "kolbasa"       ) then new_cond = 0.08
                end
                if cond and cond > 0.15 then
                    data.condition = cond - new_cond
                    local cobj = client_obj( a )
                    if cobj then
                        cobj:set_condition( data.condition )
                    elseif obj.condtion ~= nil then
                        obj.condition = data.condition
                    else
                        pk:set( data )
                    end
                else
                    misc.release_obj( obj, 'sak.script:4160' )
                end
            end
        end
    end
    kolb = true
end

-- обработка всякого при Выбросе, насколько я понял
function off_testobj()
    local h       = hit()
    local lname   = level.name()
    h.type        = hit.strike
    h.power       = 1000
    h.impulse     = 1000
    local artz_up = false 
    for a = 1, MAX_OBJ_ID do
        local obj = g_sim:object( a )
        if obj then
            local p_obj = obj.parent_id
            local nname = obj:name()
            if
                str_in_tab( nname, {
                    "testsak_", "amk_zone_teleport_", "sak_skelet", "_surprise_box"
                })
                or (
                    obj.m_game_vertex_id ~= BAD_OBJ_ID
                    and const.ground_levels[ obj.level_id ]
                    and ( obj:clsid() == 88 or ( obj:clsid() == 87 and nname == "" ) )
                )
                or strpos( nname, "amk_zone_greedy_", 1, true )
            then
                misc.release_obj( obj, 'sak.script:4182' )
            -- elseif strpos( nname, "banka_full" ) then
            --     if p_obj and p_obj ~= 0 then
            --         local par = g_sim:object( p_obj )
            --         misc.release_obj( obj, 'sak.script:5626' )
            --         if par then misc.spawn_to( "banka", par ) end
            --     elseif ( p_obj == nil or p_obj == BAD_OBJ_ID ) then
            --         misc.release_obj( obj, 'sak.script:5633' )
            --     end
            elseif strpos( nname, "^af_" ) and not strpos( nname, "^af_full" ) then
                if not str_in_tab( nname, {
                        "af_mayatnik_", "af_compass", "af_red_", "af_dummy_green", "af_unknown_"
                    })
                    and ( p_obj == nil or p_obj == BAD_OBJ_ID )
                then
                    if
                        obj.position:distance_to( v3f( 350.91, -6.01, -21.23 ) ) < 30
                        and not artz_up
                    then
                        changed_art_class( a )
                        artz_up = true
                    else
                        misc.release_obj( obj, 'sak.script:4193' )
                    end
                else
                    changes_art_class( a )
                end
            end
        end
        local cr = client_obj( a )
        if cr and cr:section() == "m_crow" and lua_random() < 0.01 then
            h.draftsman = cr
            h.direction = cr:direction()
            cr:hit( h )
        end
    end
    if has_alife_info( "marsh_pribor_aver_start" )  then mike.marsh_pribor_aver_end() end
    if has_alife_info( "akk_aver_start" )           then mike.akk_aver_end()          end
    if has_alife_info( "mayatnik_aver_start_info" ) then mike.mayatnik_aver_ready()   end
    if has_alife_info( "mayatnik_prip_start_info" ) then mike.mayatnik_prip_ready()   end
    if db.actor:has_info( "pda_will_be_broken" ) then
        pda_will_brock()
        db.actor:disable_info_portion( "pda_will_be_broken" )
        return
    end
    ------ Смотрим, не сломать ли нам пда ----
    local brock_flag = nlc_vars.brocked_flag or math.random( 10, 35 )   -- первая поломка случайна
    if
        db.actor:has_info( "agroprom_military_case_have" )
        and not db.actor:has_info( "radar_on" )
    then -- если закрыли Агро, не раньше
        if
            brock_flag > 1
        then
            nlc_vars.brocked_flag = brock_flag - 1 -- на выброс ближе к поломке
        else
            db.actor:give_info_portion( "pda_will_be_broken" )
            nlc_vars.brocked_flag = 4 + math.random( 10, 35 ) - tonumber( level.get_game_difficulty()) -- следующая как минимум через выброс или больше
        end
    end
end

function pda_will_brock()
    db.actor:give_info_portion( "pda_is_broken" )
    params.command_unbind( "map" )
    params.command_unbind( "active_jobs" )
    sak.get_command( "unbind_sec map" )
    sak.get_command( "unbind contacts" )
    sak.get_command( "unbind_sec active_jobs" )
    out_many_pda_broken()
    misc.spawn_to( "device_pda_npc_gg", db.actor )
    nlc_vars.brocked_flag = nil
end

function pda_repaired()
    db.actor:disable_info_portion( "pda_is_broken" )
    local key_map = ReadIni( db.stor_ltx, "stor", "map" )
    if key_map == "" or key_map == nil  then key_map = "bind map kM" end
    get_command( key_map )
    local key_pda = ReadIni( db.stor_ltx, "stor", "pda" )
    if key_pda == "" or key_pda == nil then key_map = "bind active_jobs kP" end
    get_command( key_pda )
end

function pda_new()
    db.actor:give_info_portion( "all_article_disable" )
    db.actor:disable_info_portion( "pda_is_broken" )
    local key_map = ReadIni( db.stor_ltx, "stor", "map" )
    if key_map == "" then key_map = "bind map kM" end
    get_command( key_map )
    local key_pda = ReadIni( db.stor_ltx, "stor", "pda" )
    if key_pda == "" then key_map = "bind active_jobs kP" end
    get_command( key_pda )
    db.actor:disable_info_portion( "all_article_disable" )
end

local money_percent = 70

function add_docent_self_pda()
    db.actor:disable_info_portion( "pda_is_broken" )
    local key_map = ReadIni( db.stor_ltx, "stor", "map" )
    if key_map == "" or key_map == nil  then key_map = "bind map kM" end
    get_command( key_map )
    local key_pda = ReadIni( db.stor_ltx, "stor", "pda" )
    if key_pda == "" or key_pda == nil then key_map = "bind active_jobs kP" end
    get_command( key_pda )
    if nlc_vars.gg_money then
        db.actor:give_money( math.floor( nlc_vars.gg_money*( money_percent*0.01 )))
        nlc_vars.gg_money = nil
    end
end

function harddisc_off()
    local rnd = lua_random( 1, 5 )
    schedule.add( "t_paus", "sak.harddisc_off_done()", 6000 )
    local sound = sound_object( "scripts\\hdd_out_" .. rnd )
    sound:play_at_pos( db.actor, db.actor:position(), 0 )
    level.disable_input()
    bind_stalker.hide_weapon()
end

function harddisc_off_done()
    bind_stalker.restore_weapon()
    level.enable_input()
    create_items( db.actor, "hard_disc", 1 )
end

function diador_arrive()
    local bandit = level_object_by_sid( 54 )
    relation_registry.set_community_goodwill( "stranger", bandit:id(), -5000 )
end

function off_bandit_krisyk()
    local obj = g_sim:story_object( story_ids.val_bandit_krisyk )
    if obj then misc.release_obj ( obj, 'sak.script:4236') end
end

function add_borov_treasure()
    treasure_manager.get_treasure_manager():give_treasure( "mil_secret_borov" )
end

function add_krysyk_treasure()
    treasure_manager.get_treasure_manager():give_treasure( "val_secret_krysyk" )
end

function add_krysyk_pda()
    treasure_manager.get_treasure_manager():give_treasure( "agr_secret_krysyk" )
end

function first_rem()
    if not has_alife_info( "first_remember" ) then
        db.actor:give_info_portion( "first_remember" )
        send_tip( "Кажется, я помню как туда попасть!", "Воспоминание", 2, 20, "g_g", "rememb", "yellow" )
    end
    level.add_pp_effector( "blink.ppe", 234, false )
    level.add_pp_effector( "teleport.ppe", 2006, false )
    local rand = lua_random( 1, 3 )
    db.actor:set_actor_position(
        patrol( "agr_sak_teleport_0001_exit"..rand.."_walk" ):point( 0 )
    )
    local dir = patrol(
        "agr_sak_teleport_0001_exit"..rand.."_walk" ):point( 0 ):sub(
            patrol( "agr_sak_teleport_0001_exit"..rand.."_look" ):point( 0 )
    )
    db.actor:set_actor_direction( -dir:getH() )
    eff_vodka()
end

function u_agr_tele()
    local rand = lua_random( 1, 3 )
    db.actor:give_info_portion( "agr_sak_teleport_0001_exit" .. rand )
end

function gar_stalker_info()
    if not has_alife_info( "gar_stalker_info2" ) then
        if db.actor:has_info( "gar_stalker_info" ) then
            send_tip(
                "Знакомая личность и ствол! Кажется у Борова был умелец, который мог модифицировать оружие...",
                "Воспоминание", 2, 20, "g_g", "rememb", "yellow"
            )
            db.actor:give_info_portion( "gar_stalker_info2" )
        end
    end
end

function lim_podval_news()
    send_tip(
        "Эту дверь не открыть даже ломом. Взорвать что ли? У Михалыча наверно есть динамит...",
        "Заклинило что-ли?", 5, 15, "g_g", "sak", "yellow"
    )
end

function set_gulag_enemy_actor()
    xr_gulag.setGulagEnemy( "esc_dram", db.actor )
end

function zub_trader_task_no_have_timer()
    local name, delay = timers.check_timer( "z_trader_t" )
    if not name then return true end
    return false
end

function zub_trader_task_timer()
    timers.start_timer( "z_trader_t", 5, 20, 27, "sak.zub_trader_task_timer_end()" )
end

function zub_trader_task_timer_end()
    db.actor:disable_info_portion( "trader_task_failed" )
end

function zub_barman_task_no_have_timer()
    local name, delay = timers.check_timer( "z_barman_t" )
    if not name then return true end
    return false
end

function zub_barman_task_timer()
    timers.start_timer( "z_barman_t", 0, 20, 27, "sak.zub_barman_task_timer_end()" )
end

function zub_barman_task_timer_end()
    db.actor:disable_info_portion( "barman_task_failed" )
end

function set_gulag_freedom_enemy_actor()
    timers.start_timer( "s_gul_fr_en", 0, 0, 27, "sak.gulag_freedom_enemy_actor()" )
end

function gulag_freedom_enemy_actor()
    relation_registry.set_community_goodwill( "freedom", db.actor:id(), -5000 )
    xr_gulag.setGulagRelation( "mil_freedom", game_object.enemy, db.actor )
    db.actor:give_game_news(
        "%c[255,160,160,160]\"Свобода\"\\n%c[default]Внимание всем нашим! Видели одного сталкера, который убил нашего! Его опознали - Меченный гад! Валите как увидите!",
        "ui\\ui_iconsTotal", Frect():set( 498, 94, 83, 47 ), 3000, 15000
    )
end

function esc_dram_free()
    timers.start_timer( "esc_dr_free", 0, 0, 30, "sak.esc_dram_free_info()" )
end

function timer_fast_start_max()
    timers.start_timer( "max_attack", 0, 0, 5, "sak.start_max_attack()" )
    local gulag = xr_gulag.get_gulag_by_name( "mil_freedom" )
    if gulag then gulag.smrttrn:update() end
    db.actor:give_info_portion( "mil_lukash_dolg_task" )
    db.actor:give_info_portion( "mil_bodyguard_talk" )
    db.actor:give_info_portion( "mil_freedom_attack" )
end

function timer_start_max()
    timers.start_timer( "max_attack", 0, 0, 25, "sak.start_max_attack()" )
    local gulag = xr_gulag.get_gulag_by_name( "mil_freedom" )
    if gulag then gulag.smrttrn:update() end
    db.actor:give_info_portion( "mil_lukash_dolg_task" )
    db.actor:give_info_portion( "mil_bodyguard_talk" )
    db.actor:give_info_portion( "mil_freedom_attack" )
end

function start_max_attack()
    if not has_alife_info( "mil_max_arrive" ) then
        db.actor:give_info_portion( "mil_max_arrive" )
        db.actor:give_info_portion( "mil_max_talk3" )
        db.actor:give_info_portion( "mil_max_gg_chicken" )
    end
end

function timer_start_x16_on()
    timers.start_timer( "x16_on", 0, 22, 25, "sak.start_x16_on()" )
end

function start_x16_on()
    if has_alife_info( "yan_labx16_switcher_primary_off" ) then
        db.actor:disable_info_portion( "yan_labx16_switcher_primary_off" )
        db.actor:disable_info_portion( "yan_labx16_switcher_1_off" )
        db.actor:disable_info_portion( "yan_labx16_switcher_2_off" )
        db.actor:disable_info_portion( "yan_labx16_switcher_3_off" )
    end
end

function esc_dram_free_info()
    db.actor:give_info_portion( "esc_dram_gulag_free_info" )
end

function set_mil_gulag_enemy_actor()
    xr_gulag.setGulagEnemy( "mil_freedom", db.actor )
end

function set_val_gulag_enemy_actor()
    xr_gulag.setGulagEnemy( "val_dram", db.actor )
    xr_gulag.setGulagEnemy( "val_x18_exit_base", db.actor )
end

function psevdowounded_help()
    send_tip( "Помогите кто-нибудь, я ранен!", "Получен SOS", 2, 20, "stalker", "sak", "red" )
end

function get_inv_name( section )
    return system_ini():r_string( section, "inv_name" )
end

function relocate_item( actor, type, item, amount, is_ammo_count )
    if actor == nil then return false end
    if not amount then amount = 1 end
    if razgruzka.is_ammo( item ) and not is_ammo_count then
        amount = amount * vergas_lib.get_box_size( item )
    end
    local icon = "ui_iconsTotal_found_thing"
    local msg  = "%c[255,1,255,1]" .. game.translate_string( "general_in_item" )
    if type == "out" then
        icon = "ui_iconsTotal_lost_thing"
        msg  = "%c[255,255,1,1]" .. game.translate_string( "general_out_item" )
    end
    local task_texture, task_rect = get_texture_info( icon )
    local news_text = msg .. "\\n" .. "%c[default]"
        ..game.translate_string( get_inv_name( item ) ) .. " - " .. amount .. " шт."
    if actor:is_talking() then
        actor:give_talk_message( news_text, task_texture, task_rect, "iconed_answer_item" )
    else
        actor:give_game_news( news_text, task_texture, task_rect, 0, 3000 )
    end
end

function send_treasure( name )
    local level_name = {}
    level_name[ "esc"  ] = "Кордон"
    level_name[ "gar"  ] = "Свалка"
    level_name[ "agr"  ] = "НИИ Агропром"
    level_name[ "agru" ] = "Подвалы Агропрома"
    level_name[ "val"  ] = "Тёмная долина"
    level_name[ "mil"  ] = "Армейские склады"
    level_name[ "yan"  ] = "Янтарь"
    level_name[ "x16"  ] = "Лаборатория Х-16"
    level_name[ "rad"  ] = "Радар"
    level_name[ "pri"  ] = "Припять"
    level_name[ "x18"  ] = "Лаборатория Х-18"
    level_name[ "bar"  ] = "Территория Долга"
    level_name[ "ros"  ] = "Дикая территория"
    level_name[ "mar"  ] = "Болота"
    level_name[ "lim"  ] = "Лиманск"
    level_name[ "hos"  ] = "Санаторий"
    level_name[ "aver" ] = "Туманная чаща"
    level_name[ "avp"  ] = "Подземелье диггеров"
    level_name[ "pes"  ] = "Катакомбы"
    level_name[ "vil"  ] = "Забытый хутор"
    level_name[ "red"  ] = "Рыжий лес"
    level_name[ "gen"  ] = "Зона Тесла"
    level_name[ "puz"  ] = "Тихая роща"
    level_name[ "dsc"  ] = "Кишка"
    level_name[ "lost" ] = "Забытый хутор"
    amk.pda_news:play( db.actor, 0, sound_object.s2d )
    local task_texture, task_rect = get_texture_info( "ui_iconsTotal_found_thing" )
    local level_key = string.sub( name, 1, strpos( name, "_s", 1, plain ) - 1 )
    local tmp_str   = ""
    if level_name[ level_key ] ~= nil then
        tmp_str = level_name[ level_key ] .. ": "
    else
        tmp_str = "Где-то там: "
    end
    local news_text = "%c[255,1,255,255]" .. game.translate_string( "st_found_new_treasure" )
        .. "\\n" .. "%c[120,255,120,160]" .. tmp_str 
        .. "%c[170,200,200,200]" .. game.translate_string( name )
    if name == "pda_secret" then
        news_text = "%c[ 255, 230, 255, 1 ] Неужто наводка на схрон? Не мешало бы проверить..."
    end
    if db.actor:is_talking() then
        db.actor:give_talk_message( news_text, task_texture, task_rect, "iconed_answer_item" )
    else
        db.actor:give_game_news( news_text, task_texture, task_rect, 2000, 25000 )
    end
end

function u_agr_tele_in()  sak_tele_klyk( "in" )  end
function u_agr_tele_out() sak_tele_klyk( "out" ) end

function sak_tele_klyk( path )
    local start_tele  = false
    local obj_id, obj = -1, nil
    for i, k in pairs( sak_inventory.belt_items ) do
        local kolvo = table.getn( k )
        if strpos( i, "af_electra_sparkler", 1, true ) and not strpos( i, "_dyn6d", 1, true ) then
            obj_id     = k[ 1 ]
            obj        = g_sim:object( obj_id )
            start_tele = true
        end
    end
    if obj == nil then return end
    if arts_operate and start_tele then
        local pk   = get_netpk( obj, 1 )
        local data = pk:get()
        local cond = data.condition + 0.0004
        if cond >= 1 then cond = 0.9999 end
        if cond > 0.25 then
            local new_cond = ( cond - 0.20 )
            params.obj_condition( obj_id, new_cond )
            data.condition = new_cond
            pk:set( data )
            level.add_pp_effector( "blink.ppe", 234, false )
            level.add_pp_effector( "teleport.ppe", 2006, false )
            eff_vodka()
            if new_cond<0.25 then
                coord_params.set_obj_section( obj_id, "af_electra_sparkler_dyn6d" )
            end
            if path == "in" then
                db.actor:set_actor_position(
                    patrol( "agr_sak_teleport_0002_exit_walk" ):point( 0 )
                )
                local dir = patrol(
                    "agr_sak_teleport_0002_exit_walk" ):point( 0 ):sub(
                        patrol( "agr_sak_teleport_0002_exit_look" ):point( 0 )
                )
                db.actor:set_actor_direction( dir:getH() )
            elseif path == "out" then
                db.actor:set_actor_position(
                    patrol( "klyk_teleport" ):point( 0 )
                )
                local dir = patrol(
                    "klyk_teleport" ):point( 0 ):sub( patrol( "klyk_teleport" ):point( 0 )
                )
                db.actor:set_actor_direction( -dir:getH() )
            end
            return
        end
    end
end

function sak_tele_mar()   sak_tele_art( "mar"  ) end
function sak_tele_dsc()   sak_tele_art( "dsc"  ) end
function sak_tele_mil()   sak_tele_art( "mil"  ) end
function sak_tele_esc()   sak_tele_art( "esc"  ) end
function sak_tele_yan()   sak_tele_art( "yan"  ) end
function sak_tele_prip()  sak_tele_art( "prip" ) end
function sak_tele_agru()  sak_tele_art( "agru" ) end
function sak_tele_aver()  sak_tele_art( "aver" ) end

function agru_add_compass()
    local obj_hran = g_sim:story_object( story_ids.u_agr_inventory_box_klyk )
    if obj_hran then
        local obj = g_sim:create( "af_compass_dyn5d",
            obj_hran.position, obj_hran.m_level_vertex_id, obj_hran.m_game_vertex_id, obj_hran.id
        )
        local pk         = get_netpk( obj, 1 )
        local data       = pk:get()
        data.custom_data = "agru_tele_aver"
        pk:set( data )
    end
    db.actor:give_info_portion( "doctor_said_all_info" )
end

function sak_tele_art( path )
    local start_tele  = false
    local obj_id, obj = -1, nil
    local inf         = ""
    local pk, data
    for i, k in pairs( sak_inventory.belt_items ) do
        if strpos( i, "af_compass", 1, true ) then
            obj_id = k[ 1 ]
            obj    = g_sim:object( obj_id )
            pk     = get_netpk( obj, 1 )
            data   = pk:get()
            inf    = data.custom_data or ""
            if inf ~= "" and strpos( inf, "^" .. path .. "_" ) then
                start_tele = true
                break
            end
        end
    end
    if obj == nil then return end
    if arts_operate and start_tele and pk then
        local cond = data.condition + 0.0004
        if cond >= 1 then cond = 0.9999 end
        local cond1 = math.floor( cond * 100 )
        if cond > 0.25 then
            local new_cond = ( cond - 0.20 )
            data.condition = new_cond
            pk:set( data )
            level.add_pp_effector( "blink.ppe", 234, false )
            level.add_pp_effector( "teleport.ppe", 2006, false )
            eff_vodka()
            if new_cond < 0.25 then
                coord_params.set_obj_section( obj_id, "af_compass_dyn6d" )
            end
            db.actor:set_actor_position( patrol( inf ):point( 0 ) )
        end
    end
end

function add_bandit_body()
    local obj = create_corpse ( "ros_bandit_respawn_3",
        v3f( -292.71, -3.0, -195.81 ), 260, 797, 9495,
        "[dont_spawn_character_supplies]\n[known_info]\nagr_bandit_name"
    )
    misc.spawn_to( "harmonica_b", obj )
end

function borov_11_have_info()
    timers.start_timer( "borov_11", lua_random( 5, 30 ), "sak.info_borov_11()" )
end

function timer_muller_1()
    add_muller_treasure()
    timers.start_timer( "timer_muller_1", 0, 3, 30, "sak.timer_muller_end()" )
end

function timer_muller_2()
    add_muller_treasure2()
    timers.start_timer( "timer_muller_2", 0, 7, 30, "sak.timer_muller_end()" )
end

function add_muller_treasure()
    local treases = { 5855, 5854, 5859, 5861, 5863 }
    local sid     = lua_random( 1, #treases )
    local obj     = g_sim:story_object( treases[ sid ] )
    if obj then
        for a = 1, 2 do
            misc.spawn_to( "antirad",     obj )
            misc.spawn_to( "medkit_army", obj )
        end
    end
end

function timer_muller_end()
    if not db.actor:has_info( "bar_korovan_info2" ) then
        local obj = g_sim:story_object( story_ids.agr_muller )
        if obj and IsStalker( obj ) then
            local pk         = get_netpk( obj )
            local data       = pk:get()
            data.health      = 0
            data.upd.health  = 0
            data.custom_data = "[dont_spawn_character_supplies]\n[known_info]\nmuller_umer"
            pk:set( data )
        end
    end
end

function timer_docs_sidor()
    timers.start_timer( "time_docs_sidor", 0, 1, 55, "sak.timer_docs_sidor_end()" )
end

function timer_docs_sidor_short()
    timers.start_timer( "time_docs_sidor", 0, 0, 15, "sak.timer_docs_sidor_end()" )
end

function timer_docs_sidor_end()
    if not db.actor:has_info( "escape_lager_volk_document_done" ) then
        send_tip(
            "Меченный, зайди ко мне, есть дело для тебя!",
            "Сообщение от Сидоровича", 11, 20, "trader", "sak", "red"
        )
        db.actor:give_info_portion( "escape_lager_volk_document_done" )
    end
end

function start_timer_return_x18()
    timers.start_timer(
        "return_x18", lua_random( 4, 7 ), lua_random( 1, 7 ), 11, "sak.timer_return_x18_end()"
    )
end

function timer_return_x18_end()
    send_tip(
        "Сталкеры, если есть желание рискнуть, но получить достойную награду, заходите!\\nЕсли кто увидит Меченного, его это касается в первую очередь.",
        "Сообщение от Бармена", 11, 20, "barman", "sak", "green"
    )
    db.actor:give_info_portion( "return_x18_info" )
end

function timer_barman_1()
    timers.start_timer( "timer_barman_1", lua_random( 300, 600 ), "sak.timer_barman_1_end()" )
end

function timer_barman_1_end()
    send_tip(
        "Меченный, зайди ко мне, есть дело для тебя!",
        "Сообщение от Бармена", 11, 20, "barman", "sak", "green"
    )
    db.actor:give_info_portion( "agroprom_military_case_know" )
end

function fox_timer_start()
    timers.start_timer( "fox_timer", 0, 1, 03, "sak.fox_timer_start_end()" )
end

function fox_timer_start_end()
  if not has_alife_info( "escape_fox_heal" ) then
    local npc = db.actor
    npc:give_info_portion( "esc_fox_thanks" )
    npc:give_info_portion( "esc_fox_umer" )
    npc:give_info_portion( "escape_stalker_done" )
    local obj= g_sim:story_object( story_ids.esc_fox )
    if  level.name() == "l01_escape" and obj.online then
      if obj and obj:alive() then
      obj = client_obj( obj.id )
      obj:kill( obj )
      end
    else
      if obj then
      local pk = get_netpk( obj )
      local data = pk:get()
      data.health     = 0
      data.upd.health = 0
      pk:set( data )
      end
    end
  end
end

function timer_shustr_of_wolf()
    timers.start_timer( "shustr_of_wolf", 0, 1, 29, "sak.timer_shustr_of_wolf_end()" )
end

function timer_shustr_of_wolf_end()
    db.actor:give_info_portion( "tutorial_wounded_start" )
    if not has_alife_info( "escape_factory_assault_say_hello" ) and not has_alife_info( "help_to_volk" ) then
        db.actor:give_info_portion( "escape_factory_assault_say_hello" )
        db.actor:give_info_portion( "atp_bandits_open_fire" )
        db.actor:give_info_portion( "esc_bandits_start" )
    end
end

function timer_quick_shustr_of_wolf()
    timers.start_timer( "shustr_of_wolf", 0, 0, 29, "sak.timer_quick_shustr_of_wolf_end()" )
end

function timer_quick_shustr_of_wolf_end()
    if not has_alife_info( "escape_factory_assault_say_hello" ) and not has_alife_info( "help_to_volk" ) then
        db.actor:give_info_portion( "escape_factory_assault_say_hello" )
        db.actor:give_info_portion( "atp_bandits_open_fire" )
        db.actor:give_info_portion( "esc_bandits_start" )
    end
end

function max_things_attantion()
    if not has_alife_info( "max_good_start" ) then
        send_tip(
            "Мужики, если кто собирается на Кордон - подходите, дело есть...",
            "Макс", 11, 20, "freedom", "sak", "green"
        )
        db.actor:give_info_portion( "max_good_start" )
    end
end

function ivancov_case_good()
    send_tip( "Меченный, будешь в Баре - подойди, поговорим!", "Сообщение от Иванцова", 11, 20, "dolg", "sak", "green" )
    if not has_alife_info( "ivancov_good_start" ) then
        db.actor:give_info_portion( "ivancov_good_start" )
    else
        db.actor:give_info_portion( "ivancov_gg_news_start" )
    end
end

function timer_barman_2()
    timers.start_timer( "timer_barman_2", lua_random( 300, 600 ), "sak.timer_barman_2_end()" )
end

function timer_barman_2_end()
    send_tip( "Меченный, зайди ко мне, есть дело для тебя!", "Сообщение от Бармена", 11, 20, "barman", "sak", "green" )
    db.actor:give_info_portion( "bar_x16_documents_know" )
end

function timer_barman_3()
    timers.start_timer( "timer_barman_3", lua_random( 600, 1200 ), "sak.timer_barman_3_end()" )
end

function timer_barman_3_end()
    send_tip( "Меченный, зайди ко мне, есть дело для тебя!", "Сообщение от Бармена", 11, 20, "barman", "sak", "green" )
    db.actor:give_info_portion( "bar_x18_documents_know" )
end

function info_borov_11()
    if not has_alife_info( "esc_bridge_pass_fire" ) then
    send_tip(
        "Меченный, мне сообщили, что тебя видели в Тёмной долине. На меня Сахаров вышел - говорит, там какая-то их экспедиция пропала, а ему нужны результаты той экспедиции. Так что, если найдёшь там что, - тащи Сахарову!",
        "Сообщение от Сидоровича", 11, 20, "trader", "sak", "red"
    )
    end
    db.actor:give_info_portion( "borov_11_saharov_start" )
end

function add_sidor_info_kuzn()
    if not has_alife_info( "esc_kuzn_umer" ) then
    send_tip(
        "Сталкеры! Вояки в Долине рейд проводят - не суйтесь туда. Одним из отрядов в оцеплении командует наш хороший знакомый из-под моста. Просил не нарываться в районе перехода с Долины на Свалку...",
        "Сообщение от Сидоровича", 11, 20, "trader", "sak", "red"
    )
    db.actor:give_info_portion( "sidor_info_kuzn" )
    timers.start_timer( "timer_kuzn", 1, 5, 0, "sak.timer_timer_kuzn_end()" )
    --add_dsc_stalker()
    end
end

function timer_timer_kuzn_end()
    db.actor:disable_info_portion( "sidor_info_kuzn" )
end

function info_borov_entres()
    send_tip(
        "Это Пахан. В общем, сделано всё, можешь двигать...",
        "Сообщение для Меченного", 11, 20, "death", "sak", "red"
    )
    val_beton_block_off()
end

function info_barman_entres()
    send_tip(
        "Здесь Бармен. В общем, сделано всё, можешь двигать...",
        "Сообщение для Меченного", 11, 20, "barman", "sak", "red"
    )
    val_beton_block_off()
end

function info_kulinar_entres()
    send_tip(
        "Это Кулинар. В общем, сделано всё, можешь двигать...",
        "Сообщение для Меченного", 11, 20, "stalker", "sak", "red"
    )
    val_beton_block_off()
end

function info_voron_entres()
    send_tip(
        "Это Ворон. В общем, сделано всё, можешь двигать...",
        "Сообщение для Меченного", 11, 20, "stalker", "sak", "red"
    )
    val_beton_block_off()
end

function val_beton_block_off()
    for d = 100, 25000, 1 do
        local art = g_sim:object( d )
        if art then
            if
                   strpos( art:name(), "val_beton_block_", 1, true )
                or strpos( art:name(), "val_not_beton_block_", 1, true )
            then
                misc.release_obj( art, 'sak.script:4749')
            end
        end
    end
end

function val_konteyner_off()
    for d = 100, 25000, 1 do
        local art = g_sim:object( d )
        if art then
            if strpos( art:name(), "val_konteyner_", 1, true ) then
                misc.release_obj( art, 'sak.script:4749')
            end
        end
    end
end

function esc_trader_start_timer()
    timers.start_timer( "dymon_quest", 17, "sak.send_dymon_start_quest()" )
end

function send_dymon_start_quest()
    db.actor:give_info_portion( "gar_start_graveyard" )
    db.actor:give_info_portion( "gar_animation_radio" )
    news_manager.send_tip( db.actor, "tips_gar_hellcar_alarm", 2, "stalker", 10000 )
    timers.start_timer( "start_quest", 343, "sak.esc_trader_start_quest()" )
end

function esc_trader_start_quest()
    local npc = db.actor
    if
        not has_alife_info( "esc_bridge_pass_fire" )
        and not has_alife_info( "esc_serious_talk" )
        and has_alife_info( "helping_fox" )
    then
        send_tip(
            "Меченный, есть одно дело... Забегай по возможности.",
            "Сообщение от Сидоровича", 0, 20, "trader", "sak", "red"
        )
    end
    if not has_alife_info( "tutorial_wounded_give_info" ) then
        npc:give_info_portion( "atp_bandits_open_fire" )
        npc:give_info_portion( "esc_shustryi_umer" )
        local obj = g_sim:story_object( story_ids.esc_shustryi )
        if  level.name() == "l01_escape" and obj.online then
            if obj and obj:alive() then
                obj = client_obj( obj.id )
                obj:kill( obj )
            end
        else
            if obj then
                local pk        = get_netpk( obj )
                local data      = pk:get()
                data.health     = 0
                data.upd.health = 0
                pk:set( data )
            end
        end
    end
    if not has_alife_info( "trader_job" ) then
        sak_spawn.add_esc_ambush_monsters()
        misc.spawn_by_name( "esc_mogila_01" )
        misc.spawn_by_name( "esc_mogila_02" )
        misc.spawn_by_name( "esc_mogila_03" )
        misc.spawn_by_name( "esc_mogila_04" )
    end
    npc:give_info_portion( "esc_serious_talk" )
    npc:give_info_portion( "trader_job" )
    npc:give_info_portion( "escape_lager_volk_document_done" )
    npc:give_info_portion( "esc_kill_bandits_quest_have" )
    npc:give_info_portion( "esc_kill_bandits_quest_done" )
    npc:give_info_portion( "tutorial_wounded_start" )
    npc:give_info_portion( "tutorial_wounded_start_new" )
    npc:give_info_portion( "tutorial_end" )
    npc:give_info_portion( "kvest_art_done" )
    if not has_alife_info( "gar_dm_bandits_change_st" ) then
        npc:give_info_portion( "gar_dm_bandits_change_st" )
        npc:give_info_portion( "gar_dram_novice_burer_hand_done" )
        local obj = g_sim:story_object( story_ids.gar_dm_novice )
        if  level.name() == "l02_garbage" and obj.online then
            xr_effects.gar_dm_bandits_fight_all()
        else
            if obj then
                local pk        = get_netpk( obj )
                local data      = pk:get()
                data.health     = 0
                data.upd.health = 0
                pk:set( data )
                npc:give_info_portion( "gar_dm_novice_dead" )
            end
        end
    end
end

function esc_box_outfit() misc.spawn_by_name( "esc_box_015" ) end

function marsh_factory_level_changer()
    level.add_pp_effector( "red_teleport.ppe", 1529, false )
    local a = v3f( -316.83996582031, 12, -162.28175 )
    db.actor:set_actor_position( a )
end

function agr_mil_teleport() end

local colours = {
    red      = "%c[ 255, 255, 106, 135 ]",
    green    = "%c[ 255, 165, 255, 100 ]",
    blue     = "%c[ 255, 95,  115, 255 ]",
    sky_blue = "%c[ 255, 1,   255, 225 ]",
    yellow   = "%c[ 255, 230, 255, 1   ]",
    pink     = "%c[ 255, 255, 1,   205 ]",
    gray     = "%c[ 255, 150, 160, 160 ]",
    orange   = "%c[ 255, 238, 153, 26  ]"
}

pda_rem = xr_sound.get_safe_sound_object( [[device\pda\accent_1]] )
pda_sos = xr_sound.get_safe_sound_object( [[device\pda\pda_sos]]  )

function send_tip( news_text, header, timeout, showtime, sender, sound, colour, dlg )
    if news_text == nil or db.actor:has_info( "pda_is_broken" ) then return end
    if header    == nil then header   = game.translate_string( "st_tip" ) end
    if timeout   == nil then timeout  = 0 end
    if showtime  == nil then showtime = 5 end
    if colour    == nil then colour   = "gray" end
    if dlg       == nil then dlg      = true end
    local player
    if sound     == "news"   then player = amk.pda_news
    elseif sound == "task"   then player = amk.pda_task
    elseif sound == "sak"    then player = pda_sos
    elseif sound == "rememb" then player = pda_rem
    elseif sound == "no"     then player = nil
    else                          player = amk.pda_tips
    end
    if player then player:play( db.actor, timeout, sound_object.s2d ) end
    if sender == nil then sender = "default" end
    local x         = amk.tips_icons[ sender ][ 1 ]
    local y         = amk.tips_icons[ sender ][ 2 ]
    local news_text = colours[ colour ] .. header
        .. "\\n" .. "%c[default]" .. news_text
    if db.actor:is_talking() and dlg then
        db.actor:give_talk_message(
            news_text, "ui\\ui_iconsTotal",
            Frect():set( x, y, 83, 47 ), "iconed_answer_item"
        )
    else
        db.actor:give_game_news(
            news_text, "ui\\ui_iconsTotal",
            Frect():set( x, y, 83, 47 ), timeout * 1000, showtime * 1000
        )
    end
    return true
end

function show_coordinates()
    local hud = get_hud()
    local cs  = hud:GetCustomStatic( "cs_debug" )
    if cs == nil then
        hud:AddCustomStatic( "cs_debug", true )
        cs = hud:GetCustomStatic( "cs_debug" )
    end
    local dir        = device().cam_dir
    local a          = vector()
    a.x              = math.atan2( -dir.y, dir.z )
    a.y              = math.atan2( -dir.x, dir.z )
    a.z              = math.atan2( -dir.y, dir.x )
    local lvid, gvid = db.actor:level_vertex_id(), db.actor:game_vertex_id()
    local pos, dir   = db.actor:position(), db.actor:direction()
    local pos2       = level.vertex_position( lvid )
    local pos3       = device().cam_pos
    local d          = vector():sub( pos, pos2 )
    local vdist      = level.vertex_position( lvid ):distance_to( db.actor:position())
    local valid      = ( math.abs( d.x ) <= 0.35 and math.abs( d.y )<1.0 and math.abs( d.z ) <= 0.35 )
    local msg        = string.format( "lvid: %d\\n", lvid ) ..
                       string.format( "gvid: %d\\n", gvid ) ..
                       string.format( "pos: %.2f, %.2f, %.2f\\n", pos.x, pos.y, pos.z ) ..
                       string.format( "cam: %.2f, %.2f, %.2f\\n", pos3.x, pos3.y, pos3.z ) ..
                       string.format( "dir: %.2f, %.2f, %.2f\\n", a.x, a.y, a.z ) ..
                       string.format( "lv_dist: %.1f\\n", vdist ) ..
                       "valid: " .. tostring( valid )
    if cs ~= nil then cs:wnd():SetText( msg ) end
end

function borov_summa_fix()
    nlc_vars.borov_summa_fix = db.actor:money() * 0.5
end

function out_many_for_rep_up()
    local many  = nlc_vars.borov_summa_fix or 0
    local bablo = db.actor:money()
    if many == 0 and bablo > 200 then
        db.actor:give_money( -( bablo ) / 4 )
    end
    if bablo <= many then
        many_for_rep = false
    else
        db.actor:give_money( -( bablo-many ) / 25 )
        nlc_vars.borov_summa_fix = 0
    end
end

function add_money( num )
    local summa = lua_random( 15, 75 ) * num
    local actor = db.actor
    dialogs.relocate_money( actor, summa, "in" )
    if actor:has_info( "pda_is_broken" ) then
        nlc_vars.many_cash = summa
    end
    if actor:object( "lot_many" ) == nil and actor:object( "shadow_inventory" ) then
        misc.spawn_to( "lot_many", actor )
        actor:give_info_portion( "dollars_have" )
    end
end

function add_mfake_af( sect )
    local af = string.gsub( sect, "mfake_af", "af" )
    misc.spawn_to( af, db.actor )
end

function actor_hide_weapon()
    level.disable_input()
    bind_stalker.hide_weapon()
end

function restore_weap()
    bind_stalker.restore_weapon()
    level.enable_input()
end

function bar_korovan_3()
    local obj = g_sim:create( "vehicle_btr",
        v3f( -142.81, -0.88, -307.21 ), 95363, 658
    )
    nlc_vars.korovan_btr_id = obj.id
    tbl_korovan_box_id= {}
    local pk          = get_netpk( obj, 1 )
    local data        = pk:get()
    data.object_flags = bit_not( 5 )
    data.custom_data  = "[logic]\ncfg=scripts\\agr\\agr_korovan_btr.ltx"
    data.mass         = 100
    pk:set( data )
    for i = 1, 7 do
        local obj1 = amk.spawn_item( "weapon_box",
            --v3f( -182.0, 1.86, -321.86 ), 689, 54409
            v3f( -169.87, 1.45, -311.79 ), 689, 66634
        )
        table.insert( tbl_korovan_box_id, obj1.id )
    end
    nlc_vars.korovan_box_id = tbl_korovan_box_id
    misc.dump_table( nlc_vars.korovan_box_id )
    local spot = lua_random( 1, 3 )
    local objt = g_sim:story_object( story_ids.agr_korovan_zone )
    if objt then
        amk.add_spot_on_map(
            objt.id, "crlc_big_treasure" .. spot, "Место нападения на караван с оружием"
        )
    end
end

function off_spot_korovan_3()
    local obj = g_sim:story_object( story_ids.agr_korovan_zone )
    if obj then
        for spot = 1, 4 do
            amk.remove_spot_from_map( obj.id, "crlc_big_treasure"..spot )
        end
        misc.release_obj( obj, 'sak.script:5017')
    end
end

function marsh_tuzla( tips )
    local arts       = { "af_dummy_green_blood", "af_dummy_green_vyvert", "af_dummy_green_medusa" }
    local sobj       = alife():create( "arc_art_box_1basic", v3f( -183.68, 2.39, 536.92 ), 119948, 3393 )
    local capsule    = sak_dialog.any_cart_capsule()
    local pk         = get_netpk( sobj, 1 )
    local data       = pk:get()
    data.custom_data = capsule.."_dyn"..tostring( 1+tips ).."d"
    pk:set( data )
    amk.spawn_item( arts[ tips ],
        v3f( -184.24563598633, 2.1785387992859, 533.09 ), 3393, 119948
    )
    local spawn = {
        { -182.90888977051, 2.315, 536.8695678710, 78724, 3381 },
        { -182.25994873047, 2.195, 535.7277221679, 78724, 3381 },
        { -181.11927795410, 2.186, 535.9463500976, 78724, 3381 },
        { -180.32078552246, 2.285, 535.1679077148, 78724, 3381 },
        { -181.25959777832, 2.099, 533.5667724609, 78724, 3381 },
        { -184.43092346191, 2.281, 536.0263061523, 78724, 3381 },
        { -184.72573852539, 2.189, 532.9875488281, 78724, 3381 }
    }
    for i = 1, 7 do
        local rand = lua_random( 2, 9 )
        local obj  = amk.spawn_item( "marsh_document",
            v3f( spawn[ i ][ 1 ], spawn[ i ][ 2 ], spawn[ i ][ 3 ] ),
            spawn[ i ][ 5 ], spawn[ i ][ 4 ]
        )
        if obj then
            local pk         = get_netpk( obj, 1 )
            local data       = pk:get()
            data.custom_data = "new_item\\documents_" .. rand
            data.mass        = 2
            pk:set( data )
        end
    end
    local obj = create_corpse ( "trup_marsh_tuzla",
        v3f( -181.44, 2.11, 534.19 ), 3393, 119948, 9494
    )
    misc.spawn_to( "resiept_activ_anom", obj )
end

function add_gen_mil_items()
    local obj= g_sim:story_object( story_ids.gen_inventory_box_military )
    if obj then misc.spawn_to( "af_compass_dyn5d", obj ) end
    obj = g_sim:story_object( story_ids.gen_ecolog_body_2 )
    if obj then misc.spawn_to( "gen_mil_letter", obj ) end
end

local repliks = {
    "Кто будет лазить по моей нычке - получит в бубен!",
    "А что за гадёныш в моём хабаре роется?",
    "Что там за любопытный влез не в своё дело?",
    "Народ, кто-то там залез в мою нычку, проверьте.",
    "Что-то маячок сработал на моей нычке - залез что-ли кто?",
    "Э! А ну харэ в моём схроне крысятничать! В репу засвечу - мало не покажется!",
    "Вот кто-то сейчас огребёт! Не суй нос в чужой хабар!"
}

local trs_sound_flag, trs_sound_sid = false, nil

function on_use_obj( obj )
    if obj:clsid() == CLID_INVENTORY_BOX then
        local act   = db.actor
        local story = obj:story_id()
        if trs_sid_sound[ story ] then
            local activ = act:active_slot()
            if activ == NONE_SID or activ == NONE_CL_SID then
                local rnd_snd = trs_sid_sound[ story ]
                local sound   = sound_object(
                    "script_sound\\treasure_sounds\\treasure_" .. rnd_snd .. "_open"
                )
                sound:play_at_pos( act, act:position(), 0 )
                trs_sound_flag = true
                trs_sound_sid  = story
            end
        end
        local box_id = obj:id()
        if
            amk_offline_alife.get_box_owner( box_id )
            and amk_offline_alife.get_box_owner( box_id ) ~= BAD_OBJ_ID
        then
            local owner_id = amk_offline_alife.get_box_owner( box_id )
            local owner    = g_sim:object( owner_id )
            if owner and IsStalker( owner ) and owner.health and owner:health() > 0 then
                local vname = amk_offline_alife.get_npc_name( owner )
                local grupp = game.translate_string( owner:community() )
                local mtext = vname .. ". " .. grupp
                    .. ". " .. news_main.get_level_name( news_main.get_object_levelname( owner ) ) .."."
                send_tip( "Владелец этой нычки " .. mtext, "Чужой тайник", 1, 10, "default", "task", "red" )
                local rnd_tip = lua_random( 1, #repliks )
                amk.send_tip( repliks[ rnd_tip ], vname, 45, 13, "uniq" )
                amk_offline_alife.set_box_owner( box_id, BAD_OBJ_ID )
                timers.start_timer(
                    "box_owner_"..box_id.."a", 0, 2, 45, "sak.empty_box( "..box_id.." )"
                )
            else
                send_tip(
                    "Владелец этого тайника умер...", vname, 1, 10, "default", "task", "green"
                )
                amk_offline_alife.set_box_owner( box_id, BAD_OBJ_ID )
            end
        end
        sak_minigame.thimbles_explosion( obj )
    end
end

function empty_box( box_id )
    local ids, cnt = registry.inv_objects( box_id, true )
    for n = 1, cnt do
        local id = ids[ n ]
        misc.release_obj( id )
    end
end

function on_close_treas()
    if trs_sound_flag then
        trs_sound_flag = false
        local act      = db.actor
        if trs_sid_sound[ trs_sound_sid ] then
            local rnd_snd = trs_sid_sound[ trs_sound_sid ]
            local sound   = sound_object(
                "script_sound\\treasure_sounds\\treasure_" .. rnd_snd .. "_close"
            )
            sound:play_at_pos( act, act:position(), 0 )
        end
    end
end

function val_escort_actor_at_ambush()
    local actor   = db.actor
    local bandit1 = level_object_by_sid( 407 )
    local bandit2 = level_object_by_sid( 408 )
    local bandit3 = level_object_by_sid( 403 )
    if bandit1 then bandit1:set_relation( game_object.enemy, actor ) end
    if bandit2 then bandit2:set_relation( game_object.enemy, actor ) end
    if bandit3 then bandit3:set_relation( game_object.enemy, actor ) end
end

function close_window()
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
end

function sidor_in()
    local objt = g_sim:story_object( story_ids.escape_trader )
    if not objt then misc.spawn_by_name( "escape_trader" ) end
end

function sidor_out()
    local objt = g_sim:story_object( story_ids.escape_trader )
    if objt then misc.release_obj( objt, 'sak.script:5163' ) end
end

function provodnik_body_full_out()
    misc.release_by_name( "marsh_provodnik_sev_khutor_body" )
    misc.release_by_name( "marsh_ecolog1_sev_khutor" )
    misc.release_by_name( "marsh_ecolog2_sev_khutor" )
end

function provodnik_body_out()
    misc.release_by_name( "marsh_provodnik_sev_khutor_body" )
    timers.start_timer( "marsh_prdk", 1, 10, 0, "sak.marsh_provodnik_sev_khutor()" )
end

function marsh_provodnik_sev_khutor()
    db.actor:give_info_portion( "marsh_provodnik_life" )
end

local sounds_types = {
    marsh                 = "Outdoors",
    aver                  = "Forest",
    atp_for_test22        = "Outdoors",
    generators            = "Outdoors",
    hospital              = "Hospital",
    limansk               = "Limansk",
    deadcity              = "Limansk",
    lost_village          = "Outdoors",
    puzir                 = "Forest",
    red_forest            = "Forest",
    av_peshera            = "Peshery",
    peshera               = "Peshery",
    warlab                = "Underground",
    l01_escape            = "Outdoors",
    l02_garbage           = "Outdoors",
    l03_agroprom          = "Outdoors",
    l03u_agr_underground  = "Underground",
    l04_darkvalley        = "Outdoors",
    k01_darkscape         = "Outdoors",
    l04u_labx18           = "Underground",
    labx8                 = "Underground",
    labx10                = "Underground",
    l05_bar               = "Outdoors",
    l06_rostok            = "Rostok",
    l07_military          = "Outdoors",
    l08_yantar            = "Outdoors",
    l08u_brainlab         = "Underground",
    l10_radar             = "Outdoors",
    l10u_bunker           = "Underground",
    l11_pripyat           = "Pripyat",
    l12_stancia_new       = "Outdoors",
    l12_stancia_2_new     = "Outdoors",
    l12u_control_monolith = "Stancia",
    l12u_sarcofag         = "Stancia"
}

local fall_objects = {
    "physics\\box\\box_1c.ogf",
    "physics\\box\\box_lab_033.ogf",
    "physics\\box\\box_wood_01.ogf",
    "physics\\box\\box_wood_tara.ogf",
    "physics\\box\\seif_01.ogf",
    "physics\\box\\expl_dinamit.ogf",
    "physics\\box\\box_metall_01.ogf",
    "physics\\dead_body\\skelet_combine_pose_04.ogf",
    "dynamics\\medical_object\\wheel_litter_01_braked.ogf",
    "physics\\balon\\bochka_close_3.ogf",
    "physics\\balon\\bidon.ogf",
    "physics\\balon\\bochka_fuel.ogf"
}

local table_skelets = {
    "physics\\dead_body\\skelet_combine_pose_00.ogf",
    "physics\\dead_body\\skelet_combine_pose_01.ogf",
    "physics\\dead_body\\skelet_combine_pose_02.ogf",
    "physics\\dead_body\\skelet_combine_pose_03.ogf",
    "physics\\dead_body\\skelet_combine_pose_04.ogf",
    "physics\\dead_body\\skelet_combine_pose_05.ogf",
    "physics\\dead_body\\skelet_combine_pose_06.ogf",
    "physics\\dead_body\\skelet_crash.ogf",
    "physics\\dead_body\\skelet_crash_monster.ogf"
}

function add_sak_skelets( lname )
    -- local aaa   = 0
    -- local count = 2
    -- if lname == "hospital" then count = 1 end
    -- local pl = nlc_vars.prev_level or "?"
    -- if pl == lname then -- на текущем уровне уже спавнилось
    --     wprintf( "[~T]. #DBG: add_sak_skelets уже вызывалась на локации~C0A %s~C07", lname )
    --     return
    -- end
    -- while aaa < count do
    --     local new_lv, pos = const.random_level_point()
    --     if new_lv and amk_anoms.check_coordinates( pos ) then
    --         local obj      = misc.spawn_obj( "sak_skelet", pos )
    --         local rand_vis = table_skelets[ lua_random( 1, #table_skelets ) ]
    --         if obj then
    --             local pk          = get_netpk( obj, 1 )
    --             local data        = pk:get()
    --             data.object_flags = -197
    --             data.visual_name  = rand_vis
    --             data.physic_type  = 3
    --             data.mass         = 10
    --             pk:set( data )
    --             aaa = aaa + 1
    --         end
    --     end
    -- end
    local block_spawn = xray_vars.load_table( nlc_vars, "block_spawn", {} )
    for i = #block_spawn, 1, -1 do
        v = v - 1
        if v <= 0 then block_spawn[ i ] = nil end
    end
    local idl = FindSpawnIDS( lname .. "_surprise_box*", 'by_name', false, true )
    local err = 0
    for k, v in pairs( idl ) do
        if ( lua_random() < 0.15 ) and not block_spawn[ v ] then
            if nil == misc.spawn_by_index( v ) then err = err + 1 end
            block_spawn[ v ] = 15
        end
    end
    nlc_vars.block_spawn = block_spawn
    if err > 0 then
        wprintf( " errors = %d, idl: ", err )
        dump_table( idl )
    end
end

local table_monsters = {
    --{ "pseudodog_normal", 2 },
    { "tushkano_normal",  4 },
    { "dog_normal",       4 },
    { "boar_normal",      2 }
}

local table_winds = {
    "ambient\\wind_gusty_1",
    "ambient\\wind_gusty_2",
    "ambient\\wind_gusty_3",
    "ambient\\wind1",
    "ambient\\wind2",
    "ambient\\wind3",
    "ambient\\wind_trees_1",
    "ambient\\wind_trees_2",
    "ambient\\wind_trees_3"
}

local f_s_flag = true

function fear_sounds()
    if f_s_flag then f_s_flag = false return end
    local actor   = db.actor
    local act_pos = actor:position()
    if amk_anoms.check_coordinates( act_pos ) then
        local lvid   = actor:level_vertex_id()
        local gvid   = actor:game_vertex_id()
        local lname  = level.name()
        local radius = 3
        local dir    = vector_rotate_y( actor:direction(), ( 240 - 20 * lua_random( 1, 6 ) ) )
        local lv     = level.vertex_in_direction( actor:level_vertex_id(), dir, radius )
        local pos
        if not lv then
            lv  = actor:level_vertex_id()
            pos = actor:position():add( v3f( dir.x * radius, 0, dir.z * radius ) )
        else
            pos = level.vertex_position( lv )
        end
        local rands = lua_random( 1, 4 )
        if lname ~= "aver" then
            if rands == 2 then
                local robjd = amk.spawn_item( "fear_sound_item", pos, gvid, lv )
                if robjd then
                    local pk         = get_netpk( robjd, 1 )
                    local data       = pk:get()
                    data.custom_data = "[logic]\ncfg=scripts\\fear_sound_"..sounds_types[lname]..".ltx"
                    data.mass        = 0.1
                    pk:set( data )
                end
            elseif rands == 3 and const.ground_levels[ lname ] then
                pos = actor:position():add( v3f( dir.x * 10, 2, dir.z * 10 ) )
                phantom_manager.spawn_phantom( pos )
            elseif rands == 4 and const.ground_levels[ lname ] then
                --add_rad()
            elseif rands == 1 and const.ground_levels[ lname ] then
                visual_eff     = { "elektra", "tramplin", "voronka", "garka", "karusel", "holodec", "g_puh", "pustishka" }
                local rand_vis = visual_eff[ lua_random( 1, #visual_eff ) ]
                local particle = particles_object( vergas_art.visual_effect[ rand_vis ][ 1 ] )
                local sound    = sound_object( vergas_art.visual_effect[ rand_vis ][ 2 ] )
                particle:play_at_pos( pos )
                sound:play_at_pos( actor, pos, 0 )
            end
        else
            if not ( act_pos.y > -24 and act_pos.y < -21 ) then
                if rands == 1 then
                    local obj      = misc.spawn_obj( "fall_object", v3f( act_pos.x, act_pos.y+5, act_pos.z ) )
                    local rand_vis = fall_objects[ lua_random( 1, #fall_objects ) ]
                    if obj then
                        local pk         = get_netpk( obj, 1 )
                        local data       = pk:get()
                        data.visual_name = rand_vis
                        data.mass        = 20
                        pk:set( data )
                        schedule.add( "hit_obj", "sak.hit_item("..obj.id..")", 500 )
                    end
                elseif rands == 2 then
                    lv = level.vertex_in_direction( actor:level_vertex_id(), dir, 5 )
                    if not lv then
                        lv  = actor:level_vertex_id()
                        pos = actor:position():add( v3f( dir.x, 0, dir.z ) )
                    else
                        pos = level.vertex_position( lv )
                    end
                    pos               = ( v3f( pos.x, 5, pos.z ))
                    local rand_monstr = table_monsters[ lua_random( 1, #table_monsters ) ]
                    local logic       = "[smart_terrains]\nnone = true\n[spawner]\nday_night_switch=false\nmin_distance=2"
                    for i = 1, lua_random( rand_monstr[ 2 ] / 2, rand_monstr[ 2 ] + 2 ) do
                        local obj        = amk.spawn_item( rand_monstr[ 1 ], pos, gvid, lv )
                        local pk         = get_netpk( obj, 1 )
                        local data       = pk:get()
                        data.custom_data = logic
                        pk:set( data )
                        if obj then
                            local id = obj.id
                            timers.start_timer( "off_obj_"..id.."a", 160+i*10, "sak.off_monster( "..id.." )" )
                        end
                        off_on( obj )
                    end
                elseif rands == 4 then
                    --add_rad()
                elseif rands == 3 then
                    if lua_random() > 0.4 then
                        local robjd = amk.spawn_item( "fear_sound_item", pos, gvid, lv )
                        if robjd then
                            local pk         = get_netpk( robjd, 1 )
                            local data       = pk:get()
                            data.custom_data = "[logic]\ncfg=scripts\\fear_sound_"..sounds_types[lname]..".ltx"
                            pk:set( data )
                        end
                    else
                        local dir    = device().cam_dir
                        local coor_x = -dir.x
                        local coor_y = dir.y
                        local coor_z = -dir.z
                        params.set_direction( coor_x, coor_y, coor_z )
                    end
                end
            end
        end
    end
end

local safety_tesla_points = {
    { 2000, 0, 2000 },
    { 206.16273498535, 28.530590057373, -568.36614990234, 574392, 3143 },
    { 188.88790893555, 28.407052993774, -579.87365722656, 554502, 3137 },
    { 177.28559875488, 28.813053131104, -567.64813232422, 540907, 3137 },
    { 167.05584716797, 28.335535049438, -560.47973632813, 529569, 3137 },
    { 172.37252807617, 30.219163894653, -526.41491699219, 535378, 3134 },
    { 210.62889099121, 30.627838134766, -507.61877441406, 579218, 3146 },
    { 252.20384216309, 16.764856338501, -443.83535766602, 627615, 3152 },
    { 253.73162841797, 19.819845199585, -420.94604492188, 629337, 3152 },
    { 206.74211120605, 17.855730056763, -381.42178344727, 574632, 3141 },
    { 169.75051879883, 17.507637023926, -356.78179931641, 533150, 3141 },
    { 139.97927856445, 19.70422744751,  -342.45495605469, 498423, 3124 },
    { 86.832130432129, 29.537908554077, -371.22845458984, 437515, 3115 },
    { 53.825637817383, 29.25489616394,  -404.47604370117, 399047, 3113 },
    { 13.962972640991, 27.124355316162, -427.95587158203, 351875, 3113 },
    { 24.507537841797, 24.311304092407, -462.35305786133, 364587, 3113 },
    { 38.675411224365, 32.186199188232, -501.36840820313, 380701, 3118 },
    { 13.082375526428, 28.954113006592, -504.64947509766, 350939, 3107 },
    { -14.547506332397, 32.953128814697, -524.51867675781, 318314, 3107 },
    { -65.492607116699, 33.434078216553, -535.29718017578, 259293, 3100 },
    { -92.030624389648, 38.728912353516, -519.77862548828, 229928, 3100 },
    { -99.381660461426, 37.583679199219, -485.45922851563, 220984, 3096 },
    { -110.65888977051, 33.677127838135, -445.5908203125, 208000, 3099 },
    { -103.35182952881, 33.436145782471, -393.58676147461, 216252, 3097 },
    { -138.92584228516, 25.55295753479, -332.97396850586, 176284, 3091 },
    { -152.2766418457, 26.841403961182, -330.58911132813, 159961, 3091 },
    { -141.55166625977, 24.615270614624, -319.59600830078, 173017, 3091 },
    { -119.97354125977, 22.832647323608, -311.17535400391, 197805, 3091 },
    { -99.764793395996, 22.96084022522, -299.10443115234, 220418, 3098 },
    { -101.74895477295, 27.0224609375, -272.4469909668, 218830, 3092 },
    { -106.97282409668, 28.878374099731, -254.90386962891, 212378, 3092 },
    { -109.2717590332, 30.451862335205, -214.05880737305, 209963, 3090 },
    { -113.10208892822, 27.821075439453, -186.69065856934, 205838, 3095 },
    { -108.9351272583, 22.412796020508, -157.49519348145, 210043, 3095 },
    { -149.30715942383, 26.357091903687, -133.35638427734, 164305, 3095 },
    { -212.3752746582, 28.811525344849, -93.059631347656, 92497, 3076 },
    { -196.43717956543, 32.175457000732, -74.41024017334, 110376, 3086 },
    { -179.74647521973, 34.559936523438, -79.810073852539, 129423, 3086 },
    { -155.06184387207, 31.780969619751, -92.147232055664, 157066, 3094 },
    { -154.4384765625, 29.774885177612, -104.08539581299, 157837, 3094 },
    { -165.13131713867, 27.460382461548, -129.5040435791, 146043, 3085 },
    { -143.23234558105, 23.783819198608, -141.35595703125, 170772, 3095 },
    { -107.39171600342, 23.023990631104, -153.2261505127, 212518, 3095 },
    { -80.685897827148, 26.521728515625, -149.17333984375, 242983, 3095 },
    { -69.384437561035, 28.474611282349, -127.89789581299, 255943, 3095 },
    { -73.714866638184, 31.508386611938, -89.201370239258, 251309, 3102 },
    { -31.979194641113, 29.268856048584, -76.498275756836, 297775, 3102 },
    { 13.204751968384, 19.061538696289, -57.991981506348, 351516, 3111 },
    { 40.709373474121, 25.370922088623, -62.118949890137, 383779, 3111 },
    { 71.181922912598, 24.859436035156, -76.506042480469, 420051, 3120 },
    { 116.54376983643, 25.879892349243, -96.230117797852, 471500, 3125 },
    { 151.32678222656, 28.366144180298, -60.652019500732, 511414, 3125 },
    { 110.01800537109, 28.670442581177, -57.267562866211, 464288, 3121 },
    { 86.130264282227, 25.364288330078, -59.298152923584, 437097, 3121 },
    { -2000, 0, -2000 }
}

function spawn_metki()
    for i = 2, ( (#safety_tesla_points ) - 1 ), 1 do
        local robjd = amk.spawn_item( "dots_item",
            v3f( safety_tesla_points[ i ][ 1 ], safety_tesla_points[ i ][ 2 ], safety_tesla_points[ i ][ 3 ] ),
            safety_tesla_points[ i ][ 5 ], safety_tesla_points[ i ][ 4 ]
        )
        if robjd then
            amk.add_spot_on_map( robjd.id, "way_point_location" )
        end
    end
end

function safety_way()
    local radius, rast, point = 5, 0, 2
    local pos     = db.actor:position()
    local mindist = 1000
    local dist
    for id, o in pairs( safety_tesla_points ) do
        dist = pos:distance_to( v3f( o[ 1 ], o[ 2 ], o[ 3 ] ) )
        if dist < mindist then mindist = dist point = id end
    end
    local p1, p2, p3 = safety_tesla_points[ point ], safety_tesla_points[ point + 1 ], safety_tesla_points[ point - 1 ]
    if pos:distance_to( v3f( p3[ 1 ], p3[ 2 ], p3[ 3 ] ) ) < pos:distance_to( v3f( p2[ 1 ], p2[ 2 ], p2[ 3 ] ) ) then
        p2 = p3
    end
    rast = math.abs(
        ( ( p2[ 1 ] - p1[ 1 ] ) * pos.z + ( p1[ 3 ] - p2[ 3 ] ) * pos.x + ( p1[ 1 ] * p2[ 3 ] - p2[ 1 ] * p1[ 3 ] ) ) / ( ( ( p2[ 1 ] - p1[ 1 ] )^2 + ( p2[ 3 ] - p1[ 3 ] )^2 )^0.5 ) )
    return rast > radius
end

function hit_item( id )
    local obj1 = client_obj( id )
    if obj1 then
        local h     = hit()
        h.power     = 0.5
        h.direction = db.actor:direction()
        h.draftsman = db.actor
        h.impulse   = 500
        h.type      = hit.wound
        obj1:hit( h )
    end
end

function off_monster( id )
    local obj1 = g_sim:object( id )
    if obj1 and IsMonster( obj1 ) then
        local obj = client_obj( id )
        if obj then
            local pos      = obj:position()
            local r        = lua_random( 0, 2 )
            local particle = particles_object( "anomaly2\\body_tear_0" .. r )
            particle:play_at_pos( pos )
        end
        misc.release_obj( obj1, 'sak.script:5434')
    end
end

function speaker_sounds( sid, flag )
    local obj = g_sim:story_object( sid )
    if obj then
        snd_obj = xr_sound.get_safe_sound_object( "device\\speaker_1" )
        snd_obj:play_no_feedback( obj, sound_object.s2d, 0, vector(), 1.0 )
    end
end

-- А давай где угодно на уровне спавниться и небольшой шанс редкого арта вдобавок??
function spawn_art_semeneckyi()
    local lname = level.name()
    local lvc   = const.level_vertices[ lname ]
    if
        lvc ~= nil
        and const.ground_levels[ lname ]
        and not sleep_manager.is_sleep_active()
    then
        for i = 1, 20 do
            local new_lv, pos = const.random_level_point( lname )
            if
                amk_anoms.check_coordinates_arts( pos, lname )
                and new_lv ~= nil
            then
                local new_gw  = const.best_game_vertex( pos )
                local section = sak_dialog.rand_semart()
                local sobj    = amk.spawn_item( section, pos, new_gw, new_lv )
                if sobj then
                    nlc_vars.semart_id = sobj.id                    -- для статистики
                    test.add_art_to_vars( sobj.id )                 -- для статистики
                    vergas_art.add_in_tbl( sobj )
                end
                wprintf( "@------------- eternal art spawned successfully after " .. i .. " tries... PRAISE BE!" )
                nlc_vars.semeneckyi_done = true
                return
            end
        end
    end
end

function kick_zombi()
    trup:set_const_force( v3f( 0, 1, 0 ):normalize(), 50000, 2 )
    local phe = trup:get_physics_shell():get_element_by_bone_name( "bip01_head" )
    if phe then phe:apply_force( 0, 80000, 0 ) end
end

function empty_banka_fill()
    local actor                 = db.actor
    local act_pos               = actor:position()
    local dir                   = device().cam_dir
    local a                     = vector() a.y = math.atan2( dir.x, dir.z )
    local xdelta                = math.sin( a.y )
    local zdelta                = math.cos( a.y )
    local lvid                  = actor:level_vertex_id()
    local gvid                  = actor:game_vertex_id()
    local id, pos, radius, dist = amk_anoms.get_nearest_anomaly_for_pos( act_pos )
    if
        id
        and dist - radius < -0.5
        and level.name() == "aver" -- [голосом магистра Йоды] Только в ТЧ холодец набирать должен ты
        and act_pos:distance_to( v3f( 64.61, -9.53, -182 ) ) < 70     -- в озере большом
    then             
        local anom_sect = client_obj( id ):section()
        if strpos( anom_sect, "_buzz", 1, true ) ~= nil then
            local self = level.main_input_receiver()
            if self then self:GetHolder():start_stop_menu( self, true ) end
            empty_banka_full() return
        end
    end
    amk.spawn_item( "banka",
        v3f( ( act_pos.x + xdelta ), ( act_pos.y + 0.2 ), ( act_pos.z + zdelta ) ),
        gvid, lvid
    )
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
end

function empty_banka_full() create_items( db.actor, "banka_full", 1 ) end

function banka_full_use()
    local actor     = db.actor
    local act_pos   = actor:position()
    local lvid      = actor:level_vertex_id()
    local gvid      = actor:game_vertex_id()
    local shape     = { shtype = 0, radius = 1.0, center = { 0, 0.5, 0 } }
    local shapes    = {}
    local anom_flag = 0
    for a, i in pairs( db.storage ) do
        local objg = client_obj( a )
            if objg then
                if
                    ( objg and IsMonster( objg )
                    and objg:position():distance_to( actor:position()) < 1
                    and not objg:alive() )
                then
                    chuchelo_make( objg )
                    anom_flag = 1
                    break
                end
            end
        end
        if anom_flag == 0 then
            amk_anoms.spawn_anomaly( "amk_zone_buzz_weak", act_pos, gvid, lvid, shape, "on" )
        end
        local self = level.main_input_receiver()
        if self then self:GetHolder():start_stop_menu( self, true ) end
end

function add_rad()
    local actor = db.actor
    if not actor then return end
    local act_pos = actor:position()
    local lvid    = actor:level_vertex_id()
    local gvid    = actor:game_vertex_id()
    local rds     = math.ceil( 6 * loka_on )
    local sobj    = amk.spawn_item( "zone_radioactive_weak", act_pos, gvid, lvid )
    if sobj then
        local pk   = get_netpk( sobj )
        local data = pk:get()
        data.shapes:addSphere( rds, sak.v3f( 0, 1, 0 ))
        pk:set( data )
        timers.start_timer( "off_obj", rds, "sak.off_rad( "..sobj.id.." )" )
    end
    local particle = particles_object( "anomaly2\\gravity_blast_01" )
    particle:play_at_pos( act_pos )
end

function off_rad( id )
    local obj1 = g_sim:object( id )
    if obj1 then misc.release_obj( obj1, 'sak.script:5557') end
end

function chuchelo_make( objg )
    local trup_sect = objg:section()
    local trup_pos  = objg:position()
    local lvid      = objg:level_vertex_id()
    local gvid      = objg:game_vertex_id()
    amk.remove_item( objg )
    local chuch = amk.spawn_item( "chuchelo_" .. trup_sect,
        v3f( ( trup_pos.x ), ( trup_pos.y ), ( trup_pos.z ) ), gvid, lvid
    )
end

local time_step_water     = 500
local time_previous_water = time_global()
local step                = 0
local step1               = 0

function marsh_radiation()
    local actor   = db.actor
    local act_pos = actor:position()
    local l_name  = level.name()
    local time_current, time_delta, snd_obj, snd_rand, delta_radiation
    --------------------------------------------------------------------
    if l_name ~= "aver" then
        if step1 == 1 then
            nvd_params.set_off_nv()
        end
        if step1 <= 1 then
            step1 = step1 + 1
        else
            step1 = 0
        end
    end
    --------------------------------------------------------------------
    if l_name == "l12u_sarcofag" then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        if time_delta >= time_step_water then
            if step == 5 then
                if ( act_pos.y > 18.0 and act_pos.y < 53.5 ) or act_pos.y > 58.0 then
                    local dir       = device().cam_dir
                    local a         = vector() a.y = math.atan2( dir.x, dir.z )
                    local xdelta    = math.sin( a.y )
                    local zdelta    = math.cos( a.y )
                    local particle  = particles_object( "anomaly2\\electra_entrance_big" )
                    local sound     = sound_object( [[anomaly\emi_entrance]] )
                    local pos_blast = v3f(
                        ( act_pos.x + xdelta ), ( act_pos.y + 0.4 ), ( act_pos.z + zdelta )
                    )
                    particle:play_at_pos( pos_blast )
                    sound:play_at_pos( actor, pos_blast, 0 )
                    local h     = hit()
                    h.draftsman = actor
                    h:bone( "bip01_spine" )
                    h.type      = hit.shock
                    h.power     = 0.1 * ( 1 + ( 100 / ( ( v3f( 13.5, 40.2, -230.7 ):distance_to( act_pos ) ) + 10 ) ) )
                    h.impulse   = 0.0
                    actor:hit( h )
                end
            end
            if step <= 10 then
                step = step + 1
            else
                step = 0
            end
            local point1 = v3f( 41, -0.1, 38 )
            local point2 = v3f( 27, 50, -13 )
            local dist1  = ( point1:distance_to( act_pos ) )
            local dist2  = ( point2:distance_to( act_pos ) )
            if ( dist1 < 30 and dist1 > 4 ) or ( dist2 < 40 and dist2 > 6 ) then
                dist1 = ( math.log10( 30 / dist1 ) )
                dist2 = ( math.log10( 40 / dist2 ) )
                if lua_random() < dist1 or lua_random() < dist2 then
                    local yaw    = 3 * lua_random()
                    local radius = 10 * ( lua_random() + 0.5 )
                    local pos    = vector():set(
                        math.sin( yaw ) * radius + act_pos.x,
                        act_pos.y+2, math.cos( yaw ) * radius + act_pos.z
                    )
                    phantom_manager.spawn_phantom( pos )
                end
            end
            time_previous_water = time_current
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "aver" then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        if time_delta >= 3 * time_step_water then
            local point = v3f( -343, -30, 167 )
            local dist  = ( point:distance_to( act_pos ) )
            if dist < 90 and dist > 4 then
            dist = ( math.log10( 90 / dist ) )
            if lua_random() < dist then
                local yaw    = 3 * lua_random()
                local radius = 10 * ( lua_random() + 0.5 )
                local pos    = vector():set(
                    math.sin( yaw ) * radius + act_pos.x,
                    act_pos.y + 2, math.cos( yaw ) * radius + act_pos.z
                )
                phantom_manager.spawn_phantom( pos )
                end
            end
            time_previous_water = time_current
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "marsh" then
        if act_pos.y < -0.01 then
            time_current = time_global()
            time_delta   = time_current - time_previous_water
            if time_delta >= time_step_water then
                snd_rand        = lua_random( 1, 4 )
                delta_radiation = -0.02 * act_pos.y * ( snd_rand )
                if delta_radiation > 0 then
                    actor.radiation = delta_radiation
                    snd_rand_geiger()
                    local r_healh = actor.power - delta_radiation * 5
                    if r_healh >= 0.05 then params.power_health_add( r_healh ) end
                end
                time_previous_water = time_current
            end
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "generators" then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        if time_delta >= time_step_water then
            if
                act_pos.y < 24.58
                and not ( act_pos.x < 250 and act_pos.x > 215 and act_pos.z <- 90 and act_pos.z >- 115 )
            then
                snd_rand        = lua_random( 1, 4 )
                delta_radiation = -0.02 * ( act_pos.y - 24.58 ) * ( snd_rand )
                if delta_radiation > 0 then
                    actor.radiation = delta_radiation
                    snd_rand_geiger()
                end
            end
            if step == 5 then
                if
                    not
                    ( act_pos.y < 37.0 and act_pos.x < -121 and act_pos.x > -127 and act_pos.z < -476 and act_pos.z > -482 )
                    and not
                    ( act_pos.y < 29.2 and act_pos.x < 155 and act_pos.x > 89 and act_pos.z < -500 and act_pos.z > -508 )
                    and not
                    ( act_pos.y < 30.8 and act_pos.x < 174 and act_pos.x > 169 and act_pos.z < -483 and act_pos.z > -495 )
                    and not
                    ( act_pos.x < 250 and act_pos.x > 215 and act_pos.z < -90 and act_pos.z > -115 )
                    and safety_way()
                then
                    local dir = device().cam_dir
                    if not has_alife_info( "tesla_free" ) then
                        local a         = vector()
                        a.y             = math.atan2( dir.x, dir.z )
                        local xdelta    = math.sin( a.y )
                        local zdelta    = math.cos( a.y )
                        local particle  = particles_object( "anomaly2\\electra_entrance_big" )
                        local sound     = sound_object( [[anomaly\emi_entrance]] )
                        local pos_blast = v3f(
                            ( act_pos.x + xdelta ), ( act_pos.y + 0.4 ), ( act_pos.z + zdelta )
                        )
                        particle:play_at_pos( pos_blast )
                        sound:play_at_pos( actor, pos_blast, 0 )
                        -------------------------------------------------------------------------------------------
                        local arm = actor:item_in_slot( 6 )
                        local hit_reduct, pda_brk_chns = 1, 0.07    -- снижение хита, шанс поломки пда на 1 разряд
                        if arm ~= nil then                          -- Если инвалид в экзе, то хит в 5 раз больше
                            if strposx ( arm:section(), "exo" ) then hit_reduct = 5 end
                        end
                        if sak.arts_operate == true then            -- если носим "Изолятор", то меньше шанс поломки ПДА
                            if sak_inventory.belt_items[ "af_dummy_dummy_new" ] then
                                pda_brk_chns = 0.02
                                arc_arts.discharge_art_on_belt( "af_dummy_dummy_new", 0.004 )
                            end
                        end
                        local h     = hit()
                        h.draftsman = actor
                        h.type      = hit.shock
                        h.power     = 0.1 * ( 1 + ( 100 / ( ( v3f( 13.5, 40.2, -230.7 ):distance_to( act_pos ) ) + 10 ) ) ) * hit_reduct
                        h.impulse   = 0.0
                        h:bone( "bip01_spine" )
                        actor:hit( h )
                        -- добавим небольшой шанс поломки ПДА при разряде на Тесла
                        if lua_random() < pda_brk_chns then
                            if not actor:has_info( "pda_will_be_broken" ) then
                                actor:give_info_portion( "pda_will_be_broken" )
                            end
                        end
                    end
                end
            end
            if step <= 10 then
                step = step + 1
            else
                step = 0
            end
            time_previous_water = time_current
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "l11_pripyat" then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        if time_delta >= time_step_water then
            if amk_anoms.check_coordinates( act_pos ) then
                snd_rand        = lua_random( 1, 4 )
                delta_radiation = 0.0015 * ( snd_rand )
                actor.radiation = delta_radiation
                snd_rand_geiger()
            end
            local tired = -( math.log10( 55 / ( v3f( 31, 0, 483 ):distance_to( act_pos ) ) ) )
            if tired < 0.01 then tired = 0 elseif tired > 1 then tired = 0.9 end
            local r_healh = actor.power + tired
            params.power_max_out( tired )
            params.power_health_add( r_healh )
            time_previous_water = time_current
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "labx8" then
        if
             ( ( act_pos.y < -32.0 and act_pos.x < -90 and act_pos.x > -112 and act_pos.z < 92 and act_pos.z > 72 )
            or ( act_pos.y < -36.0 and act_pos.x < -73 and act_pos.x > -87  and act_pos.z < 95 and act_pos.z > 79 ) )
        then
            time_current = time_global()
            time_delta   = time_current - time_previous_water
            if time_delta >= time_step_water then
                snd_rand        = lua_random( 1, 3 )
                delta_radiation = 0.007 * ( snd_rand )
                actor.radiation = delta_radiation
                snd_rand_geiger()
                time_previous_water = time_current
            end
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "l03_agroprom" then
        if
            ( act_pos.y < 1.7 and act_pos.x < -150 and act_pos.x > -220 and act_pos.z < 150 and act_pos.z > 0 )
        then
            time_current = time_global()
            time_delta   = time_current - time_previous_water
            if time_delta >= time_step_water then
                snd_rand        = lua_random( 1, 3 )
                delta_radiation = 0.01 * ( snd_rand * 2 ) * ( 1.7 - act_pos.y )
                actor.radiation = delta_radiation
                snd_rand_geiger()
                time_previous_water = time_current
            end
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "red_forest" then
        if ( act_pos.y > 8 and act_pos.x < 245 and act_pos.x > 135 and act_pos.z < 110 and act_pos.z > -185 ) then
            time_current = time_global()
            time_delta   = time_current - time_previous_water
            if time_delta >= time_step_water then
                local dir       = device().cam_dir
                local a         = vector() a.y = math.atan2( dir.x, dir.z )
                local xdelta    = math.sin( a.y )
                local zdelta    = math.cos( a.y )
                local particle  = particles_object( "anomaly2\\electra2_blast" )
                local sound     = sound_object( "anomaly\\electra_blast1" )
                local pos_blast = v3f(
                    ( act_pos.x + xdelta ), ( act_pos.y + 0.4 ), ( act_pos.z + zdelta )
                )
                particle:play_at_pos( pos_blast )
                sound:play_at_pos( actor, pos_blast, 0 )
                local h     = hit()
                h.draftsman = actor
                h:bone( "bip01_spine" )
                h.type      = hit.shock
                h.power     = 0.1
                h.impulse   = 0.0
                actor:hit( h )
                time_previous_water = time_current
            end
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "k01_darkscape" then
        if act_pos.y > 30.5 then
            time_current = time_global()
            time_delta   = time_current - time_previous_water
            if time_delta >= time_step_water then
                local dir       = device().cam_dir
                local a         = vector()
                a.y             = math.atan2( dir.x, dir.z )
                local xdelta    = math.sin( a.y )
                local zdelta    = math.cos( a.y )
                local particle  = particles_object( "anomaly2\\electra2_blast" )
                local sound     = sound_object( "anomaly\\electra_blast1" )
                local pos_blast = v3f(
                    ( act_pos.x + xdelta ), ( act_pos.y + 0.4 ), ( act_pos.z + zdelta )
                )
                particle:play_at_pos( pos_blast )
                sound:play_at_pos( actor, pos_blast, 0 )
                local h         = hit()
                h.draftsman     = actor
                h:bone( "bip01_spine" )
                h.type          = hit.shock
                h.power         = 2
                h.impulse       = 0.0
                actor:hit( h )
                time_previous_water = time_current
            end
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "l08_yantar" then
        if act_pos.z > 102 then
            time_current = time_global()
            time_delta   = time_current - time_previous_water
            if time_delta >= time_step_water then
                local dir       = device().cam_dir
                local a         = vector()
                a.y             = math.atan2( dir.x, dir.z )
                local xdelta    = math.sin( a.y )
                local zdelta    = math.cos( a.y )
                local particle  = particles_object( "anomaly2\\electra2_blast" )
                local sound     = sound_object( "anomaly\\electra_blast1" )
                local pos_blast = v3f(
                    ( act_pos.x + xdelta ), ( act_pos.y + 0.4 ), ( act_pos.z + zdelta )
                )
                particle:play_at_pos( pos_blast )
                sound:play_at_pos( actor, pos_blast, 0 )
                local h         = hit()
                h.draftsman     = actor
                h:bone( "bip01_spine" )
                h.type          = hit.shock
                h.power         = 2
                h.impulse       = 0.0
                actor:hit( h )
                time_previous_water = time_current
            end
        end
        return
    end
    --------------------------------------------------------------------
    if l_name == "labx10" and has_alife_info( "labx10_lamp_14_on" ) then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        if time_delta >= 3 * time_step_water then
            local point = v3f( 62, -20, 41 )
            local dist = ( point:distance_to( act_pos ) )
            if dist < 90 and dist > 6 then
                dist = ( math.log10( 90 / dist ) )
                if lua_random() < dist then
                    local yaw    = 3 * lua_random()
                    local radius = 10 * ( lua_random() + 0.5 )
                    local pos    = vector():set(
                        math.sin( yaw ) * radius + act_pos.x,
                        act_pos.y + 2, math.cos( yaw ) * radius + act_pos.z
                    )
                    if lua_random() > 0.66 then phantom_manager.spawn_phantom( pos ) end
                end
            end
            time_previous_water = time_current
            end
        return
    end
    --------------------------------------------------------------------
    if l_name == "l12_stancia_new" then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        for a = 0, 2 do
            local rnd = lua_random( 1, 9 )
            local obj = g_sim:story_object( tonumber( "75" .. a .. rnd ) )
            if obj then
                if lua_random()>0.25 then
                    sim:set_switch_online ( obj.id, true  )
                    sim:set_switch_offline( obj.id, false )
                else
                    sim:set_switch_offline( obj.id, true  )
                    sim:set_switch_online ( obj.id, false )
                end
            end
        end
        if ( act_pos.y < -1.95 ) and ( act_pos.x < 1000 ) and ( time_delta >= time_step_water ) then
            local dir       = device().cam_dir
            local a         = vector()
            a.y             = math.atan2( dir.x, dir.z )
            local xdelta    = math.sin( a.y )
            local zdelta    = math.cos( a.y )
            local particle  = particles_object( "anomaly2\\studen_blowout" )
            local sound     = sound_object( "anomaly\\buzz_hit" )
            local pos_blast = v3f(
                ( act_pos.x + xdelta ), ( act_pos.y ), ( act_pos.z + zdelta )
            )
            particle:play_at_pos( pos_blast )
            sound:play_at_pos( actor, pos_blast, 0 )
            local h         = hit()
            h.draftsman     = actor
            h:bone( "bip01_spine" )
            h.type          = hit.chemical_burn
            h.power         = 0.5 * ( -1.95 - act_pos.y )
            h.impulse       = 0.0
            actor:hit( h )
            time_previous_water = time_current
        end
    end
    --------------------------------------------------------------------
    if l_name == "l12_stancia_2_new" then
        time_current = time_global()
        time_delta   = time_current - time_previous_water
        for a = 3, 5 do
            local rnd = lua_random( 1, 9 )
            local obj = sim:story_object( tonumber( "75" .. a .. rnd ) )
            if obj then
                if lua_random() > 0.25 then
                    sim:set_switch_online ( obj.id, true  )
                    sim:set_switch_offline( obj.id, false )
                else
                    sim:set_switch_offline( obj.id, true  )
                    sim:set_switch_online ( obj.id, false )
                end
            end
        end
        if time_delta >= time_step_water then
            if step == 5 then
                if act_pos.y > 10 then
                    local dir       = device().cam_dir
                    local a         = vector()
                    a.y             = math.atan2( dir.x, dir.z )
                    local xdelta    = math.sin( a.y )
                    local zdelta    = math.cos( a.y )
                    local particle  = particles_object( "anomaly2\\electra_entrance_big" )
                    local sound     = sound_object( [[anomaly\emi_entrance]] )
                    local pos_blast = v3f(
                        ( act_pos.x + xdelta ), ( act_pos.y + 0.4 ), ( act_pos.z + zdelta )
                    )
                    particle:play_at_pos( pos_blast )
                    sound:play_at_pos( actor, pos_blast, 0 )
                    local h         = hit()
                    h.draftsman     = actor
                    h:bone( "bip01_spine" )
                    h.type          = hit.shock
                    h.power         = 0.1 * ( 1 + ( 100 / ( ( v3f( 13.5, 40.2, -230.7 ):distance_to( act_pos ) ) + 10 ) ) )
                    h.impulse       = 0.0
                    actor:hit( h )
                end
            end
            if step <= 10 then
                step = step + 1
            else
                step = 0
            end
            time_previous_water = time_current
        end
    end
end

function dead_prip_kill_zone()
    local actor      = db.actor
    local act_pos    = actor:position()
    local point_zero = v3f( 122, 3, 22 )
    local dist       = point_zero:distance_to( act_pos )
    if dist < 8 then
        if actor.health > 0 then
            return actor:kill( actor )
        else
            return
        end
    end
    snd_rand_geiger()
    local psy_reduse = ( -25 / ( dist^2 ) )
    local rad_add    = ( 50 / ( dist^2 ) )
    params.psy_health_add( psy_reduse )
    params.radiation_add( rad_add )
end

local tmr_hangry = 1

function dead_hangry_zone()
    if tmr_hangry >= 4 then
        tmr_hangry       = 1
        local actor      = db.actor
        local act_pos    = actor:position()
        local point_zero = v3f( -97, 20, -13 )
        local dist       = point_zero:distance_to( act_pos )
        local hangr      = ( -40 / ( dist^2 ) )
        params.satiety_add( hangr )
        local s_healh    = params.actor_satiety_health()
        local r_healh    = actor.power + hangr
        params.power_max_out( s_healh )
        params.power_health_add( r_healh )
    else
        tmr_hangry = tmr_hangry + 1
    end
end

function return_power() params.power_max_out( 1 ) end

trade_flag = false

function cant_trade( obj, sect, id, flag )
    if flag == 1 or flag == 2 then
        params.cant_trade_add( id )
    else
        if strpos( sect, "wpn_", 1, true ) or strpos( sect, "_outfit", 1, true ) then
            local cond = obj:condition()
            if ( cond < 0.65 and trade_flag == false ) then
                params.cant_trade_add( id )
            else
                params.can_trade_add( id )
            end
        else
            params.can_trade_add( id )
        end
    end
end

function can_trade_break()
    trade_flag = true
    sak_inventory.inventory_control()
end

function on_info( info_id )
    if info_id == "ui_car_body_hide" then
        on_close_treas()
        vergas_rucksack.set_flag_drop( true )
        trade_flag = false
    elseif info_id == "ui_car_body" then
        vergas_rucksack.set_flag_drop( false )
        trade_flag = true
        sak_inventory.inventory_control()
    end
end

function snd_rand_geiger()
    local snd_rand = lua_random( 1, 4 )
    local snd_obj
    local detector = db.actor:item_in_slot( 8 )
    if detector and not strpos( detector:section(), "_fake", 1, true ) then
        local sound = "detectors\\geiger_" .. snd_rand
        snd_obj     = xr_sound.get_safe_sound_object( sound )
        snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 0.5 )
    end
end

function no_benzino_sms()
    send_tip(
        "Видать закончился здесь бензиныч.",
        "Да, недолго музыка играла...", 2, 15, "g_g", "sak", "yellow"
    )
end

function kanistra_fill()
    if nlc_vars.benz1 == nil then nlc_vars.benz1 = 0 end
    if nlc_vars.benz2 == nil then nlc_vars.benz2 = 0 end
    local actor   = db.actor
    local act_pos = actor:position()
    local dir     = device().cam_dir
    local a       = vector()
    a.y           = math.atan2( dir.x, dir.z )
    local xdelta  = math.sin( a.y )
    local zdelta  = math.cos( a.y )
    local lvid    = actor:level_vertex_id()
    local gvid    = actor:game_vertex_id()
    local lname   = level.name()
    if
        lname == "l04_darkvalley"
        and amk.check_npc_in_box( actor, point_drop[ 19 ], point_drop[ 20 ] ) ~= false
    then
        if nlc_vars.benz1 <= nlc_vars.stored_r_treas_items then
            timers.start_timer( "knstr_ful", 8, "sak.kanistra_full(1)" )
            nlc_vars.benz1 = nlc_vars.benz1 + 1
            level.disable_input()
            close_window()  snd_toilet()
            return
        else
            no_benzino_sms()
        end
    elseif
        lname == "marsh"
        and amk.check_npc_in_box( actor, point_drop[ 21 ], point_drop[ 22 ] ) ~= false
        and not timers.check_timer( "march_benzinopause" )
    then
        timers.start_timer( "knstr_ful", 8, "sak.kanistra_full(2)" )
        timers.start_timer( "march_benzinopause", 0, lua_random( 18, 24 ), 0 )
        level.disable_input()
        close_window()  snd_toilet()
        return
    elseif
        lname == "k01_darkscape"
        and amk.check_npc_in_box( actor, point_drop[ 43 ], point_drop[ 44 ] ) ~= false
    then
        if nlc_vars.benz2 <= amk_vars.r_task_reward then
            timers.start_timer( "knstr_ful", 8, "sak.kanistra_full(3)" )
            nlc_vars.benz2 = nlc_vars.benz2 + 1
            level.disable_input()
            close_window()  snd_toilet()
            return
        else
            no_benzino_sms()
        end
    end
    amk.spawn_item(
        "kanistra",
        v3f( ( act_pos.x + xdelta ), ( act_pos.y + 0.2 ), ( act_pos.z + zdelta ) ),
        gvid, lvid
    )
    close_window()
end

function snd_toilet()
    local snd_obj
    snd_obj = xr_sound.get_safe_sound_object( "device\\masks\\sink_fill_06" )
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector(), 1.0 )
end

local pos_kanistra_full = {
    [ 1 ] = { 93.54711151123,   0.1252444088459, -66.617233276367, 288576, 992  },
    [ 2 ] = { -8.6355762481689, 3.3410575389862, 8.2768459320068,  134747, 3414 },
    [ 3 ] = { 416.83474731445, -2.0670502185822, -363.38973999023, 930454, 4153 }
}

function kanistra_full( pos )
    pos = tonumber( pos )
    amk.spawn_item( "amk_kanistra",
        v3f( pos_kanistra_full[ pos ][ 1 ], pos_kanistra_full[ pos ][ 2 ], pos_kanistra_full[ pos ][ 3 ] ),
        pos_kanistra_full[ pos ][ 5 ], pos_kanistra_full[ pos ][ 4 ]
    )
    level.enable_input()
end

function actor_jump( obj )
    local actor   = db.actor
    local dir     = device().cam_dir
    local a       = vector() a.y = math.atan2( dir.x, dir.z )
    local ydelta  = 0.3
    local xdelta  = math.sin( a.y ) * 5
    local zdelta  = math.cos( a.y ) * 5
    local act_pos = actor:position()
    local lvid    = actor:level_vertex_id()
    local gvid    = actor:game_vertex_id()
    local a       = v3f( ( act_pos.x + xdelta ), ( act_pos.y + ydelta ), ( act_pos.z + zdelta ) )
    level.add_pp_effector( "teleport.ppe", 50, false )
    local self = level.main_input_receiver()
    if self then
        self:GetHolder():start_stop_menu( self, true )
    end
    if g_sim:object( obj ) then
        misc.release_obj( obj, 'sak.script:5823')
        eff_vodka()
        actor:set_actor_position( a )
    end
end

function actor_jump_up( obj )
    local actor   = db.actor
    local act_pos = actor:position()
    local dir     = device().cam_dir
    local a       = vector() a.y = math.atan2( dir.x, dir.z )
    local ydelta  = 0.3
    local xdelta  = math.sin( a.y ) * 2
    local zdelta  = math.cos( a.y ) * 2
    local lvid    = actor:level_vertex_id()
    local gvid    = actor:game_vertex_id()
    local shape   = { shtype = 0, radius = 1.0, center = { 0, 0.5, 0 } }
    amk_anoms.spawn_anomaly( "amk_zone_no_gravity_weak", act_pos, gvid, lvid, shape, "on" )
    local self = level.main_input_receiver()
    if self then
        self:GetHolder():start_stop_menu( self, true )
    end
    if g_sim:object( obj ) then
        misc.release_obj( obj, 'sak.script:5858')
        eff_vodka()
        actor:set_actor_position( a )
    end
end

function spawn_teleports( pos, lv, gv, r1, r2, section, num )
    local cnt   = 0
    local shape = {}
    while cnt < num do
        local dir     = vector_rotate_y( pos, ( lua_random( 0, 359 ) ) )
        local dist    = r1+lua_random( 1, ( r2-r1 ) )
        local new_lv  = level.vertex_in_direction( lv, dir, dist )
        local new_pos = level.vertex_position( new_lv )
        shape         = { shtype = 0, radius = 4, center = { 0, 0, 0 } }
        amk_anoms.spawn_anomaly(
            section, v3f( new_pos.x, new_pos.y + 1, new_pos.z ), gv, new_lv, shape, "on"
        )
        cnt = cnt + 1
    end
end

function read_comp_news()
    local spwn = ui_hud_attention_comp.attention_comp( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_x18_news()
    local rand = ( amk_vars.x18_iq_check or 2 )
    ui_hud_attention_blank.this_text = "content_x18_text" .. rand
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_esc_news()
    ui_hud_attention_blank.this_text = "content_esc_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_sid_news()
    ui_hud_attention_blank.this_text = "content_sid_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_mar_news()
    ui_hud_attention_blank.this_text = "content_mar_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_prizrak_news()
    ui_hud_attention_blank.this_text = "content_prizrak_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_x10_pults_news()
    ui_hud_attention_blank.this_text = "content_x10_pults_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_labx10_skelet_news()
    local rand = ( amk_vars.x18_iq_check or 2 )
    ui_hud_attention_blank.this_text = "content_labx10_skelet" .. rand .. "_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_bar_news()
    local day = level.get_time_days()
    ui_hud_attention_blank.this_text = "content_bar" .. day .. "_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function read_doktor_news()
    ui_hud_attention_blank.this_text = "content_doktor_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
    db.actor:give_info_portion( "doctor_attention_read" )
end

function doktor_wait_done()
    db.actor:give_info_portion( "esc_find_doctor_start2" )
end

function read_warlab_exit_news()
    local rand = ( amk_vars.r_task_reward or 1 )
    ui_hud_attention_blank.this_text = "content_warlab_exit" .. rand .. "_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
    db.actor:give_info_portion( "generators_code_door" .. rand .. "_info" )
end

function read_scarman_news()
    ui_hud_attention_blank.this_text = "content_scarman_text"
    local spwn = ui_hud_attention_blank.attention_univers_blank( get_hud() )
    level.start_stop_menu( spwn, true )
end

function precondition_black_tip()
    local rnd_black_tip = lua_random( 100 )
    if rnd_black_tip >= 70 then db.actor:give_info_portion( "black_tip_yes" )
    else db.actor:give_info_portion( "black_tip_no" )
    end
end

function precondition_10_percent() precondition_percent( 10 ) end
function precondition_25_percent() precondition_percent( 25 ) end
function precondition_50_percent() precondition_percent( 50 ) end
function precondition_80_percent() precondition_percent( 80 ) end

function precondition_percent( perc )
    local rnd = dsh.get_next_random( "generic_rnd", 100 )
    if rnd < perc then db.actor:give_info_portion( "black_tip_yes" )
    else db.actor:give_info_portion( "black_tip_no" ) end
end

function timer2_volkodav_start()
--timers.start_timer( "volkodav_2wait", 0, 0, 30, "sak.volkodav_2wait_done()" )
end
function volkodav_2wait_done()
--db.actor:give_info_portion( "volkodav_radar_on" )
end
function timer_volkodav_start()
--timers.start_timer( "volkodav_wait", 6, 1, 33, "sak.volkodav_wait_done()" )
end
function start_cook_dream()
timers.start_timer( "cook_dream", 0, 10, 17, "sak.cook_dream_done()" )
end
function cook_dream_done()
db.actor:give_info_portion( "mil_freedom_cook_wakeup" )
end
function volkodav_wait_done()
--db.actor:disable_info_portion( "volkodav_rad_wait" )
end

function atp_bomb_explode( actor, npc )
    local source = nil
    if sim then
        local se_obj = g_sim:story_object( story_ids.esc_physic_destroyable_object_0034 )
        if se_obj then source = client_obj( se_obj.id ) end
    end
    if source == nil then return end
    local rand = lua_random()
    if rand > 0.75 then
        local h     = hit()
        h.power     = 100000
        h.direction = vector():set( 1, 0, 0 )
        h.impulse   = 1
        h.draftsman = source
        h.type      = hit.chemical_burn
        source:hit( h )
        source:explode( 0 )
    end
end

local antirobbing_item = nlc_container.important_items

antirobbing_item.klava               = true
antirobbing_item.quest_case_01       = true
antirobbing_item.quest_case_02       = true
antirobbing_item.quest_case_06       = true
antirobbing_item.dar_document4       = true
antirobbing_item.esc_wounded_flash   = true
antirobbing_item.memory_module       = true
antirobbing_item.self_made_decoder   = true
antirobbing_item.quest_tools         = true
antirobbing_item.scanner_artefact    = true
antirobbing_item.scanner_anomaly     = true
antirobbing_item.sak_resiver_yantar  = true
antirobbing_item.sak_resiver2_yantar = true
antirobbing_item.lab_x16_documents   = true
antirobbing_item.dar_document1       = true
antirobbing_item.dar_document2       = true
antirobbing_item.dar_document3       = true
antirobbing_item.dar_document4       = true
antirobbing_item.dar_document5       = true
antirobbing_item.x10_document1       = true
antirobbing_item.x10_document2       = true
antirobbing_item.marsh_pribor        = true
antirobbing_item.uncoder             = true

function sleep_robbing()
    for i, k in pairs( sak_inventory.rucksack ) do
        if not antirobbing_item[ i ] then
            local kolvo = #k
            for a = 1, kolvo do
                local rnd = lua_random()
                local id  = sak_inventory.rucksack[ i ][ a ]
                local obj = g_sim:object( id )
                if obj and rnd < 0.2 then
                    misc.release_obj( obj, 'sak.script:5982' )
                end
            end
        end
    end
    sak_inventory.need_update_inventory()
end

function sleep_sleep_hits_robbing()
    for i, k in pairs( sak_inventory.rucksack ) do
        if
            ( string.sub( i, 1, 7 ) == "mutant_"
            or strpos( i, "^bread" ) or strpos( i, "kolbasa" ) )
        then
            local kolvo = #k
            for a = 1, kolvo do
                local id  = sak_inventory.rucksack[ i ][ a ]
                local obj = g_sim:object( id )
                if obj then
                    misc.release_obj( obj, 'sak.script:5982' )
                end
            end
        end
    end
    sak_inventory.need_update_inventory()
end

function sleep_hits_treasure_robbing()
    for a = 1000, BAD_OBJ_ID, 1 do
        local obj = g_sim:object( a )
        if obj then
            local nname = obj:name()
            local lname = g_sim:level_name(
                game_graph():vertex( obj.m_game_vertex_id ):level_id()
            )
            if (
                const.ground_levels[ lname ]
                and obj.parent_id
                and obj.parent_id ~= 0
                and obj.parent_id ~= BAD_OBJ_ID
                and g_sim:object( obj.parent_id )
                and
                       ( sim:object( obj.parent_id ):section_name() == "inventory_box"
                    or g_sim:object( obj.parent_id ):section_name() == "rucksack"
                    or g_sim:object( obj.parent_id ):section_name() == "m_inventory_box" )
                and not strpos( sim:object( obj.parent_id ):name(), "hran" )
                and not strpos( sim:object( obj.parent_id ):name(), "_sak_box_" ) )
                or  string.sub( nname, 1, 7 ) == "mutant_"
                or  strpos( nname, "^bread" )
                or  strpos( nname, "kolbasa" )
            then
                misc.release_obj( obj, 'sak.sleep_hits_treasure_robbing' )
            end
        end
    end
end

local mus_bar = {
    "bar_retro",
    "bar_modern",
    "bar_rockn",
    "bar_rock"
}

local rand_stalk = {
    "gar_stalker_general",
    "bar_Stalker_veteran",
    "val_bandit_veteran",
    "bar_Dolg_regular",
    "mil_Svoboda_regular",
    "sim_green_novice",
    "val_bandit_general",
    "sim_green_general",
    "mil_Dolg_specnaz_silence",
    "bar_Stalker_general",
    "mil_Svoboda_specnaz",
    "lost_vil_stalker_general",
    "esc_soldier_regular",
    "lim_svoboda_general"
}

function add_price_arts( obj )
    if not obj then return 0 end
    local art_sect = obj
    local sys_cost = 0
    local ini      = system_ini()
    local cond     = 1
    if type( obj ) ~= "string" then
        art_sect = obj:section()
        cond     = params.get_condition( obj )
    end
    if strposx( art_sect, "arc_art_box_" ) then
        local arts  = arc_containers.get_container_arts( obj:id() )
        local saldo = 0
        if arts then
            for i, rec in ipairs( arts ) do
                local sect = rec.section or rec.x_section
                local cond = rec.condition or 1.0
                if sect ~= "?" and ini:section_exist( sect ) then
                    sys_cost  = ini:r_float( sect, "cost" )
                    have_many = have_many + sys_cost * cond
                    saldo     = saldo + sys_cost * cond
                end
            end
        end
        return saldo
    else
        sys_cost  = ini:r_float( art_sect, "cost" )
        have_many = have_many + sys_cost * cond
    end
    return sys_cost * cond
end

function damage_first_outfit()
    local npc   = db.actor
    local armor = npc:object( "stalker_outfit" ) or npc:item_in_slot( 6 )
    if armor then
        wprintf( "[~T]. #FIRST_RUN: initial damaging~C0A %s~C07", armor:name() )
        params.upd_condition( armor, 0.18 )
    else
        ODS( "~C0C[~T]. #ERROR:~C07 not found outfit in actor inventory" )
        schedule( "dmg_first_outfit", "sak.damage_first_outfit()", 2500 )
    end
end

local outfit_id = 0

function start_progress()
    local npc   = db.actor
    local frun  = ( nlc_vars.first_run == nil )
    local lname = level.name()
    if frun then
        level.add_pp_effector( "agr_u_fade.ppe", 3121, false )
        sak_inventory.inventory_control()
        local nvo   = sak_inventory.rucksack[ "novice_outfit" ]
        local armor = nil
        if nvo then
            misc.release_obj( nvo[ 1 ])
            local armor = misc.spawn_to( "stalker_outfit", 0 )
            if armor then
                params.upd_condition( armor, 0.18 )
                schedule.add( "dmg_first_outfit", "sak.damage_first_outfit()", 500 )
            end
        else
            ODS( "~C0C[~T]. #ERROR:~C07 not found novice outfit in actor inventory" )
        end
        nlc_vars.first_run = false
        sleep_manager.change_sleepiness( 145 )
        params.satiety_add( -0.75 )
        params.offs_huds()
        --ZAGOLSKI
        gnzi.add_first_spawn()
        for aa = 1, 14 do
            sak_dialog.search_npc( rand_stalk[ aa ], "fake_new_gg_"..aa, "fake_new_"..aa )
        end
        sak_dialog.search_npc( "esc_green_respawn_2", "dsc_green_near_dv_dialog", "dsc_near_dv" )
        npc:give_info_portion( "esc_lamp_1_on" )
        game_began = true
    else
        schedule.add( "paused_game", "sak.paused_game()", 500 )
        local rand = lua_random( 1, 4 )
        npc:give_info_portion( mus_bar[ rand ])
        npc:give_info_portion( "ui_inventory" ) -- может здесь оно сбоить не будет?
        local obj = level_object_by_sid( lev_prot[ lname ] )
        if obj then
            local list = registry.local_objects( false, nil, 7 ) -- slow update, online only from current level
            wprintf( "[~T/~U/~B].~C0B #PERF:~C07 start_progress, local online_objects =~C0D %d~C07", #list )
            for i, id in ipairs( list ) do
                local objg = client_obj( iter )
                if objg then
                    local nname = objg:name()
                    if
                        ( obj:id() ~= objg:id() and not strpos( nname, "door" )
                        and not strpos( nname, "work" )
                        and ( objg:parent() == nil or objg:parent() == BAD_OBJ_ID )
                        and ( objg:position():distance_to( obj:position() ) < 1.5 ) )
                    then
                        misc.release_obj( iter, 'sak.script:6109') -- удаление рядом лежащего объекта.. хм
                    end
                end
            end
        end
    end
    day_shmoney = timers.Get_Game_Days() + 1
    day_money   = day_shmoney / 2
    mass_add    = math.floor( day_shmoney / 7 )
    mask_poison = ( 1.1 - balance.level_poisoned[ lname ] ) * 0.2
    dog_psy     = level_difficulty[ lname ] - 0.79
    loka_on     = 1 + math.max ( 0, level_difficulty[ lname ] - 1.3 )
    if lname == "aver" then loka_on = 5 end
    params.offs_huds()
    amk_mod.sync_done      = true
    params.cond_old        = vergas_masks.mask_condition()
    amk_mod.last_condition = 0
    params.cond_wpn_old    = { 0, 0, 0, 0, 0, 0 }
    amk_mod.check_armor()
end

function paused_game()
    level.set_load_title( sprintf( "#sak.paused_game binder_ticks = %d ", bind_stalker.binder_ticks ) )
    local npc = db.actor
    sak_inventory.need_update_inventory()
    local razgruzka_weight = razgruzka.weight_variable_hran()
    params.mem_weight_add ( razgruzka_weight )
    discharge_tasks( true )
    r_old = nlc_vars.light_torch or 0.45
    torch_brock( true, true )
    razgruzka.end_gun_reload()
    npc:give_info_portion( "ui_inventory_hide" )
    breath_poison ()
    if _G.sak_repair_dialog and sak_dialog.update_margin then
        sak_dialog.update_margin()
    end
    black_bonus = nlc_vars.black_off or 1
    game_began  = true
    db.shadow_inv:hide_content( 0 )
    schedule.add( "syn_mon", "amk_anoms.sync_mon()", 4000 )
    if not KeyPressed( 19 ) then
        schedule.add( "pause", "sak.on_load_complete()", 1000 )
    end
    actor_bio()
end

function on_load_complete()
    ODS('~CE0[~T/~U/~B]. #SUCCESS: ---------------------  saved game was complete loaded -------------------------------~C07')
    level.set_load_title( "#st_load_end" )
    db.init_stage = 500
    device():pause( true )
end

function paused_game_began()
    game_began = true
end

-- даунгрейд артефактов при выбросе
function changes_art_class( obj_id )
    if lua_random() > 0.15 then return end
    local obj = sim:object( obj_id )
    if obj then
        --------- чтобы в платных нычках и в тайниках арты не портились ------------
        if
            obj.parent_id ~= nil
            and obj.parent_id ~= BAD_OBJ_ID
            and obj.parent_id ~= 0
        then
            if amk_offline_alife.box_is_protected( g_sim:object( obj.parent_id ) ) then return end
        end
        --------- чтобы в платных нычках и в тайниках арты не портились ------------
        local section = obj:section_name()
        local new_art
        if strpos( section, "_dyn", -6, true ) and not strpos( section, "capsule", 1, true ) then
            local num  = tonumber( string.sub( section, -2, -2 ) )
            local pk   = get_netpk( obj, 1 )
            local data = pk:get()
            local cond = data.condition + 0.0004
            if cond >= 1 then cond = 0.9999 end
            local cond1 = math.floor( cond * 100 )
            if cond1 < 10 then cond1 = "0" .. cond end
            if num == 6 then
                misc.release_obj( obj, 'sak.script:6166')
                return
            end
            num = num - 1
            if num <= 0 then num = 6 end
            new_art = string.sub( section, 1, -7 ) .. "_dyn" .. num .. "d"
            coord_params.set_obj_section( obj_id, new_art )
        end
    end
end

-- апгрейд артефактов при выбросе ( ТЧ )
function changed_art_class( obj_id )
    if not db.actor:has_info( "marsh_new_theme_done" ) then return end
    if dsh.get_next_random( "sak.changed_art_class" ) > 0.95 then return end 
    local obj = sim:object( obj_id )
    if obj then
        local section = obj:section_name()
        local new_art
        if
            strpos( section, "_dyn",   -6, true )
            and not strpos( section, "capsule", 1, true )
        then
            local num   = tonumber( string.sub( section, -2, -2 ) )
            local pk    = get_netpk( obj, 1 )
            local data  = pk:get()
            local cond  = data.condition + 0.0004
            if cond >= 1 then cond = 0.9999 end
            local cond1 = math.floor( cond * 100 )
            if cond1 < 10 then cond1 = "0" .. cond end
            if num == 6 or num == 5 then
                misc.release_obj( obj, 'sak.script:6182' )
                return
            end
            num = num + 1
            if num >= 6 then num = 5 end
            new_art = string.sub( section, 1, -7 ) .. "_dyn" .. num .. "d"
            coord_params.set_obj_section( obj_id, new_art )
        end
    end
end

function gg_not_have_weapon()
    for i, k in pairs( sak_inventory.slots ) do
        if
            ( strpos( i, "wpn_", 1, true )
            and ( i ~= "wpn_knife" )
            and ( i ~= "wpn_binoc" )
            and ( i ~= "bolt" ) )
            or strpos( i, "_outfit", 1, true )
        then
            return false
        end
    end
    for i, k in pairs( sak_inventory.rucksack ) do
        if strpos( i, "wpn_", 1, true ) or strpos( i, "_outfit", 1, true ) then
            return false
        elseif strpos( i, "rucksack", 1, true ) then
            for a = 1, #k do
                local o_id     = k[ a ]
                local ids, cnt = registry.inv_objects( o_id, false )
                for n = 1, cnt do
                    local id   = ids[ n ]
                    local item = client_obj( id )
                    if item then
                        local sect = item:section()
                        if
                            ( strpos( sect, "wpn_", 1, true )
                            and not strpos( sect, "wpn_addon_", 1, true )
                            and ( sect ~= "wpn_binoc" ) and ( sect ~= "wpn_knife" ) )
                            or strpos( sect, "_outfit", 1, true )
                        then
                            return false
                        end
                    end
                end
            end
        end
    end
    return true
end

function gg_not_have_activ_weapon()
    for i, k in pairs( sak_inventory.slots ) do
        if
            ( strpos( i, "wpn_", 1, true )
            and ( i ~= "wpn_knife" ) and ( i ~= "wpn_binoc" ) and ( i ~= "bolt" ) )
        then
            return false
        end
    end
    return true
end

function have_actor_any_wpn()
    for i, k in pairs( sak_inventory.slots ) do
        if
            strpos( i, "wpn_", 1, true )
            and ( i ~= "wpn_binoc" ) and ( i ~= "bolt" )
            and not strpos( i, "wpn_addon_", 1, true ) and ( i ~= "wpn_knife" )
        then
            return true
        end
    end
    for i, k in pairs( sak_inventory.rucksack ) do
        if
            strpos( i, "wpn_", 1, true )
            and not strpos( i, "wpn_addon_", 1, true )
            and ( i ~= "wpn_binoc" ) and ( i ~= "wpn_knife" )
        then
            return true
        elseif strpos( i, "rucksack", 1, true ) then
            for a = 1, #k do
                local o_id     = k[ a ]
                local ids, cnt = registry.inv_objects( o_id, false )
                for n = 1, cnt do
                    local id   = ids[ n ]
                    local item = client_obj( id )
                    if item then
                        local sect = item:section()
                        if
                            strpos( sect, "wpn_", 1, true )
                            and not strpos( sect, "wpn_addon_", 1, true )
                            and ( sect ~= "wpn_binoc" ) and ( sect ~= "wpn_knife" )
                        then
                            return true
                        end
                    end
                end
            end
        end
    end
    return false
end

function not_have_actor_any_wpn() return not have_actor_any_wpn() end
function psy_health_v_reduse()  params.psy_health_v_add( -0.1 ) end
function psy_health_v_norm()  params.psy_health_v_add( 1 ) end

local torch_load = true

function torch_id_norm()
    torch_id    = BAD_OBJ_ID
    local torch = db.actor:item_in_slot( 9 )
    if torch == nil then torch_id = nil return end
    torch_id    = torch:id()
end

mode_switch = 1

function modes_swith_on()
    if params.get_torch_on_off( torch_id ) == 1 then
        if mode_switch == 1 then mode_switch = 2 else mode_switch = 1 end
        torch_brock( true, true )
    end
end

function torch_brock( switcher, sw )
    if torch_id and ( params.get_torch_on_off( torch_id ) == 1 or switcher ) then
        if lua_random() < 0.16 and not sw then
            local r_t = ( r_old * ( lua_random( 3, 10 ) ) / 10 )
            params.set_torch_param( torch_id, r_t, r_t, r_t, mode_switch )
            local time_flash = lua_random( 1, 3 )
            timers.start_timer( "t_torch_flash", time_flash, "sak.torch_brock()" )
            return
        end
        r_old = r_old + ( mode_switch - 1 ) * 0.1
        local r_new, g_new = r_old, ( r_old - 0.07 )
        if r_new > 0.11 and not sw then
            r_new = r_new - ( 0.007 * ( mode_switch * 2 ) )
            g_new = g_new - ( 0.007 * ( mode_switch * 2 ) )
        end
        params.set_torch_param( torch_id, r_new, g_new, g_new, mode_switch )
        r_old = r_new - ( mode_switch - 1 ) * 0.1
        nlc_vars.light_torch = r_old
    end
    if db.actor:has_info( "pda_is_broken" ) and flag_sah == false then
        out_many_pda_broken()
    end
    timers.start_timer( "t_torch_brock", 31, "sak.torch_brock()" )
end

function new_batt_torch()
    local self = level.main_input_receiver()
    if self then self:GetHolder():start_stop_menu( self, true ) end
    local sound = xr_sound.get_safe_sound_object( "device\\alkseur\\use_battery" )
    sound:play_at_pos( db.actor, vector(), 0, sound_object.s2d )
    schedule.add( "batter_change", "sak.batt_torch_switch_end()", 6000 )
    level.disable_input()
    level.add_cam_effector( "camera_effects\\item_use.anm", 9553, false, "" )
end

function batt_torch_switch_end()
    level.enable_input()
    r_old = 0.95
    nlc_vars.light_torch = r_old
    torch_brock( true, true )
end

function torch_npc_brock( id )
    if torch_id then
        local rnd_r = 0.65 - ( lua_random() / 2 )
        local r_new, g_new = rnd_r, ( rnd_r - 0.05 )
        params.set_torch_param( id, r_new, g_new, g_new )
    end
end

function sleep_discharge_torch( hour )
    if torch_id and params.get_torch_on_off( torch_id ) == 1 then
        r_old = 0.13
        local r_new, g_new = r_old, ( r_old-0.07 )
        params.set_torch_param( torch_id, r_new, g_new, g_new, mode_switch )
        nlc_vars.light_torch = r_old
    end
end

function start_fire()
    if db.actor:active_slot() == 1 then
        local slot_1 = db.actor:item_in_slot( 1 )
        wpn_params.start_fire( slot_1:id() )
        local fire = lua_random( 1000, 5000 )
        schedule.add( "wpn_fire", "sak.stop_fire("..slot_1:id()..")", fire )
    elseif db.actor:active_slot() == 2 then
        local slot_2 = db.actor:item_in_slot( 2 )
        wpn_params.start_fire( slot_2:id() )
        local fire = lua_random( 1000, 5000 )
        schedule.add( "wpn_fire", "sak.stop_fire("..slot_2:id()..")", fire )
    end
end

function stop_fire( id ) wpn_params.end_fire( id ) end

function drop_weapon()
    if xr_build_id > 5670 then return end
    local slot_1 = db.actor:item_in_slot( 1 )
    local slot_2 = db.actor:item_in_slot( 2 )
    if slot_1 ~= nil and slot_2 ~= nil then
        local sys_slot1  = system_ini():r_float( slot_1:section(), "slot" )
        local fact_slot1 = wpn_params.wpn_prop( slot_1:id(), "slot" )
        local sys_slot2  = system_ini():r_float( slot_2:section(), "slot" )
        local fact_slot2 = wpn_params.wpn_prop( slot_2:id(), "slot" )
        if sys_slot1 ~= fact_slot1 or sys_slot2 ~= fact_slot2 then
            actor_params.toggle_slot( slot_1:id(), false )
            local flag = 1
            schedule.add(
                "wpn_return", "wpn_params.toggle_slot("..slot_1:id()..","..flag..")", 300
            )
            timers.start_timer( "weap_return", 3, "sak.return_weapon("..slot_1:id()..")" )
        end
    end
end

function return_weapon( id )
    local slot_1 = db.actor:item_in_slot( 1 )
    if slot_1 ~= nil or client_obj( id ) == nil or g_sim:object( id ).parent_id ~= 0 then return end
    wpn_params.toggle_slot( id, false )
    wpn_params.wpn_set_int_prop( id, "dest_slot_byte", 1 )
    wpn_params.toggle_slot( id, true )
end

function assistant_kill()
    if not has_alife_info( "assistant_2_go" ) then
        local obj= g_sim:story_object( story_ids.assistant )
        if obj and obj:alive() and obj.online then
            obj = client_obj( obj.id )
            obj:kill( obj )
        end
    end
end

local bun_screen = 1

function bun_comp_enter()
    local rand   = ( amk_vars.r_treas_items or 1 )
    local tex    = rand..bun_screen.."2"
    texman.swap_bun_screen( tex )
    bun_screen   = bun_screen + 1
    if bun_screen > 9 then bun_screen = 1 end
end

function bun_klava_sound()
    local act   = db.actor
    local sound = sound_object( "device\\keyboard_" .. lua_random( 1, 3 ) )
    sound:play_at_pos( act, act:position(), 0 )
end

function cats_near()
    local cats     = false
    local ids, cnt = registry.clsid_objects( CLID_CAT, CLID_CAT, true, nil, 7 )
    for n = 1, cnt do
        local id  = ids[ n ]
        local obj = client_obj( id )
        if obj and obj:alive() then
            local act_pos = db.actor:position()
            local pos     = obj:position()
            local dist    = pos:distance_to( act_pos )
            if dist < 10 then
                cats = true
                break
            end
        end
    end
    return cats
end
--++ ?? что это и зачем?
function add_anom_spot()
    local actor   = db.actor
    local dir     = device().cam_dir
    local a       = vector() a.y = math.atan2( dir.x, dir.z )
    local xdelta  = 6 * math.sin( a.y )
    local zdelta  = 6 * math.cos( a.y )
    local act_pos = actor:position()
    local lvid    = actor:level_vertex_id()
    local gvid    = actor:game_vertex_id()
    local robjd   = amk.spawn_item( "dots_item",
        v3f( ( act_pos.x + xdelta ), ( act_pos.y - 1 ), ( act_pos.z + zdelta ) ), gvid, lvid
    )
    amk.add_spot_on_map( robjd.id, "anomaly_zone_location", "%c[255,255,0,0] аномалия" )
end

function get_command( com ) get_console():execute( com ) end
function get_sound() vergas_lib.s_play( [[actor\gas_mask_light]], 0.15 ) end

function dbglog( fmt, ...)
    local msg       = string.format( fmt, ... )
    local msg_no_ws = string.gsub( msg, "%s", "___" )
    get_command( "dbg:" .. msg_no_ws )
end

function init_module() sak.have_item_namber = have_items_count end

function sak.late_init()
    discharge_accum()
    AddRegularTask( "sak.discharge_tasks", sak.discharge_tasks, nil, 0, 12000 )
    AddRegularTask( "sak.actor_bio",       sak.actor_bio,       nil, 0, 5000  )
end

--функция для спавна тайника Волка
function add_vil_ranger_treasure()
    if not has_alife_info( "petruha_info_treasure" ) then
        sak_dialog.added_vil_ranger_treasure()
        send_tip(
            "Ну ищи, щенок, если такой настырный. Может где-то рядом, а может и нет... Главное - внимательнее под ноги смотри.",
            "Из записки Волка", 5, 15, "g_g", "sak", "yellow"
        )
        db.actor:give_info_portion( "petruha_info_treasure" )
    end
end
--при взятии содержимого тайника Волка получим смс
function info_volk_pda()
    send_tip(
        "Странный набор, может сборка... Надо обязательно поговорить с Волком",
        "Надо запомнить", 5, 15, "g_g", "sak", "yellow"
    )
end
--тайник Мюллера 2
function add_muller_treasure2()
    local treases = { 5855, 5854, 5859, 5861, 5863 }
    local sid     = lua_random( 1, #treases )
    local obj     = g_sim:story_object( treases[ sid ] )
    if obj then
        misc.spawn_to( test.rnd_rec_art_info( test.tbl_arts, 1, 5 ), obj )  -- рандомный арт 1 ур 5 дана
        for a = 1, 2 do misc.spawn_to( "antirad", obj ) end
    end
end
--dsc_stalker
function add_dsc_stalker()
    local obj1 = g_sim:story_object( story_ids.dsc_stalker_corps1_03 )
    g_sim:create(
        "wpn_wincheaster1300", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id
    )
    off_on( obj1 )
end
--slip_mayat
function info_klyk_remember()
    send_tip(
        "Кто-то кого-то выносил из опасного места... там был Клык?!",
        "Воспоминание", 2, 20, "g_g", "rememb", "yellow"
    )
end

local tex_sw, tex_switcher = 0, 0

function tex_switch_num( max )
    if max == 3 then
        if     tex_sw == 0 then tex_sw = 1
        elseif tex_sw == 1 then tex_sw = 2
        elseif tex_sw == 2 then tex_sw = 3
        elseif tex_sw == 3 then tex_sw = 0
        end
    else
        if     tex_switcher == 0 then tex_switcher = 1
        elseif tex_switcher == 1 then tex_switcher = 0
        end
    end
end

function sak_key()
    local active_item = db.actor:active_item()
    if active_item then
        local active_sect = active_item:section()
        if strposx( active_sect, "_cobra" ) then
            texman.swap_simple( "wpnv\\addons\\cobra\\collimator", tostring( tex_sw ) )
            misc.easy_sound   ( "weapons\\light_on" )
            tex_switch_num    ( 3 )
        elseif strposx( active_sect, "_acog" ) then
            texman.swap_simple( "wpnv\\addons\\elcan\\cetka", tostring( tex_sw ) )
            texman.swap_simple( "wpnv\\addons\\elcan\\setka", tostring( tex_sw ) )
            misc.easy_sound   ( "weapons\\light_on" )
            tex_switch_num    ( 3 )
        elseif strposx( active_sect, "_1p78" ) then
            texman.swap_simple( "wpnv\\addons\\1p78\\crosshair", tostring( tex_switcher ) )
            texman.swap_simple( "wpnv\\addons\\1p78\\krosshair", tostring( tex_switcher ) )
            misc.easy_sound   ( "weapons\\light_on" )
            tex_switch_num    ( 2 )
        elseif strposx( active_sect, "_1pso" ) then
            texman.swap_simple( "wpnv\\addons\\pso1\\kross", tostring( tex_switcher ) )
            texman.swap_simple( "wpnv\\addons\\pso1\\cross", tostring( tex_switcher ) )
            misc.easy_sound   ( "weapons\\light_on" )
            tex_switch_num    ( 2 )
        elseif strposx( active_sect, "_eotech" ) then
            texman.swap_simple( "wpnv\\addons\\eotech\\mark", tostring( tex_switcher ) )
            misc.easy_sound( "weapons\\light_on" )
            tex_switch_num    ( 2 )
        elseif strposx( active_sect, "_mt" ) then
            texman.swap_simple( "wpnv\\addons\\march_tactical\\cross", tostring( tex_switcher ) )
            texman.swap_simple( "wpnv\\addons\\march_tactical\\kross", tostring( tex_switcher ) )
            misc.easy_sound   ( "weapons\\light_on" )
            tex_switch_num    ( 2 )
        end
    end
end
-- dsh_func
-- ecolog_apparat
function given_spots_on_map_marsh()
    for i = 1, 4 do
        local sobj = alife():object( "ecolog_apparat_0"..i )
        --ODS( string.format( "dsh: found %s", sobj:name() ) )
        if sobj then
            amk.add_spot_on_map( sobj.id, "crlc_big_treasure3", "ecolog_apparat_spot" )
        end
    end
end

function given_spots_on_map_aver()
    for i = 7, 9 do
        local sobj = alife():object( "ecolog_apparat_0"..i )
        --ODS( string.format( "dsh: found %s", sobj:name() ) )
        if sobj then
            amk.add_spot_on_map( sobj.id, "crlc_big_treasure3", "ecolog_apparat_spot" )
        end
    end
end

function given_spots_on_map_rf()
    for i = 5, 6 do
        local sobj = alife():object( "ecolog_apparat_0"..i )
        --ODS( string.format( "dsh: found %s", sobj:name() ) )
        if sobj then
            amk.add_spot_on_map( sobj.id, "crlc_big_treasure3", "ecolog_apparat_spot" )
        end
    end
end

function remove_spot_from_logic( actor, obj, p )
    local spot_name = p[ 1 ]
    amk.remove_spot_from_map( obj:id(), spot_name )
end

--отпускаем непися в свободное плавание
function make_any_npc_free()
    -- ; story_id нужного непися
    local i    = story_ids.gar_stalker_flame_quest23
    local sobj = alife():story_object( i )
    if sobj and sobj:alive()  then
        loc_tbl  = {}
        local pk = get_netpk( sobj, 1 )
        ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", sobj:name() )
        local data                = pk:get()
        data.base_in_restrictors  = ""
        data.base_out_restrictors = ""
        data.custom_data          = ""
        data.story_id             = -1
        pk:set( data )
        smart_terrain.unregister_npc( sobj )
        sobj.smart_terrain_conditions = nil
        sobj:brain():update()
    end
end
--new_ivancov
function ivancov_x10_time_start()
    timers.start_timer( "ivancov_x10", 0, 1, 28, "sak.time_ivancov_x10()" )
end

function time_ivancov_x10()
    send_tip( "Меченный, подходи в Бар, есть разговор.", "Сообщение от Иванцова", 11, 20, "dolg", "sak", "green" )
end

function ivancov_x10harddisc_time_start()
    timers.start_timer( "ivancov_x10harddisc", 0, 10, 28, "sak.time_ivancov_x10harddisc()" )
end

function time_ivancov_x10harddisc()
    send_tip( "Меченный, подходи, есть мысли.", "Сообщение от Иванцова", 11, 20, "dolg", "sak", "green" )
    db.actor:give_info_portion( "ivancov_mil_dialog_start" )
end

--barman_return_x18_1_dialog
function spawn_flamethrower_bad()
    local spawn = {
        { -137.03501892090, -0.00013071298599, 121.91954803467, 66344, 1413 },
        { -188.79943847656, -0.01469749212265, 145.61920166016, 66349, 1413 },
        { -193.17945861816, -0.01310071349144, 118.94592285156, 66341, 1413 },
        { -171.70327758789, -0.01343187689781, 84.791198730469, 66341, 1413 },
        { -152.51071166992, -0.01061651110649, 113.26029968262, 38211, 1320 },
        { -162.42048645020, -0.02438381314277, 122.77035522461, 35105, 1320 },
        { -216.94375610352,  1.45152747631070, 123.47163391113, 34641, 1320 }
    }
    local ps  = lua_random( 1, #spawn )
    local obj = create_corpse( "trup_stalker",
        v3f( spawn[ ps ][ 1 ], spawn[ ps ][ 2 ], spawn[ ps ][ 3 ] ),
        spawn[ ps ][ 5 ], spawn[ ps ][ 4 ], 1111
    )
    misc.spawn_to( "flamethrower_bad", obj )
end

function timer_exo_charge_half_start()
    timers.start_timer( "t_upgrade_start", 0, 2, 5, "sak.timer_exo_charge_half_end()" )
end

function timer_exo_charge_full_start()
    timers.start_timer( "t_upgrade_start", 0, 4, 5, "sak.timer_exo_charge_full_end()" )
end

function timer_exo_charge_half_end()
    send_tip(
        "Подваливай в гости, зарядилась твоя экза.",
        "Долговязый беспокоит", 11, 20, "ecolog", "sak", "green"
    )
    if db.actor:has_info( "exo_charge_half_start" ) then
        db.actor:give_info_portion( "exo_charge_half_done" )
    end
end

function timer_exo_charge_full_end()
    send_tip(
        "Твой экзоскелет заряжен, подходи забирай.",
        "Это Долговязый", 11, 20, "ecolog", "sak", "green"
    )
    if db.actor:has_info( "exo_charge_full_start" ) then
        db.actor:give_info_portion( "exo_charge_full_done" )
    end
end

function off_on( sobj )
    if sobj.online then
        sim:set_switch_online ( sobj.id, false )
        sim:set_switch_offline( sobj.id, true  )
        amk.convert_npc[ sobj.id ] = 1
    end
end